public class WrapClass 
{
    private final java.lang.String insertFormats(java.lang.String, java.util.ArrayList)
    {
        org.apache.commons.lang3.text.ExtendedMessageFormat this;
        java.lang.String pattern, customPattern, temp$17, temp$24;
        java.util.ArrayList customPatterns;
        boolean temp$0;
        java.lang.StringBuilder sb, temp$1, temp$9, temp$12, temp$15, temp$18, temp$19, temp$22;
        int temp$2, temp$3, fe, depth, temp$5, temp$6, temp$7, temp$10, temp$11, temp$14, temp$20, temp$21;
        java.text.ParsePosition pos, temp$4, temp$13, temp$23;
        char c, temp$8;
        java.lang.Object temp$16;

        this := @this: org.apache.commons.lang3.text.ExtendedMessageFormat;
        pattern := @parameter0: java.lang.String;
        customPatterns := @parameter1: java.util.ArrayList;
        temp$0 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: boolean containsElements(java.util.Collection)>(customPatterns);
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        return pattern;

     label1:
        nop;
        temp$1 = new java.lang.StringBuilder;
        temp$2 = virtualinvoke pattern.<java.lang.String: int length()>();
        temp$3 = temp$2 * 2;
        specialinvoke temp$1.<java.lang.StringBuilder: void <init>(int)>(temp$3);
        sb = temp$1;
        temp$4 = new java.text.ParsePosition;
        specialinvoke temp$4.<java.text.ParsePosition: void <init>(int)>(0);
        pos = temp$4;
        fe = -1;
        depth = 0;

     label2:
        nop;
        temp$5 = virtualinvoke pos.<java.text.ParsePosition: int getIndex()>();
        temp$6 = virtualinvoke pattern.<java.lang.String: int length()>();
        if temp$5 < temp$6 goto label3;

        goto label14;

     label3:
        nop;
        temp$7 = virtualinvoke pos.<java.text.ParsePosition: int getIndex()>();
        temp$8 = virtualinvoke pattern.<java.lang.String: char charAt(int)>(temp$7);
        c = temp$8;
        goto label12;

     label4:
        nop;
        temp$9 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.lang.StringBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)>(pattern, pos, sb);
        goto label13;

     label5:
        nop;
        temp$10 = depth;
        temp$11 = temp$10 + 1;
        depth = temp$11;
        temp$12 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);
        temp$13 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(pos);
        temp$14 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: int readArgumentIndex(java.lang.String,java.text.ParsePosition)>(pattern, temp$13);
        temp$15 = virtualinvoke temp$12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(temp$14);
        if depth == 1 goto label6;

        goto label9;

     label6:
        nop;
        temp$16 = virtualinvoke customPatterns.<java.util.ArrayList: java.lang.Object get(int)>(fe);
        temp$17 = (java.lang.String) temp$16;
        customPattern = temp$17;
        if customPattern != null goto label7;

        goto label8;

     label7:
        nop;
        temp$18 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        temp$19 = virtualinvoke temp$18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(customPattern);

     label8:
        nop;

     label9:
        nop;
        goto label13;

     label10:
        nop;
        temp$20 = depth;
        temp$21 = temp$20 + -1;
        depth = temp$21;

     label11:
        nop;
        temp$22 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);
        temp$23 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(pos);
        goto label13;

     label12:
        nop;
        nop;
        lookupswitch(c)
        {
            case 39: goto label4;
            case 123: goto label5;
            case 125: goto label10;
            default: goto label11;
        };

     label13:
        nop;
        goto label2;

     label14:
        nop;
        temp$24 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$24;
    }
}
