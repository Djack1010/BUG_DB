public class WrapClass 
{
    public static java.math.BigDecimal createBigDecimal(java.lang.String)
    {
        java.lang.String str, temp$3, temp$7;
        java.math.BigDecimal temp$0, temp$8;
        boolean temp$1, temp$4;
        java.lang.NumberFormatException temp$2, temp$5;
        java.lang.StringBuffer temp$6;

        str := @parameter0: java.lang.String;
        if str == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = null;
        return temp$0;

     label1:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(str);
        if temp$1 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$2 = new java.lang.NumberFormatException;
        specialinvoke temp$2.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number");
        throw temp$2;

     label3:
        nop;
        temp$3 = virtualinvoke str.<java.lang.String: java.lang.String trim()>();
        temp$4 = virtualinvoke temp$3.<java.lang.String: boolean startsWith(java.lang.String)>("--");
        if temp$4 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$5 = new java.lang.NumberFormatException;
        temp$6 = new java.lang.StringBuffer;
        specialinvoke temp$6.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(str);
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is not a valid number.");
        temp$7 = virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$5.<java.lang.NumberFormatException: void <init>(java.lang.String)>(temp$7);
        throw temp$5;

     label5:
        nop;
        temp$8 = new java.math.BigDecimal;
        specialinvoke temp$8.<java.math.BigDecimal: void <init>(java.lang.String)>(str);
        return temp$8;
    }
}
