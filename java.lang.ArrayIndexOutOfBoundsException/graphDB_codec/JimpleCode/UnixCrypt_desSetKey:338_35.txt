public class WrapClass 
{
    private static final int[] desSetKey(byte[])
    {
        byte[] key;
        int[] schedule, results, temp$2, temp$5, temp$10, temp$13, temp$16, temp$19, temp$22, temp$25, temp$61, temp$66, temp$78, temp$89, temp$103, temp$108, temp$120, temp$128, temp$137, temp$150;
        int c, temp$0, d, temp$1, temp$3, temp$4, temp$6, temp$7, temp$8, temp$9, temp$11, temp$12, temp$14, temp$15, temp$17, temp$18, temp$20, temp$21, temp$23, temp$24, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, j, i, temp$41, temp$43, temp$44, temp$45, temp$46, temp$47, temp$48, temp$49, temp$50, temp$51, temp$52, temp$53, temp$54, temp$55, temp$56, temp$57, temp$58, s, temp$60, temp$62, temp$63, temp$65, temp$67, temp$68, temp$69, temp$70, temp$71, temp$72, temp$73, temp$74, temp$75, temp$77, temp$79, temp$80, temp$81, temp$82, temp$83, temp$84, temp$85, temp$86, temp$88, temp$90, temp$91, temp$92, temp$93, temp$94, temp$95, temp$96, temp$97, temp$98, temp$99, temp$100, t, temp$102, temp$104, temp$105, temp$107, temp$109, temp$110, temp$111, temp$112, temp$113, temp$114, temp$115, temp$116, temp$117, temp$119, temp$121, temp$122, temp$123, temp$124, temp$125, temp$127, temp$129, temp$130, temp$131, temp$132, temp$133, temp$134, temp$135, temp$136, temp$138, temp$139, temp$140, temp$141, temp$142, temp$143, temp$144, temp$145, temp$146, temp$147, temp$148, temp$149, temp$151, temp$152, temp$153, temp$154, temp$155;
        boolean[] temp$40;
        boolean temp$42;
        int[][] temp$59, temp$64, temp$76, temp$87, temp$101, temp$106, temp$118, temp$126;

        key := @parameter0: byte[];
        schedule = newarray (int)[32];
        temp$0 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: int fourBytesToInt(byte[],int)>(key, 0);
        c = temp$0;
        temp$1 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: int fourBytesToInt(byte[],int)>(key, 4);
        d = temp$1;
        results = newarray (int)[2];
        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: void permOp(int,int,int,int,int[])>(d, c, 4, 252645135, results);
        temp$2 = results;
        temp$3 = 0;
        temp$4 = temp$2[temp$3];
        d = temp$4;
        temp$5 = results;
        temp$6 = 1;
        temp$7 = temp$5[temp$6];
        c = temp$7;
        temp$8 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: int hPermOp(int,int,int)>(c, -2, -859045888);
        c = temp$8;
        temp$9 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: int hPermOp(int,int,int)>(d, -2, -859045888);
        d = temp$9;
        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: void permOp(int,int,int,int,int[])>(d, c, 1, 1431655765, results);
        temp$10 = results;
        temp$11 = 0;
        temp$12 = temp$10[temp$11];
        d = temp$12;
        temp$13 = results;
        temp$14 = 1;
        temp$15 = temp$13[temp$14];
        c = temp$15;
        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: void permOp(int,int,int,int,int[])>(c, d, 8, 16711935, results);
        temp$16 = results;
        temp$17 = 0;
        temp$18 = temp$16[temp$17];
        c = temp$18;
        temp$19 = results;
        temp$20 = 1;
        temp$21 = temp$19[temp$20];
        d = temp$21;
        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: void permOp(int,int,int,int,int[])>(d, c, 1, 1431655765, results);
        temp$22 = results;
        temp$23 = 0;
        temp$24 = temp$22[temp$23];
        d = temp$24;
        temp$25 = results;
        temp$26 = -1;
        temp$27 = temp$25[temp$26];
        c = temp$27;
        temp$28 = d & 255;
        temp$29 = temp$28 << 16;
        temp$30 = d & 65280;
        temp$31 = temp$29 | temp$30;
        temp$32 = d & 16711680;
        temp$33 = temp$32 >>> 16;
        temp$34 = temp$31 | temp$33;
        temp$35 = c & -268435456;
        temp$36 = temp$35 >>> 4;
        temp$37 = temp$34 | temp$36;
        d = temp$37;
        temp$38 = c;
        temp$39 = temp$38 & 268435455;
        c = temp$39;
        j = 0;
        i = 0;

     label0:
        nop;
        if i < 16 goto label1;

        goto label5;

     label1:
        nop;
        temp$40 = <org.apache.commons.codec.digest.UnixCrypt: boolean[] SHIFT2>;
        temp$41 = i;
        temp$42 = temp$40[temp$41];
        if temp$42 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$43 = c >>> 2;
        temp$44 = c << 26;
        temp$45 = temp$43 | temp$44;
        c = temp$45;
        temp$46 = d >>> 2;
        temp$47 = d << 26;
        temp$48 = temp$46 | temp$47;
        d = temp$48;
        goto label4;

     label3:
        nop;
        temp$49 = c >>> 1;
        temp$50 = c << 27;
        temp$51 = temp$49 | temp$50;
        c = temp$51;
        temp$52 = d >>> 1;
        temp$53 = d << 27;
        temp$54 = temp$52 | temp$53;
        d = temp$54;

     label4:
        nop;
        temp$55 = c;
        temp$56 = temp$55 & 268435455;
        c = temp$56;
        temp$57 = d;
        temp$58 = temp$57 & 268435455;
        d = temp$58;
        temp$59 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$60 = 0;
        temp$61 = temp$59[temp$60];
        temp$62 = c & 63;
        temp$63 = temp$62;
        temp$64 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$65 = 1;
        temp$66 = temp$64[temp$65];
        temp$67 = c >>> 6;
        temp$68 = temp$67 & 3;
        temp$69 = c >>> 7;
        temp$70 = temp$69 & 60;
        temp$71 = temp$68 | temp$70;
        temp$72 = temp$71;
        temp$73 = temp$61[temp$63];
        temp$74 = temp$66[temp$72];
        temp$75 = temp$73 | temp$74;
        temp$76 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$77 = 2;
        temp$78 = temp$76[temp$77];
        temp$79 = c >>> 13;
        temp$80 = temp$79 & 15;
        temp$81 = c >>> 14;
        temp$82 = temp$81 & 48;
        temp$83 = temp$80 | temp$82;
        temp$84 = temp$83;
        temp$85 = temp$78[temp$84];
        temp$86 = temp$75 | temp$85;
        temp$87 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$88 = 3;
        temp$89 = temp$87[temp$88];
        temp$90 = c >>> 20;
        temp$91 = temp$90 & 1;
        temp$92 = c >>> 21;
        temp$93 = temp$92 & 6;
        temp$94 = temp$91 | temp$93;
        temp$95 = c >>> 22;
        temp$96 = temp$95 & 56;
        temp$97 = temp$94 | temp$96;
        temp$98 = temp$97;
        temp$99 = temp$89[temp$98];
        temp$100 = temp$86 | temp$99;
        s = temp$100;
        temp$101 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$102 = 4;
        temp$103 = temp$101[temp$102];
        temp$104 = d & 63;
        temp$105 = temp$104;
        temp$106 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$107 = 5;
        temp$108 = temp$106[temp$107];
        temp$109 = d >>> 7;
        temp$110 = temp$109 & 3;
        temp$111 = d >>> 8;
        temp$112 = temp$111 & 60;
        temp$113 = temp$110 | temp$112;
        temp$114 = temp$113;
        temp$115 = temp$103[temp$105];
        temp$116 = temp$108[temp$114];
        temp$117 = temp$115 | temp$116;
        temp$118 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$119 = 6;
        temp$120 = temp$118[temp$119];
        temp$121 = d >>> 15;
        temp$122 = temp$121 & 63;
        temp$123 = temp$122;
        temp$124 = temp$120[temp$123];
        temp$125 = temp$117 | temp$124;
        temp$126 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SKB>;
        temp$127 = 7;
        temp$128 = temp$126[temp$127];
        temp$129 = d >>> 21;
        temp$130 = temp$129 & 15;
        temp$131 = d >>> 22;
        temp$132 = temp$131 & 48;
        temp$133 = temp$130 | temp$132;
        temp$134 = temp$133;
        temp$135 = temp$128[temp$134];
        temp$136 = temp$125 | temp$135;
        t = temp$136;
        temp$137 = schedule;
        temp$138 = j;
        temp$139 = temp$138 + 1;
        j = temp$139;
        temp$140 = temp$138;
        temp$141 = t << 16;
        temp$142 = s & 65535;
        temp$143 = temp$141 | temp$142;
        temp$137[temp$140] = temp$143;
        temp$144 = s >>> 16;
        temp$145 = t & -65536;
        temp$146 = temp$144 | temp$145;
        s = temp$146;
        temp$147 = s << 4;
        temp$148 = s >>> 28;
        temp$149 = temp$147 | temp$148;
        s = temp$149;
        temp$150 = schedule;
        temp$151 = j;
        temp$152 = temp$151 + 1;
        j = temp$152;
        temp$153 = temp$151;
        temp$150[temp$153] = s;
        nop;
        temp$154 = i;
        temp$155 = temp$154 + 1;
        i = temp$155;
        goto label0;

     label5:
        nop;
        return schedule;
    }
}
