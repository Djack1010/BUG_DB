public class WrapClass 
{
    private final char map(char)
    {
        org.apache.commons.codec.language.Soundex this;
        char ch, temp$7;
        int index, temp$0, temp$1, temp$6;
        java.lang.IllegalArgumentException temp$2;
        java.lang.StringBuffer temp$3;
        java.lang.String temp$4;
        char[] temp$5;

        this := @this: org.apache.commons.codec.language.Soundex;
        ch := @parameter0: char;
        temp$0 = (int) ch;
        temp$1 = temp$0 - 65;
        index = temp$1;
        temp$2 = new java.lang.IllegalArgumentException;
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("The character is not mapped: ");
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(ch);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" (index=");
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(index);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(")");
        temp$4 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$4);
        throw temp$2;

        temp$5 = this.<org.apache.commons.codec.language.Soundex: char[] soundexMapping>;
        temp$6 = index;
        temp$7 = temp$5[temp$6];
        return temp$7;
    }
}
