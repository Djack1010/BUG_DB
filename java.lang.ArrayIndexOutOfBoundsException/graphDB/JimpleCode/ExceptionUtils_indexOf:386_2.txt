public class WrapClass 
{
    private static final int indexOf(java.lang.Throwable, java.lang.Class, int, boolean)
    {
        java.lang.Throwable throwable, temp$7, temp$15;
        java.lang.Class type, temp$8, temp$16;
        int fromIndex, temp$0, temp$2, temp$3, i, temp$4, temp$6, temp$10, temp$11, i, temp$12, temp$14, temp$18, temp$19, temp$20;
        boolean subclass, temp$9, temp$17;
        java.lang.Throwable[] throwables, temp$1, temp$5, temp$13;

        throwable := @parameter0: java.lang.Throwable;
        type := @parameter1: java.lang.Class;
        fromIndex := @parameter2: int;
        subclass := @parameter3: boolean;
        if throwable == null goto label1;

        goto label0;

     label0:
        nop;
        if type == null goto label1;

        goto label2;

        goto label2;

     label1:
        nop;
        temp$0 = -1;
        return temp$0;

     label2:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.exception.ExceptionUtils: java.lang.Throwable[] getThrowables(java.lang.Throwable)>(throwable);
        throwables = temp$1;
        temp$2 = lengthof throwables;
        if fromIndex >= temp$2 goto label3;

        goto label4;

     label3:
        nop;
        temp$3 = -1;
        return temp$3;

     label4:
        nop;
        if subclass == 0 goto label11;

        goto label5;

     label5:
        nop;
        i = fromIndex;

     label6:
        nop;
        temp$4 = lengthof throwables;
        if i < temp$4 goto label7;

        goto label10;

     label7:
        nop;
        temp$5 = throwables;
        temp$6 = i;
        temp$7 = temp$5[temp$6];
        temp$8 = virtualinvoke temp$7.<java.lang.Throwable: java.lang.Class getClass()>();
        temp$9 = virtualinvoke type.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(temp$8);
        if temp$9 == 0 goto label9;

        goto label8;

     label8:
        nop;
        return i;

     label9:
        nop;
        nop;
        temp$10 = i;
        temp$11 = temp$10 + 1;
        i = temp$11;
        goto label6;

     label10:
        nop;
        goto label17;

     label11:
        nop;
        i = fromIndex;

     label12:
        nop;
        temp$12 = lengthof throwables;
        if i < temp$12 goto label13;

        goto label16;

     label13:
        nop;
        temp$13 = throwables;
        temp$14 = i;
        temp$15 = temp$13[temp$14];
        temp$16 = virtualinvoke temp$15.<java.lang.Throwable: java.lang.Class getClass()>();
        temp$17 = virtualinvoke type.<java.lang.Class: boolean equals(java.lang.Object)>(temp$16);
        if temp$17 == 0 goto label15;

        goto label14;

     label14:
        nop;
        return i;

     label15:
        nop;
        nop;
        temp$18 = i;
        temp$19 = temp$18 + 1;
        i = temp$19;
        goto label12;

     label16:
        nop;

     label17:
        nop;
        temp$20 = -1;
        return temp$20;
    }
}
