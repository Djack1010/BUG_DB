public class WrapClass 
{
    protected static char[] encodeHex(byte[], char[])
    {
        byte[] data, temp$6, temp$19;
        char[] toDigits, out, temp$1, temp$5, temp$14, temp$18;
        int l, temp$0, i, j, temp$2, temp$3, temp$4, temp$7, temp$9, temp$10, temp$11, temp$12, temp$15, temp$16, temp$17, temp$20, temp$22, temp$23, temp$24, temp$26, temp$27;
        byte temp$8, temp$21;
        char temp$13, temp$25;

        data := @parameter0: byte[];
        toDigits := @parameter1: char[];
        l = lengthof data;
        temp$0 = l << 1;
        out = newarray (char)[temp$0];
        i = 0;
        j = 0;

     label0:
        nop;
        if i < l goto label1;

        goto label2;

     label1:
        nop;
        temp$1 = out;
        temp$2 = j;
        temp$3 = temp$2 + 1;
        j = temp$3;
        temp$4 = temp$2;
        temp$5 = toDigits;
        temp$6 = data;
        temp$7 = i;
        temp$8 = temp$6[temp$7];
        temp$9 = (int) temp$8;
        temp$10 = -240 & temp$9;
        temp$11 = temp$10 >>> 4;
        temp$12 = temp$11;
        temp$13 = temp$5[temp$12];
        temp$1[temp$4] = temp$13;
        temp$14 = out;
        temp$15 = j;
        temp$16 = temp$15 + 1;
        j = temp$16;
        temp$17 = temp$15;
        temp$18 = toDigits;
        temp$19 = data;
        temp$20 = i;
        temp$21 = temp$19[temp$20];
        temp$22 = (int) temp$21;
        temp$23 = 15 & temp$22;
        temp$24 = temp$23;
        temp$25 = temp$18[temp$24];
        temp$14[temp$17] = temp$25;
        nop;
        temp$26 = i;
        temp$27 = temp$26 + 1;
        i = temp$27;
        goto label0;

     label2:
        nop;
        return out;
    }
}
