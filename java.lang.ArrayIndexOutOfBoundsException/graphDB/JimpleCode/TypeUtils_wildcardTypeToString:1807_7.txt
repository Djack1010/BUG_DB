public class WrapClass 
{
    private static final java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType)
    {
        java.lang.reflect.WildcardType w;
        java.lang.StringBuilder buf, temp$0, temp$1, temp$11, temp$12, temp$22, temp$23;
        java.lang.reflect.Type[] lowerBounds, temp$2, upperBounds, temp$3, temp$7, temp$18;
        int temp$4, temp$5, temp$8, temp$13, temp$14, temp$19;
        boolean temp$6, temp$10, temp$21;
        java.lang.reflect.Type temp$9, temp$20;
        java.lang.Class temp$15, temp$16, temp$17;
        java.lang.String temp$24;

        w := @parameter0: java.lang.reflect.WildcardType;
        temp$0 = new java.lang.StringBuilder;
        specialinvoke temp$0.<java.lang.StringBuilder: void <init>()>();
        temp$1 = virtualinvoke temp$0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);
        buf = temp$1;
        temp$2 = interfaceinvoke w.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();
        lowerBounds = temp$2;
        temp$3 = interfaceinvoke w.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
        upperBounds = temp$3;
        temp$4 = lengthof lowerBounds;
        if temp$4 > 1 goto label7;

        goto label0;

     label0:
        nop;
        temp$5 = lengthof lowerBounds;
        if temp$5 == 1 goto label2;

        goto label1;

     label1:
        nop;
        temp$6 = 0;
        goto label3;

     label2:
        nop;
        temp$6 = 1;

     label3:
        nop;
        temp$7 = lowerBounds;
        temp$8 = 0;
        temp$9 = temp$7[temp$8];
        if temp$9 != null goto label5;

        goto label4;

     label4:
        nop;
        temp$10 = 0;
        goto label6;

     label5:
        nop;
        temp$10 = 1;

     label6:
        nop;
        if temp$6 == temp$10 goto label7;

        goto label8;

        goto label8;

     label7:
        nop;
        temp$11 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" super ");
        temp$12 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])>(temp$11, " & ", lowerBounds);
        goto label15;

     label8:
        nop;
        temp$13 = lengthof upperBounds;
        if temp$13 > 1 goto label13;

        goto label9;

     label9:
        nop;
        temp$14 = lengthof upperBounds;
        if temp$14 == 1 goto label10;

        goto label14;

     label10:
        nop;
        temp$16 = <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object>;
        if temp$16 != null goto label11;

        temp$17 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$(java.lang.String)>("java.lang.Object");
        <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object> = temp$17;
        temp$15 = temp$17;
        goto label12;

     label11:
        nop;
        temp$15 = <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object>;

     label12:
        nop;
        temp$18 = upperBounds;
        temp$19 = 0;
        temp$20 = temp$18[temp$19];
        temp$21 = virtualinvoke temp$15.<java.lang.Class: boolean equals(java.lang.Object)>(temp$20);
        if temp$21 == 0 goto label13;

        goto label14;

        goto label13;

        goto label14;

     label13:
        nop;
        temp$22 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends ");
        temp$23 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])>(temp$22, " & ", upperBounds);

     label14:
        nop;

     label15:
        nop;
        temp$24 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$24;
    }
}
