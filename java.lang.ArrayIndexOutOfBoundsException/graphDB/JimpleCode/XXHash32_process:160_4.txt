public class WrapClass 
{
    private final void process(byte[], int)
    {
        org.apache.commons.codec.digest.XXHash32 this;
        byte[] b;
        int offset, s0, temp$1, s1, temp$3, s2, temp$5, s3, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$38, temp$40, temp$42, temp$44, temp$45;
        int[] temp$0, temp$2, temp$4, temp$6, temp$37, temp$39, temp$41, temp$43;

        this := @this: org.apache.commons.codec.digest.XXHash32;
        b := @parameter0: byte[];
        offset := @parameter1: int;
        temp$0 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$1 = 0;
        s0 = temp$0[temp$1];
        temp$2 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$3 = 1;
        s1 = temp$2[temp$3];
        temp$4 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$5 = 2;
        s2 = temp$4[temp$5];
        temp$6 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$7 = 3;
        s3 = temp$6[temp$7];
        temp$8 = s0;
        temp$9 = staticinvoke <org.apache.commons.codec.digest.XXHash32: int getInt(byte[],int)>(b, offset);
        temp$10 = temp$9 * -2048144777;
        temp$11 = temp$8 + temp$10;
        temp$12 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(temp$11, 13);
        temp$13 = temp$12 * -1640531535;
        s0 = temp$13;
        temp$14 = s1;
        temp$15 = offset;
        temp$16 = temp$15 + 4;
        temp$17 = staticinvoke <org.apache.commons.codec.digest.XXHash32: int getInt(byte[],int)>(b, temp$16);
        temp$18 = temp$17 * -2048144777;
        temp$19 = temp$14 + temp$18;
        temp$20 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(temp$19, 13);
        temp$21 = temp$20 * -1640531535;
        s1 = temp$21;
        temp$22 = s2;
        temp$23 = offset - 8;
        temp$24 = staticinvoke <org.apache.commons.codec.digest.XXHash32: int getInt(byte[],int)>(b, temp$23);
        temp$25 = temp$24 * -2048144777;
        temp$26 = temp$22 + temp$25;
        temp$27 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(temp$26, 13);
        temp$28 = temp$27 * -1640531535;
        s2 = temp$28;
        temp$29 = s3;
        temp$30 = offset;
        temp$31 = temp$30 + 12;
        temp$32 = staticinvoke <org.apache.commons.codec.digest.XXHash32: int getInt(byte[],int)>(b, temp$31);
        temp$33 = temp$32 * -2048144777;
        temp$34 = temp$29 + temp$33;
        temp$35 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(temp$34, 13);
        temp$36 = temp$35 * -1640531535;
        s3 = temp$36;
        temp$37 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$38 = 0;
        temp$37[temp$38] = s0;
        temp$39 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$40 = 1;
        temp$39[temp$40] = s1;
        temp$41 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$42 = 2;
        temp$41[temp$42] = s2;
        temp$43 = this.<org.apache.commons.codec.digest.XXHash32: int[] state>;
        temp$44 = 3;
        temp$43[temp$44] = s3;
        temp$45 = 0;
        this.<org.apache.commons.codec.digest.XXHash32: int pos> = temp$45;
        return;
    }
}
