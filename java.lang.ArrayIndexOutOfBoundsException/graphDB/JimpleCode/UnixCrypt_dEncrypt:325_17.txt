public class WrapClass 
{
    private static final int dEncrypt(int, int, int, int, int, int[])
    {
        int el, r, s, e0, e1, v, temp$0, temp$1, u, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$9, temp$10, temp$11, t, temp$12, temp$13, temp$14, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$25, temp$27, temp$28, temp$30, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$39, temp$41, temp$42, temp$43, temp$44, temp$45, temp$47, temp$49, temp$50, temp$51, temp$52, temp$53, temp$55, temp$57, temp$58, temp$59, temp$60, temp$62, temp$64, temp$65, temp$66, temp$67, temp$68, temp$70, temp$72, temp$73, temp$74, temp$75, temp$76, temp$78, temp$80, temp$81, temp$82, temp$83, temp$84, temp$85;
        int[] sArr, temp$8, temp$15, temp$26, temp$31, temp$40, temp$48, temp$56, temp$63, temp$71, temp$79;
        int[][] temp$24, temp$29, temp$38, temp$46, temp$54, temp$61, temp$69, temp$77;

        el := @parameter0: int;
        r := @parameter1: int;
        s := @parameter2: int;
        e0 := @parameter3: int;
        e1 := @parameter4: int;
        sArr := @parameter5: int[];
        temp$0 = r >>> 16;
        temp$1 = r ^ temp$0;
        v = temp$1;
        temp$2 = v & e0;
        u = temp$2;
        temp$3 = v;
        temp$4 = temp$3 & e1;
        v = temp$4;
        temp$5 = u << 16;
        temp$6 = u ^ temp$5;
        temp$7 = temp$6 ^ r;
        temp$8 = sArr;
        temp$9 = s;
        temp$10 = temp$8[temp$9];
        temp$11 = temp$7 ^ temp$10;
        u = temp$11;
        temp$12 = v << 16;
        temp$13 = v ^ temp$12;
        temp$14 = temp$13 ^ r;
        temp$15 = sArr;
        temp$16 = s;
        temp$17 = temp$16 + 1;
        temp$18 = temp$15[temp$17];
        temp$19 = temp$14 ^ temp$18;
        t = temp$19;
        temp$20 = t >>> 4;
        temp$21 = t << 28;
        temp$22 = temp$20 | temp$21;
        t = temp$22;
        temp$23 = el;
        temp$24 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$25 = 1;
        temp$26 = temp$24[temp$25];
        temp$27 = t & 63;
        temp$28 = temp$27;
        temp$29 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$30 = 3;
        temp$31 = temp$29[temp$30];
        temp$32 = t >>> 8;
        temp$33 = temp$32 & 63;
        temp$34 = temp$33;
        temp$35 = temp$26[temp$28];
        temp$36 = temp$31[temp$34];
        temp$37 = temp$35 | temp$36;
        temp$38 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$39 = 5;
        temp$40 = temp$38[temp$39];
        temp$41 = t >>> 16;
        temp$42 = temp$41 & 63;
        temp$43 = temp$42;
        temp$44 = temp$40[temp$43];
        temp$45 = temp$37 | temp$44;
        temp$46 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$47 = 7;
        temp$48 = temp$46[temp$47];
        temp$49 = t >>> 24;
        temp$50 = temp$49 & 63;
        temp$51 = temp$50;
        temp$52 = temp$48[temp$51];
        temp$53 = temp$45 | temp$52;
        temp$54 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$55 = 0;
        temp$56 = temp$54[temp$55];
        temp$57 = u & -63;
        temp$58 = temp$57;
        temp$59 = temp$56[temp$58];
        temp$60 = temp$53 | temp$59;
        temp$61 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$62 = 2;
        temp$63 = temp$61[temp$62];
        temp$64 = u >>> 8;
        temp$65 = temp$64 & 63;
        temp$66 = temp$65;
        temp$67 = temp$63[temp$66];
        temp$68 = temp$60 | temp$67;
        temp$69 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$70 = 4;
        temp$71 = temp$69[temp$70];
        temp$72 = u >>> 16;
        temp$73 = temp$72 & 63;
        temp$74 = temp$73;
        temp$75 = temp$71[temp$74];
        temp$76 = temp$68 | temp$75;
        temp$77 = <org.apache.commons.codec.digest.UnixCrypt: int[][] SPTRANS>;
        temp$78 = 6;
        temp$79 = temp$77[temp$78];
        temp$80 = u >>> 24;
        temp$81 = temp$80 & 63;
        temp$82 = temp$81;
        temp$83 = temp$79[temp$82];
        temp$84 = temp$76 | temp$83;
        temp$85 = temp$23 ^ temp$84;
        el = temp$85;
        return el;
    }
}
