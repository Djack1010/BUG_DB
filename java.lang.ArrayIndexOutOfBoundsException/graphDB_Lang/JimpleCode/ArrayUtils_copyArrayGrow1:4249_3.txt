public class WrapClass 
{
    private static final java.lang.Object copyArrayGrow1(java.lang.Object, java.lang.Class)
    {
        java.lang.Object array, newArray, temp$5, temp$6;
        java.lang.Class newArrayComponentType, temp$1, temp$2;
        int arrayLength, temp$0, temp$3, temp$4;

        array := @parameter0: java.lang.Object;
        newArrayComponentType := @parameter1: java.lang.Class;
        if array != null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(array);
        arrayLength = temp$0;
        temp$1 = virtualinvoke array.<java.lang.Object: java.lang.Class getClass()>();
        temp$2 = virtualinvoke temp$1.<java.lang.Class: java.lang.Class getComponentType()>();
        temp$3 = arrayLength;
        temp$4 = temp$3 + 1;
        temp$5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(temp$2, temp$4);
        newArray = temp$5;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array, 0, newArray, 0, arrayLength);
        return newArray;

     label1:
        nop;
        temp$6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(newArrayComponentType, -1);
        return temp$6;
    }
}
