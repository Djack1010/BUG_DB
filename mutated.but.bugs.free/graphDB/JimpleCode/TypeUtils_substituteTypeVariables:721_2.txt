public class WrapClass 
{
    private static final java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type, java.util.Map)
    {
        java.lang.reflect.Type type, replacementType, temp$2;
        java.util.Map typeVarAssigns;
        boolean temp$0;
        java.lang.Object temp$1;

        type := @parameter0: java.lang.reflect.Type;
        typeVarAssigns := @parameter1: java.util.Map;
        temp$0 = type instanceof java.lang.reflect.TypeVariable;
        if temp$0 == 0 goto label2;

        goto label0;

     label0:
        nop;
        if typeVarAssigns != null goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = interfaceinvoke typeVarAssigns.<java.util.Map: java.lang.Object get(java.lang.Object)>(type);
        temp$2 = (java.lang.reflect.Type) temp$1;
        replacementType = temp$2;
        return replacementType;

     label2:
        nop;
        return type;
    }
}
