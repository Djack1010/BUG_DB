public class WrapClass 
{
    private static final java.lang.String classToString(java.lang.Class)
    {
        java.lang.Class c, temp$1, temp$2;
        java.lang.StringBuilder buf, temp$0, temp$4, temp$5, temp$7, temp$9;
        java.lang.String temp$3, temp$6, temp$8, temp$10;

        c := @parameter0: java.lang.Class;
        temp$0 = new java.lang.StringBuilder;
        specialinvoke temp$0.<java.lang.StringBuilder: void <init>()>();
        buf = temp$0;
        temp$1 = virtualinvoke c.<java.lang.Class: java.lang.Class getEnclosingClass()>();
        if temp$1 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = virtualinvoke c.<java.lang.Class: java.lang.Class getEnclosingClass()>();
        temp$3 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String classToString(java.lang.Class)>(temp$2);
        temp$4 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$3);
        temp$5 = virtualinvoke temp$4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        temp$6 = virtualinvoke c.<java.lang.Class: java.lang.String getSimpleName()>();
        temp$7 = virtualinvoke temp$5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$6);
        goto label2;

     label1:
        nop;
        temp$8 = virtualinvoke c.<java.lang.Class: java.lang.String getName()>();
        temp$9 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$8);

     label2:
        nop;
        temp$10 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$10;
    }
}
