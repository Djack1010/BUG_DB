public class WrapClass 
{
    public static java.lang.Object readStaticField(java.lang.Class, java.lang.String, boolean) throws java.lang.IllegalAccessException
    {
        java.lang.Class 'cls';
        java.lang.String fieldName;
        boolean forceAccess;
        java.lang.reflect.Field field, temp$0;
        java.lang.Object[] temp$1;
        java.lang.Object temp$2;

        'cls' := @parameter0: java.lang.Class;
        fieldName := @parameter1: java.lang.String;
        forceAccess := @parameter2: boolean;
        temp$0 = staticinvoke <org.apache.commons.lang3.reflect.FieldUtils: java.lang.reflect.Field getField(java.lang.Class,java.lang.String,boolean)>('cls', fieldName, forceAccess);
        field = temp$0;
        temp$1 = newarray (java.lang.Object)[2];
        temp$1[0] = fieldName;
        temp$1[1] = 'cls';
        staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(1, "Cannot locate field \'%s\' on %s", temp$1);
        temp$2 = staticinvoke <org.apache.commons.lang3.reflect.FieldUtils: java.lang.Object readStaticField(java.lang.reflect.Field,boolean)>(field, 0);
        return temp$2;
    }
}
