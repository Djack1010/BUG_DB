public class WrapClass 
{
    public static final java.lang.reflect.ParameterizedType parameterize(java.lang.Class, java.util.Map)
    {
        java.lang.Class raw, temp$2;
        java.util.Map typeArgMappings, temp$5;
        java.lang.Object[] temp$0, temp$3;
        java.lang.Object temp$1, temp$4;
        java.lang.reflect.ParameterizedType temp$6;

        raw := @parameter0: java.lang.Class;
        typeArgMappings := @parameter1: java.util.Map;
        temp$0 = newarray (java.lang.Object)[0];
        temp$1 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(raw, "raw class is null", temp$0);
        temp$2 = (java.lang.Class) temp$1;
        temp$3 = newarray (java.lang.Object)[0];
        temp$4 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(typeArgMappings, "typeArgMappings is null", temp$3);
        temp$5 = (java.util.Map) temp$4;
        temp$6 = null;
        return temp$6;
    }
}
