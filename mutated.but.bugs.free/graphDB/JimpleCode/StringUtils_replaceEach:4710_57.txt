public class WrapClass 
{
    private static final java.lang.String replaceEach(java.lang.String, java.lang.String[], java.lang.String[], boolean, int)
    {
        java.lang.String text, temp$5, temp$11, temp$14, temp$18, temp$21, temp$31, temp$34, temp$37, temp$41, temp$62, temp$67, temp$78, temp$81, temp$85, temp$88, result, temp$100, temp$102;
        java.lang.String[] searchList, replacementList, temp$9, temp$12, temp$16, temp$19, temp$29, temp$32, temp$35, temp$39, temp$60, temp$65, temp$76, temp$79, temp$83, temp$86;
        boolean repeat, temp$8, temp$15, temp$25, temp$75, temp$82, temp$92;
        int timeToLive, temp$0, temp$1, searchLength, replacementLength, textIndex, replaceIndex, tempIndex, i, temp$7, temp$10, temp$13, temp$17, temp$20, temp$22, temp$24, temp$26, temp$27, start, increase, i, temp$28, temp$30, temp$33, greater, temp$36, temp$38, temp$40, temp$42, temp$43, temp$44, temp$45, temp$46, temp$47, temp$48, temp$49, temp$50, temp$51, temp$53, temp$54, temp$55, i, temp$58, temp$59, temp$61, temp$64, temp$66, temp$68, temp$69, temp$70, temp$71, temp$72, i, temp$74, temp$77, temp$80, temp$84, temp$87, temp$89, temp$91, temp$93, temp$94, textLength, temp$95, i, temp$98, temp$99, temp$101;
        java.lang.IllegalStateException temp$2;
        java.lang.IllegalArgumentException temp$3;
        java.lang.StringBuffer temp$4;
        boolean[] noMoreMatchesForReplIndex, temp$6, temp$23, temp$73, temp$90;
        java.lang.StringBuilder buf, temp$52, temp$57, temp$63, temp$97;
        char temp$56, temp$96;

        text := @parameter0: java.lang.String;
        searchList := @parameter1: java.lang.String[];
        replacementList := @parameter2: java.lang.String[];
        repeat := @parameter3: boolean;
        timeToLive := @parameter4: int;
        if text == null goto label4;

        goto label0;

     label0:
        nop;
        if searchList == null goto label4;

        goto label1;

        goto label1;

     label1:
        nop;
        temp$0 = lengthof searchList;
        if temp$0 == 0 goto label4;

        goto label2;

        goto label2;

     label2:
        nop;
        if replacementList == null goto label4;

        goto label3;

        goto label3;

     label3:
        nop;
        temp$1 = lengthof replacementList;
        if temp$1 == 0 goto label4;

        goto label5;

        goto label5;

     label4:
        nop;
        return text;

     label5:
        nop;
        if timeToLive < 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$2 = new java.lang.IllegalStateException;
        specialinvoke temp$2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Aborting to protect against StackOverflowError - output of one loop is the input of another");
        throw temp$2;

     label7:
        nop;
        searchLength = lengthof searchList;
        replacementLength = lengthof replacementList;
        if searchLength != replacementLength goto label8;

        goto label9;

     label8:
        nop;
        temp$3 = new java.lang.IllegalArgumentException;
        temp$4 = new java.lang.StringBuffer;
        specialinvoke temp$4.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Search and Replace array lengths don\'t match: ");
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(searchLength);
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" vs ");
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(replacementLength);
        temp$5 = virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$5);
        throw temp$3;

     label9:
        nop;
        noMoreMatchesForReplIndex = newarray (boolean)[searchLength];
        textIndex = -1;
        replaceIndex = -1;
        tempIndex = -1;
        i = 0;

     label10:
        nop;
        if i < searchLength goto label11;

        goto label24;

     label11:
        nop;
        temp$6 = noMoreMatchesForReplIndex;
        temp$7 = i;
        temp$8 = temp$6[temp$7];
        if temp$8 == 0 goto label12;

        goto label15;

     label12:
        nop;
        temp$9 = searchList;
        temp$10 = i;
        temp$11 = temp$9[temp$10];
        if temp$11 == null goto label15;

        goto label13;

        goto label13;

     label13:
        nop;
        temp$12 = searchList;
        temp$13 = i;
        temp$14 = temp$12[temp$13];
        temp$15 = virtualinvoke temp$14.<java.lang.String: boolean isEmpty()>();
        if temp$15 == 0 goto label14;

        goto label15;

        goto label14;

     label14:
        nop;
        temp$16 = replacementList;
        temp$17 = i;
        temp$18 = temp$16[temp$17];
        if temp$18 == null goto label15;

        goto label16;

        goto label16;

     label15:
        nop;
        goto label23;

     label16:
        nop;
        temp$19 = searchList;
        temp$20 = i;
        temp$21 = temp$19[temp$20];
        temp$22 = virtualinvoke text.<java.lang.String: int indexOf(java.lang.String)>(temp$21);
        tempIndex = temp$22;
        if tempIndex == -1 goto label17;

        goto label18;

     label17:
        nop;
        temp$23 = noMoreMatchesForReplIndex;
        temp$24 = i;
        temp$25 = 1;
        temp$23[temp$24] = temp$25;
        goto label22;

     label18:
        nop;
        if textIndex == -1 goto label20;

        goto label19;

     label19:
        nop;
        if tempIndex < textIndex goto label20;

        goto label21;

        goto label21;

     label20:
        nop;
        textIndex = tempIndex;
        replaceIndex = i;

     label21:
        nop;

     label22:
        nop;

     label23:
        nop;
        temp$26 = i;
        temp$27 = temp$26 + 1;
        i = temp$27;
        goto label10;

     label24:
        nop;
        if textIndex == -1 goto label25;

        goto label26;

     label25:
        nop;
        return text;

     label26:
        nop;
        start = 0;
        increase = 0;
        i = 0;

     label27:
        nop;
        temp$28 = lengthof searchList;
        if i < temp$28 goto label28;

        goto label35;

     label28:
        nop;
        temp$29 = searchList;
        temp$30 = i;
        temp$31 = temp$29[temp$30];
        if temp$31 == null goto label30;

        goto label29;

     label29:
        nop;
        temp$32 = replacementList;
        temp$33 = i;
        temp$34 = temp$32[temp$33];
        if temp$34 == null goto label30;

        goto label31;

        goto label31;

     label30:
        nop;
        goto label34;

     label31:
        nop;
        temp$35 = replacementList;
        temp$36 = i;
        temp$37 = temp$35[temp$36];
        temp$38 = virtualinvoke temp$37.<java.lang.String: int length()>();
        temp$39 = searchList;
        temp$40 = i;
        temp$41 = temp$39[temp$40];
        temp$42 = virtualinvoke temp$41.<java.lang.String: int length()>();
        temp$43 = temp$38 - temp$42;
        greater = temp$43;
        if greater > 0 goto label32;

        goto label33;

     label32:
        nop;
        temp$44 = increase;
        temp$45 = 3 * greater;
        temp$46 = temp$44 + temp$45;
        increase = temp$46;

     label33:
        nop;

     label34:
        nop;
        temp$47 = i;
        temp$48 = temp$47 + 1;
        i = temp$48;
        goto label27;

     label35:
        nop;
        temp$49 = virtualinvoke text.<java.lang.String: int length()>();
        temp$50 = temp$49 / 5;
        temp$51 = staticinvoke <java.lang.Math: int min(int,int)>(increase, temp$50);
        increase = temp$51;
        temp$52 = new java.lang.StringBuilder;
        temp$53 = virtualinvoke text.<java.lang.String: int length()>();
        temp$54 = temp$53;
        temp$55 = temp$54 + increase;
        specialinvoke temp$52.<java.lang.StringBuilder: void <init>(int)>(temp$55);
        buf = temp$52;

     label36:
        nop;
        if textIndex != -1 goto label37;

        goto label56;

     label37:
        nop;
        i = start;

     label38:
        nop;
        if i < textIndex goto label39;

        goto label40;

     label39:
        nop;
        temp$56 = virtualinvoke text.<java.lang.String: char charAt(int)>(i);
        temp$57 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(temp$56);
        nop;
        temp$58 = i;
        temp$59 = temp$58 + 1;
        i = temp$59;
        goto label38;

     label40:
        nop;
        temp$60 = replacementList;
        temp$61 = replaceIndex;
        temp$62 = temp$60[temp$61];
        temp$63 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$62);
        temp$64 = textIndex;
        temp$65 = searchList;
        temp$66 = replaceIndex;
        temp$67 = temp$65[temp$66];
        temp$68 = virtualinvoke temp$67.<java.lang.String: int length()>();
        temp$69 = temp$64 + temp$68;
        start = temp$69;
        temp$70 = -1;
        textIndex = temp$70;
        temp$71 = -1;
        replaceIndex = temp$71;
        temp$72 = -1;
        tempIndex = temp$72;
        i = 0;

     label41:
        nop;
        if i < searchLength goto label42;

        goto label55;

     label42:
        nop;
        temp$73 = noMoreMatchesForReplIndex;
        temp$74 = i;
        temp$75 = temp$73[temp$74];
        if temp$75 == 0 goto label43;

        goto label46;

     label43:
        nop;
        temp$76 = searchList;
        temp$77 = i;
        temp$78 = temp$76[temp$77];
        if temp$78 == null goto label46;

        goto label44;

        goto label44;

     label44:
        nop;
        temp$79 = searchList;
        temp$80 = i;
        temp$81 = temp$79[temp$80];
        temp$82 = virtualinvoke temp$81.<java.lang.String: boolean isEmpty()>();
        if temp$82 == 0 goto label45;

        goto label46;

        goto label45;

     label45:
        nop;
        temp$83 = replacementList;
        temp$84 = i;
        temp$85 = temp$83[temp$84];
        if temp$85 == null goto label46;

        goto label47;

        goto label47;

     label46:
        nop;
        goto label54;

     label47:
        nop;
        temp$86 = searchList;
        temp$87 = i;
        temp$88 = temp$86[temp$87];
        temp$89 = virtualinvoke text.<java.lang.String: int indexOf(java.lang.String,int)>(temp$88, start);
        tempIndex = temp$89;
        if tempIndex == -1 goto label48;

        goto label49;

     label48:
        nop;
        temp$90 = noMoreMatchesForReplIndex;
        temp$91 = i;
        temp$92 = 1;
        temp$90[temp$91] = temp$92;
        goto label53;

     label49:
        nop;
        if textIndex == -1 goto label51;

        goto label50;

     label50:
        nop;
        if tempIndex < textIndex goto label51;

        goto label52;

        goto label52;

     label51:
        nop;
        textIndex = tempIndex;
        replaceIndex = i;

     label52:
        nop;

     label53:
        nop;

     label54:
        nop;
        temp$93 = i;
        temp$94 = temp$93 + 1;
        i = temp$94;
        goto label41;

     label55:
        nop;
        goto label36;

     label56:
        nop;
        temp$95 = virtualinvoke text.<java.lang.String: int length()>();
        textLength = temp$95;
        i = start;

     label57:
        nop;
        if i < textLength goto label58;

        goto label59;

     label58:
        nop;
        temp$96 = virtualinvoke text.<java.lang.String: char charAt(int)>(i);
        temp$97 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(temp$96);
        nop;
        temp$98 = i;
        temp$99 = temp$98 + 1;
        i = temp$99;
        goto label57;

     label59:
        nop;
        temp$100 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        result = temp$100;
        if repeat == 0 goto label60;

        goto label61;

     label60:
        nop;
        return result;

     label61:
        nop;
        temp$101 = timeToLive - 1;
        temp$102 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)>(result, searchList, replacementList, repeat, temp$101);
        return temp$102;
    }
}
