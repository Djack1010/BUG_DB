public class WrapClass 
{
    public static java.lang.String formatPeriod(long, long, java.lang.String, boolean, java.util.TimeZone)
    {
        long startMillis, endMillis, temp$119, temp$120, temp$121, temp$122, temp$123, temp$124, temp$125;
        java.lang.String format, temp$126;
        boolean padWithZeros, temp$1, temp$46, temp$57, temp$58, temp$59, temp$65, temp$75, temp$96, temp$102, temp$108, temp$114;
        java.util.TimeZone timezone;
        int temp$0, milliseconds, temp$8, temp$9, temp$10, seconds, temp$11, temp$12, temp$13, minutes, temp$14, temp$15, temp$16, hours, temp$17, temp$18, temp$19, days, temp$20, temp$21, temp$22, months, temp$23, temp$24, temp$25, years, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$40, temp$41, temp$42, temp$43, temp$44, temp$47, temp$48, temp$49, temp$50, temp$51, temp$52, temp$53, temp$54, temp$55, temp$60, temp$61, temp$62, temp$63, target, temp$66, temp$67, temp$68, temp$69, temp$70, temp$71, temp$72, temp$73, temp$74, temp$76, temp$77, temp$78, temp$79, temp$80, temp$81, temp$82, temp$83, temp$84, temp$85, temp$86, temp$87, temp$88, temp$89, temp$90, temp$91, temp$92, temp$93, temp$94, temp$97, temp$98, temp$99, temp$100, temp$103, temp$104, temp$105, temp$106, temp$109, temp$110, temp$111, temp$112, temp$115, temp$116, temp$117, temp$118;
        java.lang.Object[] temp$2;
        org.apache.commons.lang3.time.DurationFormatUtils$Token[] tokens, temp$3;
        java.util.Calendar start, temp$4, end, temp$6;
        java.util.Date temp$5, temp$7;
        java.lang.Object temp$45, temp$56, temp$64, temp$95, temp$101, temp$107, temp$113;

        startMillis := @parameter0: long;
        endMillis := @parameter1: long;
        format := @parameter2: java.lang.String;
        padWithZeros := @parameter3: boolean;
        timezone := @parameter4: java.util.TimeZone;
        temp$0 = startMillis cmp endMillis;
        if temp$0 > 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = 0;
        goto label2;

     label1:
        nop;
        temp$1 = 1;

     label2:
        nop;
        temp$2 = newarray (java.lang.Object)[0];
        staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(temp$1, "startMillis must not be greater than endMillis", temp$2);
        temp$3 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String)>(format);
        tokens = temp$3;
        temp$4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(timezone);
        start = temp$4;
        temp$5 = new java.util.Date;
        specialinvoke temp$5.<java.util.Date: void <init>(long)>(startMillis);
        virtualinvoke start.<java.util.Calendar: void setTime(java.util.Date)>(temp$5);
        temp$6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(timezone);
        end = temp$6;
        temp$7 = new java.util.Date;
        specialinvoke temp$7.<java.util.Date: void <init>(long)>(endMillis);
        virtualinvoke end.<java.util.Calendar: void setTime(java.util.Date)>(temp$7);
        temp$8 = virtualinvoke end.<java.util.Calendar: int get(int)>(14);
        temp$9 = virtualinvoke start.<java.util.Calendar: int get(int)>(14);
        temp$10 = temp$8 - temp$9;
        milliseconds = temp$10;
        temp$11 = virtualinvoke end.<java.util.Calendar: int get(int)>(13);
        temp$12 = virtualinvoke start.<java.util.Calendar: int get(int)>(13);
        temp$13 = temp$11 - temp$12;
        seconds = temp$13;
        temp$14 = virtualinvoke end.<java.util.Calendar: int get(int)>(12);
        temp$15 = virtualinvoke start.<java.util.Calendar: int get(int)>(12);
        temp$16 = temp$14 - temp$15;
        minutes = temp$16;
        temp$17 = virtualinvoke end.<java.util.Calendar: int get(int)>(11);
        temp$18 = virtualinvoke start.<java.util.Calendar: int get(int)>(11);
        temp$19 = temp$17 - temp$18;
        hours = temp$19;
        temp$20 = virtualinvoke end.<java.util.Calendar: int get(int)>(5);
        temp$21 = virtualinvoke start.<java.util.Calendar: int get(int)>(5);
        temp$22 = temp$20 - temp$21;
        days = temp$22;
        temp$23 = virtualinvoke end.<java.util.Calendar: int get(int)>(2);
        temp$24 = virtualinvoke start.<java.util.Calendar: int get(int)>(2);
        temp$25 = temp$23 - temp$24;
        months = temp$25;
        temp$26 = virtualinvoke end.<java.util.Calendar: int get(int)>(1);
        temp$27 = virtualinvoke start.<java.util.Calendar: int get(int)>(1);
        temp$28 = temp$26 - temp$27;
        years = temp$28;

     label3:
        nop;
        if milliseconds < 0 goto label4;

        goto label5;

     label4:
        nop;
        temp$29 = milliseconds;
        temp$30 = temp$29 + 1000;
        milliseconds = temp$30;
        temp$31 = seconds;
        temp$32 = temp$31 - 1;
        seconds = temp$32;
        goto label3;

     label5:
        nop;

     label6:
        nop;
        if seconds < 0 goto label7;

        goto label8;

     label7:
        nop;
        temp$33 = seconds;
        temp$34 = temp$33 + 60;
        seconds = temp$34;
        temp$35 = minutes;
        temp$36 = temp$35 - 1;
        minutes = temp$36;
        goto label6;

     label8:
        nop;

     label9:
        nop;
        if minutes < 0 goto label10;

        goto label11;

     label10:
        nop;
        temp$37 = minutes;
        temp$38 = temp$37 + 60;
        minutes = temp$38;
        temp$39 = hours;
        temp$40 = temp$39 - 1;
        hours = temp$40;
        goto label9;

     label11:
        nop;

     label12:
        nop;
        if hours < 0 goto label13;

        goto label14;

     label13:
        nop;
        temp$41 = hours;
        temp$42 = temp$41 + 24;
        hours = temp$42;
        temp$43 = days;
        temp$44 = temp$43 - 1;
        days = temp$44;
        goto label12;

     label14:
        nop;
        temp$45 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object M>;
        temp$46 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$45);
        if temp$46 == 0 goto label33;

        goto label15;

     label15:
        nop;

     label16:
        nop;
        if days < 0 goto label17;

        goto label18;

     label17:
        nop;
        temp$47 = days;
        temp$48 = virtualinvoke start.<java.util.Calendar: int getActualMaximum(int)>(5);
        temp$49 = temp$47 + temp$48;
        days = temp$49;
        temp$50 = months;
        temp$51 = temp$50 - 1;
        months = temp$51;
        virtualinvoke start.<java.util.Calendar: void add(int,int)>(2, 1);
        goto label16;

     label18:
        nop;

     label19:
        nop;
        if months < 0 goto label20;

        goto label21;

     label20:
        nop;
        temp$52 = months;
        temp$53 = temp$52 + 12;
        months = temp$53;
        temp$54 = years;
        temp$55 = temp$54 - 1;
        years = temp$55;
        goto label19;

     label21:
        nop;
        temp$56 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object y>;
        temp$57 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$56);
        if temp$57 == 0 goto label23;

        goto label22;

     label22:
        nop;
        temp$58 = 0;
        goto label24;

     label23:
        nop;
        temp$58 = 1;

     label24:
        nop;
        if years != 0 goto label26;

        goto label25;

     label25:
        nop;
        temp$59 = 0;
        goto label27;

     label26:
        nop;
        temp$59 = 1;

     label27:
        nop;
        if temp$58 == temp$59 goto label28;

        goto label32;

     label28:
        nop;

     label29:
        nop;
        if years != 0 goto label30;

        goto label31;

     label30:
        nop;
        temp$60 = months;
        temp$61 = 12 * years;
        temp$62 = temp$60 + temp$61;
        months = temp$62;
        temp$63 = 0;
        years = temp$63;
        goto label29;

     label31:
        nop;

     label32:
        nop;
        goto label51;

     label33:
        nop;
        temp$64 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object y>;
        temp$65 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$64);
        if temp$65 == 0 goto label34;

        goto label44;

     label34:
        nop;
        temp$66 = virtualinvoke end.<java.util.Calendar: int get(int)>(1);
        target = temp$66;
        if months < 0 goto label35;

        goto label36;

     label35:
        nop;
        temp$67 = target;
        temp$68 = temp$67 - 1;
        target = temp$68;

     label36:
        nop;

     label37:
        nop;
        temp$69 = virtualinvoke start.<java.util.Calendar: int get(int)>(1);
        if temp$69 != target goto label38;

        goto label43;

     label38:
        nop;
        temp$70 = days;
        temp$71 = virtualinvoke start.<java.util.Calendar: int getActualMaximum(int)>(6);
        temp$72 = virtualinvoke start.<java.util.Calendar: int get(int)>(6);
        temp$73 = temp$71 - temp$72;
        temp$74 = temp$70 + temp$73;
        days = temp$74;
        temp$75 = start instanceof java.util.GregorianCalendar;
        if temp$75 == 0 goto label42;

        goto label39;

     label39:
        nop;
        temp$76 = virtualinvoke start.<java.util.Calendar: int get(int)>(2);
        if temp$76 == 1 goto label40;

        goto label42;

        goto label40;

     label40:
        nop;
        temp$77 = virtualinvoke start.<java.util.Calendar: int get(int)>(5);
        if temp$77 == 29 goto label41;

        goto label42;

        goto label41;

     label41:
        nop;
        temp$78 = days;
        temp$79 = temp$78 + 1;
        days = temp$79;

     label42:
        nop;
        virtualinvoke start.<java.util.Calendar: void add(int,int)>(1, 1);
        temp$80 = days;
        temp$81 = virtualinvoke start.<java.util.Calendar: int get(int)>(6);
        temp$82 = temp$80 + temp$81;
        days = temp$82;
        goto label37;

     label43:
        nop;
        temp$83 = 0;
        years = temp$83;

     label44:
        nop;

     label45:
        nop;
        temp$84 = virtualinvoke start.<java.util.Calendar: int get(int)>(2);
        temp$85 = virtualinvoke end.<java.util.Calendar: int get(int)>(2);
        if temp$84 != temp$85 goto label46;

        goto label47;

     label46:
        nop;
        temp$86 = days;
        temp$87 = virtualinvoke start.<java.util.Calendar: int getActualMaximum(int)>(5);
        temp$88 = temp$86 + temp$87;
        days = temp$88;
        virtualinvoke start.<java.util.Calendar: void add(int,int)>(2, 1);
        goto label45;

     label47:
        nop;
        temp$89 = 0;
        months = temp$89;

     label48:
        nop;
        if days < 0 goto label49;

        goto label50;

     label49:
        nop;
        temp$90 = days;
        temp$91 = virtualinvoke start.<java.util.Calendar: int getActualMaximum(int)>(5);
        temp$92 = temp$90 + temp$91;
        days = temp$92;
        temp$93 = months;
        temp$94 = temp$93 - 1;
        months = temp$94;
        virtualinvoke start.<java.util.Calendar: void add(int,int)>(2, 1);
        goto label48;

     label50:
        nop;

     label51:
        nop;
        temp$95 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object d>;
        temp$96 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$95);
        if temp$96 == 0 goto label52;

        goto label53;

     label52:
        nop;
        temp$97 = hours;
        temp$98 = 24 * days;
        temp$99 = temp$97 + temp$98;
        hours = temp$99;
        temp$100 = 0;
        days = temp$100;

     label53:
        nop;
        temp$101 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object H>;
        temp$102 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$101);
        if temp$102 == 0 goto label54;

        goto label55;

     label54:
        nop;
        temp$103 = minutes;
        temp$104 = 60 * hours;
        temp$105 = temp$103 + temp$104;
        minutes = temp$105;
        temp$106 = 0;
        hours = temp$106;

     label55:
        nop;
        temp$107 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object m>;
        temp$108 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$107);
        if temp$108 == 0 goto label56;

        goto label57;

     label56:
        nop;
        temp$109 = seconds;
        temp$110 = 60 * minutes;
        temp$111 = temp$109 + temp$110;
        seconds = temp$111;
        temp$112 = 0;
        minutes = temp$112;

     label57:
        nop;
        temp$113 = <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.Object s>;
        temp$114 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(tokens, temp$113);
        if temp$114 == 0 goto label58;

        goto label59;

     label58:
        nop;
        temp$115 = milliseconds;
        temp$116 = 1000 * seconds;
        temp$117 = temp$115 + temp$116;
        milliseconds = temp$117;
        temp$118 = 0;
        seconds = temp$118;

     label59:
        nop;
        temp$119 = (long) years;
        temp$120 = (long) months;
        temp$121 = (long) days;
        temp$122 = (long) hours;
        temp$123 = (long) minutes;
        temp$124 = (long) seconds;
        temp$125 = (long) milliseconds;
        temp$126 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)>(tokens, temp$119, temp$120, temp$121, temp$122, temp$123, temp$124, temp$125, padWithZeros);
        return temp$126;
    }
}
