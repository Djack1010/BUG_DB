public class WrapClass 
{
    private static final java.lang.String typeVariableToString(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.TypeVariable v;
        java.lang.StringBuilder buf, temp$0;
        java.lang.String temp$1, temp$3;
        java.lang.reflect.Type[] bounds, temp$2;

        v := @parameter0: java.lang.reflect.TypeVariable;
        temp$0 = new java.lang.StringBuilder;
        temp$1 = interfaceinvoke v.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
        specialinvoke temp$0.<java.lang.StringBuilder: void <init>(java.lang.String)>(temp$1);
        buf = temp$0;
        temp$2 = interfaceinvoke v.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
        bounds = temp$2;
        temp$3 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$3;
    }
}
