public class WrapClass 
{
    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.lang3.time.FastDatePrinter this;
        java.lang.Object obj;
        java.lang.StringBuffer toAppendTo, temp$2, temp$5, temp$9, temp$11;
        java.text.FieldPosition pos;
        boolean temp$0, temp$3, temp$6;
        java.util.Date temp$1;
        java.util.Calendar temp$4;
        java.lang.Long temp$7;
        long temp$8;
        java.lang.IllegalArgumentException temp$10;
        java.lang.String temp$12, temp$14, temp$15;
        java.lang.Class temp$13;

        this := @this: org.apache.commons.lang3.time.FastDatePrinter;
        obj := @parameter0: java.lang.Object;
        toAppendTo := @parameter1: java.lang.StringBuffer;
        pos := @parameter2: java.text.FieldPosition;
        temp$0 = obj instanceof java.util.Date;
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = (java.util.Date) obj;
        temp$2 = virtualinvoke this.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer)>(temp$1, toAppendTo);
        return temp$2;

     label1:
        nop;
        temp$3 = obj instanceof java.util.Calendar;
        if temp$3 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$4 = (java.util.Calendar) obj;
        temp$5 = virtualinvoke this.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer)>(temp$4, toAppendTo);
        return temp$5;

     label3:
        nop;
        temp$6 = obj instanceof java.lang.Long;
        if temp$6 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$7 = (java.lang.Long) obj;
        temp$8 = virtualinvoke temp$7.<java.lang.Long: long longValue()>();
        temp$9 = virtualinvoke this.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(long,java.lang.StringBuffer)>(temp$8, toAppendTo);
        return temp$9;

     label5:
        nop;
        temp$10 = new java.lang.IllegalArgumentException;
        temp$11 = new java.lang.StringBuffer;
        specialinvoke temp$11.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Unknown class: ");
        goto label6;

     label6:
        nop;
        temp$13 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();
        temp$14 = virtualinvoke temp$13.<java.lang.Class: java.lang.String getName()>();
        temp$12 = temp$14;
        nop;
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$12);
        temp$15 = virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$15);
        throw temp$10;
    }
}
