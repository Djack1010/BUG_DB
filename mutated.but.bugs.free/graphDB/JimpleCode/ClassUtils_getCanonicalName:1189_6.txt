public class WrapClass 
{
    private static final java.lang.String getCanonicalName(java.lang.String)
    {
        java.lang.String className, temp$0, temp$4, temp$11, temp$14, temp$16, temp$21;
        int dim, temp$2, temp$3, temp$6, temp$8, temp$9, temp$10, temp$12, i, temp$19, temp$20;
        boolean temp$1, temp$5, temp$7;
        java.util.Map temp$13;
        java.lang.Object temp$15;
        java.lang.StringBuilder canonicalClassNameBuffer, temp$17, temp$18;

        className := @parameter0: java.lang.String;
        if className == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = null;
        return temp$0;

     label1:
        nop;
        dim = 0;

     label2:
        nop;
        temp$1 = virtualinvoke className.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if temp$1 == 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$2 = dim;
        temp$3 = temp$2 + 1;
        dim = temp$3;
        temp$4 = virtualinvoke className.<java.lang.String: java.lang.String substring(int)>(1);
        className = temp$4;
        goto label2;

     label4:
        nop;
        if dim < 1 goto label5;

        goto label6;

     label5:
        nop;
        return className;

     label6:
        nop;
        temp$5 = virtualinvoke className.<java.lang.String: boolean startsWith(java.lang.String)>("L");
        if temp$5 == 0 goto label11;

        goto label7;

     label7:
        nop;
        temp$7 = virtualinvoke className.<java.lang.String: boolean endsWith(java.lang.String)>(";");
        if temp$7 == 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$8 = virtualinvoke className.<java.lang.String: int length()>();
        temp$9 = temp$8 - 1;
        temp$6 = temp$9;
        goto label10;

     label9:
        nop;
        temp$10 = virtualinvoke className.<java.lang.String: int length()>();
        temp$6 = temp$10;

     label10:
        nop;
        temp$11 = virtualinvoke className.<java.lang.String: java.lang.String substring(int,int)>(1, temp$6);
        className = temp$11;
        goto label14;

     label11:
        nop;
        temp$12 = virtualinvoke className.<java.lang.String: int length()>();
        if temp$12 > 0 goto label12;

        goto label13;

     label12:
        nop;
        temp$13 = <org.apache.commons.lang3.ClassUtils: java.util.Map reverseAbbreviationMap>;
        temp$14 = virtualinvoke className.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
        temp$15 = interfaceinvoke temp$13.<java.util.Map: java.lang.Object get(java.lang.Object)>(temp$14);
        temp$16 = (java.lang.String) temp$15;
        className = temp$16;

     label13:
        nop;

     label14:
        nop;
        temp$17 = new java.lang.StringBuilder;
        specialinvoke temp$17.<java.lang.StringBuilder: void <init>(java.lang.String)>(className);
        canonicalClassNameBuffer = temp$17;
        i = 0;

     label15:
        nop;
        if i < dim goto label16;

        goto label17;

     label16:
        nop;
        temp$18 = virtualinvoke canonicalClassNameBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");
        nop;
        temp$19 = i;
        temp$20 = temp$19 + 1;
        i = temp$20;
        goto label15;

     label17:
        nop;
        temp$21 = virtualinvoke canonicalClassNameBuffer.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$21;
    }
}
