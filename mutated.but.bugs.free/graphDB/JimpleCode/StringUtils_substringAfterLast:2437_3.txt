public class WrapClass 
{
    public static java.lang.String substringAfterLast(java.lang.String, java.lang.String)
    {
        java.lang.String str, separator, temp$2, temp$9, temp$13;
        boolean temp$0, temp$1, temp$4, temp$8;
        int pos, temp$3, temp$5, temp$6, temp$7, temp$10, temp$11, temp$12;

        str := @parameter0: java.lang.String;
        separator := @parameter1: java.lang.String;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(str);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        return str;

     label1:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(separator);
        if temp$1 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$2 = <org.apache.commons.lang3.StringUtils: java.lang.String EMPTY>;
        return temp$2;

     label3:
        nop;
        temp$3 = virtualinvoke str.<java.lang.String: int lastIndexOf(java.lang.String)>(separator);
        pos = temp$3;
        if pos == -1 goto label5;

        goto label4;

     label4:
        nop;
        temp$4 = 0;
        goto label6;

     label5:
        nop;
        temp$4 = 1;

     label6:
        nop;
        temp$5 = virtualinvoke str.<java.lang.String: int length()>();
        temp$6 = virtualinvoke separator.<java.lang.String: int length()>();
        temp$7 = temp$5 - temp$6;
        if pos == temp$7 goto label8;

        goto label7;

     label7:
        nop;
        temp$8 = 0;
        goto label9;

     label8:
        nop;
        temp$8 = 1;

     label9:
        nop;
        if temp$4 != temp$8 goto label10;

        goto label11;

     label10:
        nop;
        temp$9 = <org.apache.commons.lang3.StringUtils: java.lang.String EMPTY>;
        return temp$9;

     label11:
        nop;
        temp$10 = pos;
        temp$11 = virtualinvoke separator.<java.lang.String: int length()>();
        temp$12 = temp$10 + temp$11;
        temp$13 = virtualinvoke str.<java.lang.String: java.lang.String substring(int)>(temp$12);
        return temp$13;
    }
}
