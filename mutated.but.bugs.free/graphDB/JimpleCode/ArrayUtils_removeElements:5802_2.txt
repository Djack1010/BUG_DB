public class WrapClass 
{
    public static transient float[] removeElements(float[], float[])
    {
        float[] array, values, temp$1, temp$31;
        boolean temp$0, temp$17;
        java.util.HashMap occurrences, temp$2;
        int temp$3, temp$4, temp$5, found, i, ct, temp$23, temp$25, temp$26, temp$27, temp$28, temp$29;
        float v, temp$6, temp$24;
        java.lang.Float boxed, temp$7, v, temp$20;
        org.apache.commons.lang3.mutable.MutableInt count, temp$9, temp$10, temp$12, temp$22;
        java.lang.Object temp$8, temp$11, temp$18, temp$19, temp$21, temp$30;
        java.util.BitSet toRemove, temp$13;
        java.util.Set temp$14, temp$15;
        java.util.Iterator temp$16;
        java.util.Map$Entry e;

        array := @parameter0: float[];
        values := @parameter1: float[];
        temp$0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isEmpty(float[])>(array);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: float[] clone(float[])>(array);
        return temp$1;

     label1:
        nop;
        temp$2 = new java.util.HashMap;
        temp$3 = lengthof values;
        specialinvoke temp$2.<java.util.HashMap: void <init>(int)>(temp$3);
        occurrences = temp$2;
        temp$4 = 0;

     label2:
        nop;
        temp$5 = lengthof values;
        if temp$4 >= temp$5 goto label6;

        temp$6 = values[temp$4];
        v = temp$6;
        temp$7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v);
        boxed = temp$7;
        temp$8 = virtualinvoke occurrences.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(boxed);
        temp$9 = (org.apache.commons.lang3.mutable.MutableInt) temp$8;
        count = temp$9;
        if count == null goto label3;

        goto label4;

     label3:
        nop;
        temp$10 = new org.apache.commons.lang3.mutable.MutableInt;
        specialinvoke temp$10.<org.apache.commons.lang3.mutable.MutableInt: void <init>(int)>(1);
        temp$11 = virtualinvoke occurrences.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(boxed, temp$10);
        temp$12 = (org.apache.commons.lang3.mutable.MutableInt) temp$11;
        goto label5;

     label4:
        nop;
        virtualinvoke count.<org.apache.commons.lang3.mutable.MutableInt: void increment()>();

     label5:
        nop;
        nop;
        temp$4 = temp$4 + 1;
        goto label2;

     label6:
        nop;
        temp$13 = new java.util.BitSet;
        specialinvoke temp$13.<java.util.BitSet: void <init>()>();
        toRemove = temp$13;
        temp$14 = virtualinvoke occurrences.<java.util.HashMap: java.util.Set entrySet()>();
        temp$15 = (java.util.Set) temp$14;
        temp$16 = interfaceinvoke temp$15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label7:
        nop;
        temp$17 = interfaceinvoke temp$16.<java.util.Iterator: boolean hasNext()>();
        if temp$17 == 0 goto label13;

        temp$18 = interfaceinvoke temp$16.<java.util.Iterator: java.lang.Object next()>();
        e = (java.util.Map$Entry) temp$18;
        temp$19 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();
        temp$20 = (java.lang.Float) temp$19;
        v = temp$20;
        found = 0;
        i = 0;
        temp$21 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();
        temp$22 = (org.apache.commons.lang3.mutable.MutableInt) temp$21;
        temp$23 = virtualinvoke temp$22.<org.apache.commons.lang3.mutable.MutableInt: int intValue()>();
        ct = temp$23;

     label8:
        nop;
        if i < ct goto label9;

        goto label12;

     label9:
        nop;
        temp$24 = virtualinvoke v.<java.lang.Float: float floatValue()>();
        temp$25 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int indexOf(float[],float,int)>(array, temp$24, found);
        found = temp$25;
        if found < 0 goto label10;

        goto label11;

     label10:
        nop;
        goto label12;

     label11:
        nop;
        temp$26 = found;
        temp$27 = temp$26 + 1;
        found = temp$27;
        virtualinvoke toRemove.<java.util.BitSet: void set(int)>(temp$26);
        nop;
        temp$28 = i;
        temp$29 = temp$28 + 1;
        i = temp$29;
        goto label8;

     label12:
        nop;
        nop;
        goto label7;

     label13:
        nop;
        temp$30 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object removeAll(java.lang.Object,java.util.BitSet)>(array, toRemove);
        temp$31 = (float[]) temp$30;
        return temp$31;
    }
}
