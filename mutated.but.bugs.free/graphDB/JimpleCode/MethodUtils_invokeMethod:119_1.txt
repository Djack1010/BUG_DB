public class WrapClass 
{
    public static transient java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object object, temp$1;
        java.lang.String methodName;
        java.lang.Object[] args;
        java.lang.Class[] parameterTypes, temp$0;

        object := @parameter0: java.lang.Object;
        methodName := @parameter1: java.lang.String;
        args := @parameter2: java.lang.Object[];
        temp$0 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.Class[] toClass(java.lang.Object[])>(args);
        parameterTypes = temp$0;
        temp$1 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])>(object, methodName, args, parameterTypes);
        return temp$1;
    }
}
