public class WrapClass 
{
    public static void isInstanceOf(java.lang.Class, java.lang.Object)
    {
        java.lang.Class type, temp$5;
        java.lang.Object obj;
        boolean temp$0;
        java.lang.IllegalArgumentException temp$1;
        java.lang.Object[] temp$2;
        java.lang.String temp$3, temp$4, temp$6, temp$7;

        type := @parameter0: java.lang.Class;
        obj := @parameter1: java.lang.Object;
        temp$0 = virtualinvoke type.<java.lang.Class: boolean isInstance(java.lang.Object)>(obj);
        if temp$0 == 0 goto label0;

        goto label2;

     label0:
        nop;
        temp$1 = new java.lang.IllegalArgumentException;
        temp$2 = newarray (java.lang.Object)[2];
        temp$3 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();
        temp$2[0] = temp$3;
        goto label1;

     label1:
        nop;
        temp$5 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();
        temp$6 = virtualinvoke temp$5.<java.lang.Class: java.lang.String getName()>();
        temp$4 = temp$6;
        nop;
        temp$2[1] = temp$4;
        temp$7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected type: %s, actual: %s", temp$2);
        specialinvoke temp$1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$7);
        throw temp$1;

     label2:
        nop;
        return;
    }
}
