public class WrapClass 
{
    public static transient double min(double[])
    {
        double[] array, temp$0, temp$3, temp$8, temp$12;
        double min, temp$5, temp$7, temp$10, temp$14;
        int temp$1, i, temp$2, temp$4, temp$9, temp$11, temp$13, temp$15, temp$16;
        boolean temp$6;

        array := @parameter0: double[];
        staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(array);
        temp$0 = array;
        temp$1 = 0;
        min = temp$0[temp$1];
        i = 1;

     label0:
        nop;
        temp$2 = lengthof array;
        if i < temp$2 goto label1;

        goto label6;

     label1:
        nop;
        temp$3 = array;
        temp$4 = i;
        temp$5 = temp$3[temp$4];
        temp$6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(temp$5);
        if temp$6 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$7 = <java.lang.Double: double NaN>;
        return temp$7;

     label3:
        nop;
        temp$8 = array;
        temp$9 = i;
        temp$10 = temp$8[temp$9];
        temp$11 = temp$10 cmpg min;
        if temp$11 > 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$12 = array;
        temp$13 = i;
        temp$14 = temp$12[temp$13];
        min = temp$14;

     label5:
        nop;
        nop;
        temp$15 = i;
        temp$16 = temp$15 + 1;
        i = temp$16;
        goto label0;

     label6:
        nop;
        return min;
    }
}
