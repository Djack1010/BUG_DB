public class WrapClass 
{
    protected void appendClassName(java.lang.StringBuffer, java.lang.Object)
    {
        org.apache.commons.lang3.builder.ToStringStyle this;
        java.lang.StringBuffer buffer, temp$5, temp$8;
        java.lang.Object object;
        boolean temp$0, temp$1, temp$2;
        java.lang.Class temp$3, temp$6;
        java.lang.String temp$4, temp$7;

        this := @this: org.apache.commons.lang3.builder.ToStringStyle;
        buffer := @parameter0: java.lang.StringBuffer;
        object := @parameter1: java.lang.Object;
        if object != null goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = 0;
        goto label2;

     label1:
        nop;
        temp$0 = 1;

     label2:
        nop;
        temp$1 = this.<org.apache.commons.lang3.builder.ToStringStyle: boolean useClassName>;
        if temp$1 == temp$0 goto label3;

        goto label7;

     label3:
        nop;
        staticinvoke <org.apache.commons.lang3.builder.ToStringStyle: void register(java.lang.Object)>(object);
        temp$2 = this.<org.apache.commons.lang3.builder.ToStringStyle: boolean useShortClassName>;
        if temp$2 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$3 = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>();
        temp$4 = virtualinvoke this.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String getShortClassName(java.lang.Class)>(temp$3);
        temp$5 = virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(temp$4);
        goto label6;

     label5:
        nop;
        temp$6 = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>();
        temp$7 = virtualinvoke temp$6.<java.lang.Class: java.lang.String getName()>();
        temp$8 = virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(temp$7);

     label6:
        nop;

     label7:
        nop;
        return;
    }
}
