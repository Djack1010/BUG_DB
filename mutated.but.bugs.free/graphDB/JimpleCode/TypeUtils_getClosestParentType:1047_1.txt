public class WrapClass 
{
    private static final java.lang.reflect.Type getClosestParentType(java.lang.Class, java.lang.Class)
    {
        java.lang.Class 'cls', superClass, midClass, temp$7;
        boolean temp$0, temp$5, temp$6, temp$11, temp$12;
        java.lang.reflect.Type[] interfaceTypes, temp$1;
        java.lang.reflect.Type genericInterface, midType, temp$4, temp$13;
        int temp$2, temp$3;
        java.lang.IllegalStateException temp$8;
        java.lang.StringBuffer temp$9;
        java.lang.String temp$10;

        'cls' := @parameter0: java.lang.Class;
        superClass := @parameter1: java.lang.Class;
        temp$0 = virtualinvoke superClass.<java.lang.Class: boolean isInterface()>();
        if temp$0 == 0 goto label14;

        goto label0;

     label0:
        nop;
        temp$1 = virtualinvoke 'cls'.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();
        interfaceTypes = temp$1;
        genericInterface = null;
        temp$2 = 0;

     label1:
        nop;
        temp$3 = lengthof interfaceTypes;
        if temp$2 >= temp$3 goto label11;

        temp$4 = interfaceTypes[temp$2];
        midType = temp$4;
        midClass = null;
        temp$5 = midType instanceof java.lang.reflect.ParameterizedType;
        if temp$5 == 0 goto label3;

        goto label2;

     label2:
        nop;
        goto label7;

     label3:
        nop;
        temp$6 = midType instanceof java.lang.Class;
        if temp$6 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$7 = (java.lang.Class) midType;
        midClass = temp$7;
        goto label6;

     label5:
        nop;
        temp$8 = new java.lang.IllegalStateException;
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Unexpected generic interface type found: ");
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(midType);
        temp$10 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$8.<java.lang.IllegalStateException: void <init>(java.lang.String)>(temp$10);
        throw temp$8;

     label6:
        nop;

     label7:
        nop;
        temp$11 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.Class)>(midClass, superClass);
        if temp$11 == 0 goto label10;

        goto label8;

     label8:
        nop;
        temp$12 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)>(genericInterface, midClass);
        if temp$12 == 0 goto label10;

        goto label9;

        goto label9;

     label9:
        nop;
        genericInterface = midType;

     label10:
        nop;
        nop;
        temp$2 = temp$2 + 1;
        goto label1;

     label11:
        nop;
        if genericInterface != null goto label12;

        goto label13;

     label12:
        nop;
        return genericInterface;

     label13:
        nop;

     label14:
        nop;
        temp$13 = virtualinvoke 'cls'.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();
        return temp$13;
    }
}
