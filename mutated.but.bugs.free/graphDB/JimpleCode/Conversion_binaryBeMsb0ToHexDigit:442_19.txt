public class WrapClass 
{
    public static char binaryBeMsb0ToHexDigit(boolean[], int)
    {
        boolean[] src, paddedSrc, temp$13, temp$20, temp$27, temp$35, temp$43, temp$50, temp$58, temp$66, temp$73, temp$80, temp$88, temp$96, temp$103, temp$111, temp$119;
        int srcPos, temp$0, beSrcPos, temp$2, temp$3, temp$4, srcLen, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$14, temp$16, temp$17, temp$18, temp$21, temp$22, temp$24, temp$25, temp$26, temp$28, temp$29, temp$32, temp$33, temp$34, temp$36, temp$37, temp$40, temp$41, temp$42, temp$44, temp$45, temp$47, temp$48, temp$49, temp$51, temp$52, temp$55, temp$56, temp$57, temp$59, temp$60, temp$63, temp$64, temp$65, temp$67, temp$68, temp$70, temp$71, temp$72, temp$74, temp$75, temp$77, temp$78, temp$79, temp$81, temp$82, temp$85, temp$86, temp$87, temp$89, temp$90, temp$93, temp$94, temp$95, temp$97, temp$98, temp$100, temp$101, temp$102, temp$104, temp$105, temp$108, temp$109, temp$110, temp$112, temp$113, temp$116, temp$117, temp$118, temp$120, temp$121;
        java.lang.IllegalArgumentException temp$1;
        boolean temp$15, temp$19, temp$23, temp$30, temp$38, temp$46, temp$53, temp$61, temp$69, temp$76, temp$83, temp$91, temp$99, temp$106, temp$114, temp$122;
        char temp$31, temp$39, temp$54, temp$62, temp$84, temp$92, temp$107, temp$115;

        src := @parameter0: boolean[];
        srcPos := @parameter1: int;
        temp$0 = lengthof src;
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = new java.lang.IllegalArgumentException;
        specialinvoke temp$1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot convert an empty array.");
        throw temp$1;

     label1:
        nop;
        temp$2 = lengthof src;
        temp$3 = temp$2 - 1;
        temp$4 = temp$3 - srcPos;
        beSrcPos = temp$4;
        temp$5 = beSrcPos;
        temp$6 = temp$5 + 1;
        temp$7 = staticinvoke <java.lang.Math: int min(int,int)>(4, temp$6);
        srcLen = temp$7;
        paddedSrc = newarray (boolean)[4];
        temp$8 = beSrcPos;
        temp$9 = temp$8 + 1;
        temp$10 = temp$9 - srcLen;
        temp$11 = 4 - srcLen;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(src, temp$10, paddedSrc, temp$11, srcLen);
        src = paddedSrc;
        temp$12 = 0;
        srcPos = temp$12;
        temp$13 = src;
        temp$14 = srcPos;
        temp$15 = temp$13[temp$14];
        if temp$15 == 0 goto label30;

        goto label2;

     label2:
        nop;
        temp$16 = srcPos;
        temp$17 = lengthof src;
        temp$18 = temp$16 + 1;
        if temp$17 > temp$18 goto label4;

        goto label3;

     label3:
        nop;
        temp$19 = 0;
        goto label5;

     label4:
        nop;
        temp$19 = 1;

     label5:
        nop;
        temp$20 = src;
        temp$21 = srcPos;
        temp$22 = temp$21 + 1;
        temp$23 = temp$20[temp$22];
        if temp$19 == temp$23 goto label6;

        goto label18;

     label6:
        nop;
        temp$24 = srcPos;
        temp$25 = lengthof src;
        temp$26 = temp$24 + 2;
        if temp$25 > temp$26 goto label7;

        goto label13;

     label7:
        nop;
        temp$27 = src;
        temp$28 = srcPos;
        temp$29 = temp$28 + 2;
        temp$30 = temp$27[temp$29];
        if temp$30 == 0 goto label13;

        goto label8;

        goto label8;

     label8:
        nop;
        temp$32 = srcPos;
        temp$33 = lengthof src;
        temp$34 = temp$32 + 3;
        if temp$33 > temp$34 goto label9;

        goto label11;

     label9:
        nop;
        temp$35 = src;
        temp$36 = srcPos;
        temp$37 = temp$36 + 3;
        temp$38 = temp$35[temp$37];
        if temp$38 == 0 goto label11;

        goto label10;

        goto label10;

     label10:
        nop;
        temp$31 = 102;
        goto label12;

     label11:
        nop;
        temp$31 = 101;

     label12:
        nop;
        return temp$31;

     label13:
        nop;
        temp$40 = srcPos;
        temp$41 = lengthof src;
        temp$42 = temp$40 + 3;
        if temp$41 > temp$42 goto label14;

        goto label16;

     label14:
        nop;
        temp$43 = src;
        temp$44 = srcPos;
        temp$45 = temp$44 + 3;
        temp$46 = temp$43[temp$45];
        if temp$46 == 0 goto label16;

        goto label15;

        goto label15;

     label15:
        nop;
        temp$39 = 100;
        goto label17;

     label16:
        nop;
        temp$39 = 99;

     label17:
        nop;
        return temp$39;

     label18:
        nop;
        temp$47 = srcPos;
        temp$48 = lengthof src;
        temp$49 = temp$47 + 2;
        if temp$48 > temp$49 goto label19;

        goto label25;

     label19:
        nop;
        temp$50 = src;
        temp$51 = srcPos;
        temp$52 = temp$51 + 2;
        temp$53 = temp$50[temp$52];
        if temp$53 == 0 goto label25;

        goto label20;

        goto label20;

     label20:
        nop;
        temp$55 = srcPos;
        temp$56 = lengthof src;
        temp$57 = temp$55 + 3;
        if temp$56 > temp$57 goto label21;

        goto label23;

     label21:
        nop;
        temp$58 = src;
        temp$59 = srcPos;
        temp$60 = temp$59 + 3;
        temp$61 = temp$58[temp$60];
        if temp$61 == 0 goto label23;

        goto label22;

        goto label22;

     label22:
        nop;
        temp$54 = 98;
        goto label24;

     label23:
        nop;
        temp$54 = 97;

     label24:
        nop;
        return temp$54;

     label25:
        nop;
        temp$63 = srcPos;
        temp$64 = lengthof src;
        temp$65 = temp$63 + 3;
        if temp$64 > temp$65 goto label26;

        goto label28;

     label26:
        nop;
        temp$66 = src;
        temp$67 = srcPos;
        temp$68 = temp$67 + 3;
        temp$69 = temp$66[temp$68];
        if temp$69 == 0 goto label28;

        goto label27;

        goto label27;

     label27:
        nop;
        temp$62 = 57;
        goto label29;

     label28:
        nop;
        temp$62 = 56;

     label29:
        nop;
        return temp$62;

     label30:
        nop;
        temp$70 = srcPos;
        temp$71 = lengthof src;
        temp$72 = temp$70 + 1;
        if temp$71 > temp$72 goto label31;

        goto label44;

     label31:
        nop;
        temp$73 = src;
        temp$74 = srcPos;
        temp$75 = temp$74 + 1;
        temp$76 = temp$73[temp$75];
        if temp$76 == 0 goto label44;

        goto label32;

        goto label32;

     label32:
        nop;
        temp$77 = srcPos;
        temp$78 = lengthof src;
        temp$79 = temp$77 + 2;
        if temp$78 > temp$79 goto label33;

        goto label39;

     label33:
        nop;
        temp$80 = src;
        temp$81 = srcPos;
        temp$82 = temp$81 + 2;
        temp$83 = temp$80[temp$82];
        if temp$83 == 0 goto label39;

        goto label34;

        goto label34;

     label34:
        nop;
        temp$85 = srcPos;
        temp$86 = lengthof src;
        temp$87 = temp$85 + 3;
        if temp$86 > temp$87 goto label35;

        goto label37;

     label35:
        nop;
        temp$88 = src;
        temp$89 = srcPos;
        temp$90 = temp$89 + 3;
        temp$91 = temp$88[temp$90];
        if temp$91 == 0 goto label37;

        goto label36;

        goto label36;

     label36:
        nop;
        temp$84 = 55;
        goto label38;

     label37:
        nop;
        temp$84 = 54;

     label38:
        nop;
        return temp$84;

     label39:
        nop;
        temp$93 = srcPos;
        temp$94 = lengthof src;
        temp$95 = temp$93 + 3;
        if temp$94 > temp$95 goto label40;

        goto label42;

     label40:
        nop;
        temp$96 = src;
        temp$97 = srcPos;
        temp$98 = temp$97 + 3;
        temp$99 = temp$96[temp$98];
        if temp$99 == 0 goto label42;

        goto label41;

        goto label41;

     label41:
        nop;
        temp$92 = 53;
        goto label43;

     label42:
        nop;
        temp$92 = 52;

     label43:
        nop;
        return temp$92;

     label44:
        nop;
        temp$100 = srcPos;
        temp$101 = lengthof src;
        temp$102 = temp$100 + 2;
        if temp$101 > temp$102 goto label45;

        goto label51;

     label45:
        nop;
        temp$103 = src;
        temp$104 = srcPos;
        temp$105 = temp$104 + 2;
        temp$106 = temp$103[temp$105];
        if temp$106 == 0 goto label51;

        goto label46;

        goto label46;

     label46:
        nop;
        temp$108 = srcPos;
        temp$109 = lengthof src;
        temp$110 = temp$108 + 3;
        if temp$109 > temp$110 goto label47;

        goto label49;

     label47:
        nop;
        temp$111 = src;
        temp$112 = srcPos;
        temp$113 = temp$112 + 3;
        temp$114 = temp$111[temp$113];
        if temp$114 == 0 goto label49;

        goto label48;

        goto label48;

     label48:
        nop;
        temp$107 = 51;
        goto label50;

     label49:
        nop;
        temp$107 = 50;

     label50:
        nop;
        return temp$107;

     label51:
        nop;
        temp$116 = srcPos;
        temp$117 = lengthof src;
        temp$118 = temp$116 + 3;
        if temp$117 > temp$118 goto label52;

        goto label54;

     label52:
        nop;
        temp$119 = src;
        temp$120 = srcPos;
        temp$121 = temp$120 + 3;
        temp$122 = temp$119[temp$121];
        if temp$122 == 0 goto label54;

        goto label53;

        goto label53;

     label53:
        nop;
        temp$115 = 49;
        goto label55;

     label54:
        nop;
        temp$115 = 48;

     label55:
        nop;
        return temp$115;
    }
}
