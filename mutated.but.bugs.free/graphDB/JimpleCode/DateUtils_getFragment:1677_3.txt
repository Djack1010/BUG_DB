public class WrapClass 
{
    private static final long getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit)
    {
        java.util.Calendar calendar;
        int fragment, offset, temp$1, temp$4, temp$5, temp$11, temp$12, temp$18, temp$24, temp$30, temp$36;
        java.util.concurrent.TimeUnit unit, temp$2, temp$7, temp$14, temp$20, temp$26, temp$32, temp$38;
        java.lang.IllegalArgumentException temp$0, temp$41;
        long result, temp$3, temp$6, temp$8, temp$9, temp$10, temp$13, temp$15, temp$16, temp$17, temp$19, temp$21, temp$22, temp$23, temp$25, temp$27, temp$28, temp$29, temp$31, temp$33, temp$34, temp$35, temp$37, temp$39, temp$40;
        java.lang.StringBuffer temp$42;
        java.lang.String temp$43;

        calendar := @parameter0: java.util.Calendar;
        fragment := @parameter1: int;
        unit := @parameter2: java.util.concurrent.TimeUnit;
        if calendar == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = new java.lang.IllegalArgumentException;
        specialinvoke temp$0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The date must not be null");
        throw temp$0;

     label1:
        nop;
        result = 0L;
        temp$2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
        if unit == temp$2 goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = 0;
        goto label4;

     label3:
        nop;
        temp$1 = 1;

     label4:
        nop;
        offset = temp$1;
        goto label8;

     label5:
        nop;
        temp$3 = result;
        temp$4 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(6);
        temp$5 = temp$4 - offset;
        temp$6 = (long) temp$5;
        temp$7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
        temp$8 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$6, temp$7);
        temp$9 = temp$3 + temp$8;
        result = temp$9;
        goto label9;

     label6:
        nop;
        temp$10 = result;
        temp$11 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(5);
        temp$12 = temp$11 - offset;
        temp$13 = (long) temp$12;
        temp$14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
        temp$15 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$13, temp$14);
        temp$16 = temp$10 + temp$15;
        result = temp$16;
        goto label9;

     label7:
        nop;
        goto label9;

        goto label9;

     label8:
        nop;
        nop;
        tableswitch(fragment)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label9:
        nop;
        goto label19;

     label10:
        nop;

     label11:
        nop;

     label12:
        nop;

     label13:
        nop;
        temp$17 = result;
        temp$18 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(11);
        temp$19 = (long) temp$18;
        temp$20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
        temp$21 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$19, temp$20);
        temp$22 = temp$17 + temp$21;
        result = temp$22;

     label14:
        nop;
        temp$23 = result;
        temp$24 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(12);
        temp$25 = (long) temp$24;
        temp$26 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
        temp$27 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$25, temp$26);
        temp$28 = temp$23 + temp$27;
        result = temp$28;

     label15:
        nop;
        temp$29 = result;
        temp$30 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(13);
        temp$31 = (long) temp$30;
        temp$32 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
        temp$33 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$31, temp$32);
        temp$34 = temp$29 + temp$33;
        result = temp$34;

     label16:
        nop;
        temp$35 = result;
        temp$36 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(14);
        temp$37 = (long) temp$36;
        temp$38 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
        temp$39 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(temp$37, temp$38);
        temp$40 = temp$35 + temp$39;
        result = temp$40;

     label17:
        nop;
        goto label20;

     label18:
        nop;
        temp$41 = new java.lang.IllegalArgumentException;
        temp$42 = new java.lang.StringBuffer;
        specialinvoke temp$42.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("The fragment ");
        virtualinvoke temp$42.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(fragment);
        virtualinvoke temp$42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is not supported");
        temp$43 = virtualinvoke temp$42.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$43);
        throw temp$41;

        goto label20;

     label19:
        nop;
        nop;
        tableswitch(fragment)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label18;
            case 4: goto label18;
            case 5: goto label13;
            case 6: goto label12;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label18;
            case 10: goto label18;
            case 11: goto label14;
            case 12: goto label15;
            case 13: goto label16;
            case 14: goto label17;
            default: goto label18;
        };

     label20:
        nop;
        return result;
    }
}
