public class WrapClass 
{
    private static final java.lang.String modify(java.lang.String, java.lang.String[], boolean)
    {
        java.lang.String str, temp$14;
        java.lang.String[] set;
        boolean expect, temp$7;
        org.apache.commons.lang3.CharSet chars, temp$0;
        java.lang.StringBuilder buffer, temp$1, temp$11;
        int temp$2, sz, i, temp$5, temp$9, temp$12, temp$13;
        char[] chrs, temp$3, temp$4, temp$8;
        char temp$6, temp$10;

        str := @parameter0: java.lang.String;
        set := @parameter1: java.lang.String[];
        expect := @parameter2: boolean;
        temp$0 = staticinvoke <org.apache.commons.lang3.CharSet: org.apache.commons.lang3.CharSet getInstance(java.lang.String[])>(set);
        chars = temp$0;
        temp$1 = new java.lang.StringBuilder;
        temp$2 = virtualinvoke str.<java.lang.String: int length()>();
        specialinvoke temp$1.<java.lang.StringBuilder: void <init>(int)>(temp$2);
        buffer = temp$1;
        temp$3 = virtualinvoke str.<java.lang.String: char[] toCharArray()>();
        chrs = temp$3;
        sz = lengthof chrs;
        i = 0;

     label0:
        nop;
        if i != sz goto label1;

        goto label4;

     label1:
        nop;
        temp$4 = chrs;
        temp$5 = i;
        temp$6 = temp$4[temp$5];
        temp$7 = virtualinvoke chars.<org.apache.commons.lang3.CharSet: boolean contains(char)>(temp$6);
        if temp$7 == expect goto label2;

        goto label3;

     label2:
        nop;
        temp$8 = chrs;
        temp$9 = i;
        temp$10 = temp$8[temp$9];
        temp$11 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(temp$10);

     label3:
        nop;
        nop;
        temp$12 = i;
        temp$13 = temp$12 + 1;
        i = temp$13;
        goto label0;

     label4:
        nop;
        temp$14 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$14;
    }
}
