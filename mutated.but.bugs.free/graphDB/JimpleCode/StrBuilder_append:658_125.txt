public class WrapClass 
{
    public org.apache.commons.lang3.text.StrBuilder append(java.nio.CharBuffer, int, int)
    {
        org.apache.commons.lang3.text.StrBuilder this, temp$9, temp$20;
        java.nio.CharBuffer buf;
        int startIndex, length, totalLength, temp$1, temp$3, temp$4, len, temp$6, temp$7, temp$8, temp$11, temp$12, temp$13, temp$14, temp$15, temp$17, temp$18;
        boolean temp$0;
        java.lang.StringIndexOutOfBoundsException temp$2, temp$5;
        char[] temp$10, temp$16;
        java.lang.String temp$19;

        this := @this: org.apache.commons.lang3.text.StrBuilder;
        buf := @parameter0: java.nio.CharBuffer;
        startIndex := @parameter1: int;
        length := @parameter2: int;
        temp$0 = virtualinvoke buf.<java.nio.CharBuffer: boolean hasArray()>();
        if temp$0 == 0 goto label7;

        goto label0;

     label0:
        nop;
        temp$1 = virtualinvoke buf.<java.nio.CharBuffer: int remaining()>();
        totalLength = temp$1;
        if startIndex < 0 goto label2;

        goto label1;

     label1:
        nop;
        if startIndex > totalLength goto label2;

        goto label3;

        goto label3;

     label2:
        nop;
        temp$2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke temp$2.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>("startIndex must be valid");
        throw temp$2;

     label3:
        nop;
        if length < 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$3 = startIndex;
        temp$4 = temp$3 + length;
        if temp$4 > totalLength goto label5;

        goto label6;

        goto label6;

     label5:
        nop;
        temp$5 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke temp$5.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>("length must be valid");
        throw temp$5;

     label6:
        nop;
        temp$6 = virtualinvoke this.<org.apache.commons.lang3.text.StrBuilder: int length()>();
        len = temp$6;
        temp$7 = len;
        temp$8 = temp$7 + length;
        temp$9 = virtualinvoke this.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder ensureCapacity(int)>(temp$8);
        temp$10 = virtualinvoke buf.<java.nio.CharBuffer: char[] array()>();
        temp$11 = virtualinvoke buf.<java.nio.CharBuffer: int arrayOffset()>();
        temp$12 = temp$11;
        temp$13 = virtualinvoke buf.<java.nio.CharBuffer: int position()>();
        temp$14 = temp$12 + temp$13;
        temp$15 = temp$14 + startIndex;
        temp$16 = this.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(temp$10, temp$15, temp$16, len, length);
        temp$17 = this.<org.apache.commons.lang3.text.StrBuilder: int size>;
        temp$18 = temp$17 + length;
        this.<org.apache.commons.lang3.text.StrBuilder: int size> = temp$18;
        goto label8;

     label7:
        nop;
        temp$19 = virtualinvoke buf.<java.nio.CharBuffer: java.lang.String toString()>();
        temp$20 = virtualinvoke this.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String,int,int)>(temp$19, startIndex, length);

     label8:
        nop;
        return this;
    }
}
