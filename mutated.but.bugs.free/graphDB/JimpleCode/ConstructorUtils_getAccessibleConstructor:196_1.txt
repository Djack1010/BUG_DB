public class WrapClass 
{
    public static transient java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class, java.lang.Class[])
    {
        java.lang.Class 'cls';
        java.lang.Class[] parameterTypes;
        java.lang.reflect.Constructor temp$0, temp$1, temp$2;
        java.lang.NoSuchMethodException e;

        'cls' := @parameter0: java.lang.Class;
        parameterTypes := @parameter1: java.lang.Class[];

     label0:
        nop;
        temp$0 = virtualinvoke 'cls'.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(parameterTypes);
        temp$1 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)>(temp$0);

     label1:
        nop;
        return temp$1;

     label2:
        nop;
        e := @caughtexception;
        temp$2 = null;
        nop;
        return temp$2;

        catch java.lang.NoSuchMethodException from label0 to label1 with label2;
    }
}
