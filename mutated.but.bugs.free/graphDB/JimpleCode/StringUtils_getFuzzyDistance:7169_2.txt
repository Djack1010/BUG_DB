public class WrapClass 
{
    public static int getFuzzyDistance(java.lang.CharSequence, java.lang.CharSequence, java.util.Locale)
    {
        java.lang.CharSequence term, query;
        java.util.Locale locale;
        boolean temp$0, temp$1, termCharacterMatchFound, temp$20;
        java.lang.IllegalArgumentException temp$2, temp$3;
        java.lang.String termLowerCase, temp$4, temp$5, queryLowerCase, temp$6, temp$7;
        int score, termIndex, previousMatchingCharacterIndex, queryIndex, temp$8, temp$10, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$21, temp$22, temp$23, temp$24;
        char queryChar, temp$9, termChar, temp$11;

        term := @parameter0: java.lang.CharSequence;
        query := @parameter1: java.lang.CharSequence;
        locale := @parameter2: java.util.Locale;
        if term == null goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = 0;
        goto label2;

     label1:
        nop;
        temp$0 = 1;

     label2:
        nop;
        if query == null goto label4;

        goto label3;

     label3:
        nop;
        temp$1 = 0;
        goto label5;

     label4:
        nop;
        temp$1 = 1;

     label5:
        nop;
        if temp$0 != temp$1 goto label6;

        goto label7;

     label6:
        nop;
        temp$2 = new java.lang.IllegalArgumentException;
        specialinvoke temp$2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Strings must not be null");
        throw temp$2;

     label7:
        nop;
        if locale == null goto label8;

        goto label9;

     label8:
        nop;
        temp$3 = new java.lang.IllegalArgumentException;
        specialinvoke temp$3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Locale must not be null");
        throw temp$3;

     label9:
        nop;
        temp$4 = interfaceinvoke term.<java.lang.CharSequence: java.lang.String toString()>();
        temp$5 = virtualinvoke temp$4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(locale);
        termLowerCase = temp$5;
        temp$6 = interfaceinvoke query.<java.lang.CharSequence: java.lang.String toString()>();
        temp$7 = virtualinvoke temp$6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(locale);
        queryLowerCase = temp$7;
        score = 0;
        termIndex = 0;
        previousMatchingCharacterIndex = -2147483648;
        queryIndex = 0;

     label10:
        nop;
        temp$8 = virtualinvoke queryLowerCase.<java.lang.String: int length()>();
        if queryIndex < temp$8 goto label11;

        goto label20;

     label11:
        nop;
        temp$9 = virtualinvoke queryLowerCase.<java.lang.String: char charAt(int)>(queryIndex);
        queryChar = temp$9;
        termCharacterMatchFound = 0;

     label12:
        nop;
        temp$10 = virtualinvoke termLowerCase.<java.lang.String: int length()>();
        if termIndex < temp$10 goto label13;

        goto label19;

     label13:
        nop;
        if termCharacterMatchFound == 0 goto label14;

        goto label19;

        goto label14;

     label14:
        nop;
        temp$11 = virtualinvoke termLowerCase.<java.lang.String: char charAt(int)>(termIndex);
        termChar = temp$11;
        temp$12 = (int) queryChar;
        temp$13 = (int) termChar;
        if temp$12 == temp$13 goto label15;

        goto label18;

     label15:
        nop;
        temp$14 = score;
        temp$15 = temp$14 + 1;
        score = temp$15;
        temp$16 = previousMatchingCharacterIndex;
        temp$17 = temp$16 + 1;
        if temp$17 == termIndex goto label16;

        goto label17;

     label16:
        nop;
        temp$18 = score;
        temp$19 = temp$18 + 2;
        score = temp$19;

     label17:
        nop;
        previousMatchingCharacterIndex = termIndex;
        temp$20 = 1;
        termCharacterMatchFound = temp$20;

     label18:
        nop;
        nop;
        temp$21 = termIndex;
        temp$22 = temp$21 + 1;
        termIndex = temp$22;
        goto label12;

     label19:
        nop;
        nop;
        temp$23 = queryIndex;
        temp$24 = temp$23 + 1;
        queryIndex = temp$24;
        goto label10;

     label20:
        nop;
        return score;
    }
}
