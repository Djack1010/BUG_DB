public class WrapClass 
{
    private static final transient java.lang.String prependIfMissing(java.lang.String, java.lang.CharSequence, boolean, java.lang.CharSequence[])
    {
        java.lang.String str, temp$8, temp$9;
        java.lang.CharSequence prefix, p, temp$5;
        boolean ignoreCase, temp$0, temp$1, temp$6;
        java.lang.CharSequence[] prefixes;
        int temp$2, temp$3, temp$4;
        java.lang.StringBuffer temp$7;

        str := @parameter0: java.lang.String;
        prefix := @parameter1: java.lang.CharSequence;
        ignoreCase := @parameter2: boolean;
        prefixes := @parameter3: java.lang.CharSequence[];
        goto label0;

     label0:
        nop;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(prefix);
        if temp$0 == 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)>(str, prefix, ignoreCase);
        if temp$1 == 0 goto label3;

        goto label2;

        goto label3;

     label2:
        nop;
        return str;

     label3:
        nop;
        if prefixes != null goto label4;

        goto label10;

     label4:
        nop;
        temp$2 = lengthof prefixes;
        if temp$2 > 0 goto label5;

        goto label10;

        goto label5;

     label5:
        nop;
        temp$3 = 0;

     label6:
        nop;
        temp$4 = lengthof prefixes;
        if temp$3 >= temp$4 goto label9;

        temp$5 = prefixes[temp$3];
        p = temp$5;
        temp$6 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)>(str, p, ignoreCase);
        if temp$6 == 0 goto label8;

        goto label7;

     label7:
        nop;
        return str;

     label8:
        nop;
        nop;
        temp$3 = temp$3 + 1;
        goto label6;

     label9:
        nop;

     label10:
        nop;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        temp$8 = interfaceinvoke prefix.<java.lang.CharSequence: java.lang.String toString()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$8);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(str);
        temp$9 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        return temp$9;
    }
}
