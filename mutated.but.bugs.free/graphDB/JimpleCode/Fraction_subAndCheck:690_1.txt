public class WrapClass 
{
    private static final int subAndCheck(int, int)
    {
        int x, y, temp$3, temp$5, temp$8;
        long s, temp$0, temp$1, temp$2;
        boolean temp$4, temp$6;
        java.lang.ArithmeticException temp$7;

        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = (long) x;
        temp$1 = (long) y;
        temp$2 = temp$0 - temp$1;
        s = temp$2;
        temp$3 = s cmp -2147483648L;
        if temp$3 >= 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$4 = 0;
        goto label2;

     label1:
        nop;
        temp$4 = 1;

     label2:
        nop;
        temp$5 = s cmp 2147483647L;
        if temp$5 <= 0 goto label3;

        goto label4;

     label3:
        nop;
        temp$6 = 0;
        goto label5;

     label4:
        nop;
        temp$6 = 1;

     label5:
        nop;
        if temp$4 != temp$6 goto label6;

        goto label7;

     label6:
        nop;
        temp$7 = new java.lang.ArithmeticException;
        specialinvoke temp$7.<java.lang.ArithmeticException: void <init>(java.lang.String)>("overflow: add");
        throw temp$7;

     label7:
        nop;
        temp$8 = (int) s;
        return temp$8;
    }
}
