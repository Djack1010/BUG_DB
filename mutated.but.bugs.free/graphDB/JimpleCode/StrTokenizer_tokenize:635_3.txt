public class WrapClass 
{
    protected java.util.List tokenize(char[], int, int)
    {
        org.apache.commons.lang3.text.StrTokenizer this;
        char[] srcChars;
        int offset, count, pos, temp$4;
        java.util.List temp$0, temp$1, tokenList;
        org.apache.commons.lang3.text.StrBuilder buf, temp$2;
        java.util.ArrayList temp$3;

        this := @this: org.apache.commons.lang3.text.StrTokenizer;
        srcChars := @parameter0: char[];
        offset := @parameter1: int;
        count := @parameter2: int;
        if srcChars == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        temp$1 = (java.util.List) temp$0;
        return temp$1;

     label1:
        nop;
        temp$2 = new org.apache.commons.lang3.text.StrBuilder;
        specialinvoke temp$2.<org.apache.commons.lang3.text.StrBuilder: void <init>()>();
        buf = temp$2;
        temp$3 = new java.util.ArrayList;
        specialinvoke temp$3.<java.util.ArrayList: void <init>()>();
        tokenList = temp$3;
        pos = offset;

     label2:
        nop;
        if pos >= 0 goto label3;

        goto label7;

     label3:
        nop;
        if pos < count goto label4;

        goto label7;

        goto label4;

     label4:
        nop;
        temp$4 = virtualinvoke this.<org.apache.commons.lang3.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)>(srcChars, pos, count, buf, tokenList);
        pos = temp$4;
        if pos >= count goto label5;

        goto label6;

     label5:
        nop;
        virtualinvoke this.<org.apache.commons.lang3.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>(tokenList, "");

     label6:
        nop;
        goto label2;

     label7:
        nop;
        return tokenList;
    }
}
