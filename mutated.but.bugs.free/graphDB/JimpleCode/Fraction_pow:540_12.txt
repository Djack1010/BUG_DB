public class WrapClass 
{
    public final org.apache.commons.lang3.math.Fraction pow(int)
    {
        org.apache.commons.lang3.math.Fraction this, temp$0, temp$1, temp$2, temp$6, temp$7, temp$9, f, temp$10, temp$13, temp$15, temp$16;
        int power, temp$3, temp$4, temp$5, temp$8, temp$11, temp$12, temp$14;

        this := @this: org.apache.commons.lang3.math.Fraction;
        power := @parameter0: int;
        if power == 1 goto label0;

        goto label1;

     label0:
        nop;
        return this;

     label1:
        nop;
        if power == 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$0 = <org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction ONE>;
        return temp$0;

     label3:
        nop;
        if power < 0 goto label4;

        goto label7;

     label4:
        nop;
        if power == -2147483648 goto label5;

        goto label6;

     label5:
        nop;
        temp$1 = virtualinvoke this.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction invert()>();
        temp$2 = virtualinvoke temp$1.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction pow(int)>(2);
        temp$3 = power;
        temp$4 = temp$3 + 2;
        temp$5 = neg temp$4;
        temp$6 = virtualinvoke temp$2.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction pow(int)>(temp$5);
        return temp$6;

     label6:
        nop;
        temp$7 = virtualinvoke this.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction invert()>();
        temp$8 = neg power;
        temp$9 = virtualinvoke temp$7.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction pow(int)>(temp$8);
        return temp$9;

     label7:
        nop;
        temp$10 = virtualinvoke this.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction)>(this);
        f = temp$10;
        temp$11 = power % 2;
        if temp$11 == 0 goto label8;

        goto label9;

     label8:
        nop;
        temp$12 = power / 2;
        temp$13 = virtualinvoke f.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction pow(int)>(temp$12);
        return temp$13;

     label9:
        nop;
        temp$14 = power / 2;
        temp$15 = virtualinvoke f.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction pow(int)>(temp$14);
        temp$16 = virtualinvoke temp$15.<org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction)>(this);
        return temp$16;
    }
}
