public class WrapClass 
{
    protected boolean accept(java.lang.reflect.Field)
    {
        org.apache.commons.lang3.builder.ReflectionToStringBuilder this;
        java.lang.reflect.Field field;
        java.lang.String temp$0, temp$14;
        int temp$1, temp$3, temp$7, temp$15;
        boolean temp$2, temp$4, temp$5, temp$6, temp$8, temp$9, temp$10, temp$11, temp$16, temp$17;
        java.lang.String[] temp$12, temp$13;

        this := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
        field := @parameter0: java.lang.reflect.Field;
        temp$0 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();
        temp$1 = virtualinvoke temp$0.<java.lang.String: int indexOf(int)>(36);
        if temp$1 != -1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = 0;
        return temp$2;

     label1:
        nop;
        temp$3 = virtualinvoke field.<java.lang.reflect.Field: int getModifiers()>();
        temp$4 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(temp$3);
        if temp$4 == 0 goto label4;

        goto label2;

     label2:
        nop;
        temp$5 = virtualinvoke this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean isAppendTransients()>();
        if temp$5 == 0 goto label3;

        goto label4;

        goto label3;

     label3:
        nop;
        temp$6 = 0;
        return temp$6;

     label4:
        nop;
        temp$7 = virtualinvoke field.<java.lang.reflect.Field: int getModifiers()>();
        temp$8 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(temp$7);
        temp$9 = virtualinvoke this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean isAppendStatics()>();
        if temp$9 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$10 = 0;
        goto label7;

     label6:
        nop;
        temp$10 = 1;

     label7:
        nop;
        if temp$8 == temp$10 goto label8;

        goto label9;

     label8:
        nop;
        temp$11 = 0;
        return temp$11;

     label9:
        nop;
        temp$12 = this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames>;
        if temp$12 != null goto label10;

        goto label12;

     label10:
        nop;
        temp$13 = this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames>;
        temp$14 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();
        temp$15 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(temp$13, temp$14);
        if temp$15 >= 0 goto label11;

        goto label12;

        goto label11;

     label11:
        nop;
        temp$16 = 0;
        return temp$16;

     label12:
        nop;
        temp$17 = 1;
        return temp$17;
    }
}
