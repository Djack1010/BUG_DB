public class WrapClass 
{
    private static final int hashMember(java.lang.String, java.lang.Object)
    {
        java.lang.String name;
        java.lang.Object value;
        int part1, temp$0, temp$1, temp$6, temp$7, temp$9, temp$10;
        java.lang.Class temp$2, temp$4, temp$5;
        boolean temp$3, temp$8;

        name := @parameter0: java.lang.String;
        value := @parameter1: java.lang.Object;
        temp$0 = virtualinvoke name.<java.lang.String: int hashCode()>();
        temp$1 = temp$0 * 127;
        part1 = temp$1;
        temp$2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();
        temp$3 = virtualinvoke temp$2.<java.lang.Class: boolean isArray()>();
        if temp$3 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$4 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();
        temp$5 = virtualinvoke temp$4.<java.lang.Class: java.lang.Class getComponentType()>();
        temp$6 = staticinvoke <org.apache.commons.lang3.AnnotationUtils: int arrayMemberHash(java.lang.Class,java.lang.Object)>(temp$5, value);
        temp$7 = part1 ^ temp$6;
        return temp$7;

     label1:
        nop;
        temp$8 = value instanceof java.lang.annotation.Annotation;
        if temp$8 == 0 goto label3;

        goto label2;

     label2:
        nop;

     label3:
        nop;
        temp$9 = virtualinvoke value.<java.lang.Object: int hashCode()>();
        temp$10 = part1 ^ temp$9;
        return temp$10;
    }
}
