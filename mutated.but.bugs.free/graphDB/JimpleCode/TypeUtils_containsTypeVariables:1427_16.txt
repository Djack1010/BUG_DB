public class WrapClass 
{
    public static boolean containsTypeVariables(java.lang.reflect.Type)
    {
        java.lang.reflect.Type type, arg, temp$9, temp$17, temp$22;
        boolean temp$0, temp$1, temp$2, temp$3, temp$4, temp$10, temp$11, temp$12, temp$13, temp$18, temp$23, temp$24, temp$25;
        java.lang.reflect.ParameterizedType temp$5;
        java.lang.reflect.Type[] temp$6, temp$14, temp$15, temp$19, temp$20;
        int temp$7, temp$8, temp$16, temp$21;
        java.lang.reflect.WildcardType wild;

        type := @parameter0: java.lang.reflect.Type;
        temp$0 = type instanceof java.lang.reflect.TypeVariable;
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = 1;
        return temp$1;

     label1:
        nop;
        temp$2 = type instanceof java.lang.Class;
        if temp$2 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$3 = 0;
        return temp$3;

     label3:
        nop;
        temp$4 = type instanceof java.lang.reflect.ParameterizedType;
        if temp$4 == 0 goto label9;

        goto label4;

     label4:
        nop;
        temp$5 = (java.lang.reflect.ParameterizedType) type;
        temp$6 = interfaceinvoke temp$5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
        temp$7 = 0;

     label5:
        nop;
        temp$8 = lengthof temp$6;
        if temp$7 >= temp$8 goto label8;

        temp$9 = temp$6[temp$7];
        arg = temp$9;
        temp$10 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean containsTypeVariables(java.lang.reflect.Type)>(arg);
        if temp$10 == 0 goto label7;

        goto label6;

     label6:
        nop;
        temp$11 = 1;
        return temp$11;

     label7:
        nop;
        nop;
        temp$7 = temp$7 + 1;
        goto label5;

     label8:
        nop;
        temp$12 = 0;
        return temp$12;

     label9:
        nop;
        temp$13 = type instanceof java.lang.reflect.WildcardType;
        if temp$13 == 0 goto label15;

        goto label10;

     label10:
        nop;
        wild = (java.lang.reflect.WildcardType) type;
        temp$14 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType)>(wild);
        temp$15 = temp$14;
        temp$16 = 0;
        temp$17 = temp$15[temp$16];
        temp$18 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean containsTypeVariables(java.lang.reflect.Type)>(temp$17);
        if temp$18 == 0 goto label11;

        goto label13;

     label11:
        nop;
        temp$19 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType)>(wild);
        temp$20 = temp$19;
        temp$21 = 0;
        temp$22 = temp$20[temp$21];
        temp$23 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean containsTypeVariables(java.lang.reflect.Type)>(temp$22);
        if temp$23 == 0 goto label12;

        goto label13;

        goto label12;

     label12:
        nop;
        temp$24 = 0;
        goto label14;

     label13:
        nop;
        temp$24 = 1;

     label14:
        nop;
        return temp$24;

     label15:
        nop;
        temp$25 = 0;
        return temp$25;
    }
}
