public class WrapClass 
{
    private final void init(java.util.Calendar)
    {
        org.apache.commons.lang3.time.FastDateParser this;
        java.util.Calendar definingCalendar;
        java.lang.StringBuilder regex, temp$0;
        java.util.List collector;
        java.util.ArrayList temp$1;
        java.util.regex.Matcher patternMatcher, temp$4, temp$17;
        java.util.regex.Pattern temp$2, temp$40;
        java.lang.String temp$3, temp$8, temp$11, temp$12, temp$13, nextFormatField, temp$20, temp$29, temp$31, temp$34, temp$39;
        boolean temp$5, temp$18, temp$22, temp$23, temp$32, temp$33;
        java.lang.IllegalArgumentException temp$6, temp$27;
        java.lang.StringBuffer temp$7, temp$28;
        int temp$9, temp$15, temp$16, temp$25, temp$26, temp$30, temp$35;
        char temp$10;
        org.apache.commons.lang3.time.FastDateParser$Strategy currentStrategy, temp$14, temp$19, temp$21, temp$24;
        org.apache.commons.lang3.time.FastDateParser$Strategy[] temp$36, temp$38;
        java.lang.Object[] temp$37;

        this := @this: org.apache.commons.lang3.time.FastDateParser;
        definingCalendar := @parameter0: java.util.Calendar;
        temp$0 = new java.lang.StringBuilder;
        specialinvoke temp$0.<java.lang.StringBuilder: void <init>()>();
        regex = temp$0;
        temp$1 = new java.util.ArrayList;
        specialinvoke temp$1.<java.util.ArrayList: void <init>()>();
        collector = temp$1;
        temp$2 = <org.apache.commons.lang3.time.FastDateParser: java.util.regex.Pattern formatPattern>;
        temp$3 = this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>;
        temp$4 = virtualinvoke temp$2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(temp$3);
        patternMatcher = temp$4;
        temp$5 = virtualinvoke patternMatcher.<java.util.regex.Matcher: boolean lookingAt()>();
        if temp$5 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$6 = new java.lang.IllegalArgumentException;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Illegal pattern character \'");
        temp$8 = this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>;
        temp$9 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int regionStart()>();
        temp$10 = virtualinvoke temp$8.<java.lang.String: char charAt(int)>(temp$9);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(temp$10);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\'");
        temp$11 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$11);
        throw temp$6;

     label1:
        nop;
        temp$12 = virtualinvoke patternMatcher.<java.util.regex.Matcher: java.lang.String group()>();
        this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String currentFormatField> = temp$12;
        temp$13 = this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String currentFormatField>;
        temp$14 = virtualinvoke this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar)>(temp$13, definingCalendar);
        currentStrategy = temp$14;

     label2:
        nop;
        goto label3;

     label3:
        nop;
        temp$15 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int end()>();
        temp$16 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int regionEnd()>();
        temp$17 = virtualinvoke patternMatcher.<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>(temp$15, temp$16);
        temp$18 = virtualinvoke patternMatcher.<java.util.regex.Matcher: boolean lookingAt()>();
        if temp$18 == 0 goto label4;

        goto label5;

     label4:
        nop;
        temp$19 = null;
        this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy nextStrategy> = temp$19;
        goto label8;

     label5:
        nop;
        temp$20 = virtualinvoke patternMatcher.<java.util.regex.Matcher: java.lang.String group()>();
        nextFormatField = temp$20;
        temp$21 = virtualinvoke this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar)>(nextFormatField, definingCalendar);
        this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy nextStrategy> = temp$21;
        temp$22 = virtualinvoke currentStrategy.<org.apache.commons.lang3.time.FastDateParser$Strategy: boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)>(this, regex);
        if temp$22 == 0 goto label7;

        goto label6;

     label6:
        nop;
        temp$23 = interfaceinvoke collector.<java.util.List: boolean add(java.lang.Object)>(currentStrategy);

     label7:
        nop;
        this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String currentFormatField> = nextFormatField;
        temp$24 = this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy nextStrategy>;
        currentStrategy = temp$24;
        nop;
        goto label2;

     label8:
        nop;
        temp$25 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int regionStart()>();
        temp$26 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int regionEnd()>();
        if temp$25 < temp$26 goto label9;

        goto label10;

     label9:
        nop;
        temp$27 = new java.lang.IllegalArgumentException;
        temp$28 = new java.lang.StringBuffer;
        specialinvoke temp$28.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Failed to parse \"");
        temp$29 = this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>;
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$29);
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\" ; gave up at index ");
        temp$30 = virtualinvoke patternMatcher.<java.util.regex.Matcher: int regionStart()>();
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$30);
        temp$31 = virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$31);
        throw temp$27;

     label10:
        nop;
        temp$32 = virtualinvoke currentStrategy.<org.apache.commons.lang3.time.FastDateParser$Strategy: boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)>(this, regex);
        if temp$32 == 0 goto label12;

        goto label11;

     label11:
        nop;
        temp$33 = interfaceinvoke collector.<java.util.List: boolean add(java.lang.Object)>(currentStrategy);

     label12:
        nop;
        temp$34 = null;
        this.<org.apache.commons.lang3.time.FastDateParser: java.lang.String currentFormatField> = temp$34;
        temp$35 = interfaceinvoke collector.<java.util.List: int size()>();
        temp$36 = newarray (org.apache.commons.lang3.time.FastDateParser$Strategy)[temp$35];
        temp$37 = interfaceinvoke collector.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(temp$36);
        temp$38 = (org.apache.commons.lang3.time.FastDateParser$Strategy[]) temp$37;
        this.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy[] strategies> = temp$38;
        temp$39 = virtualinvoke regex.<java.lang.StringBuilder: java.lang.String toString()>();
        temp$40 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(temp$39);
        this.<org.apache.commons.lang3.time.FastDateParser: java.util.regex.Pattern parsePattern> = temp$40;
        return;
    }
}
