public class WrapClass 
{
    public static void isAssignableFrom(java.lang.Class, java.lang.Class)
    {
        java.lang.Class superType, type;
        boolean temp$0;
        java.lang.IllegalArgumentException temp$1;
        java.lang.Object[] temp$2;
        java.lang.String temp$3, temp$4, temp$5, temp$6;

        superType := @parameter0: java.lang.Class;
        type := @parameter1: java.lang.Class;
        temp$0 = virtualinvoke superType.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(type);
        if temp$0 == 0 goto label0;

        goto label2;

     label0:
        nop;
        temp$1 = new java.lang.IllegalArgumentException;
        temp$2 = newarray (java.lang.Object)[2];
        goto label1;

     label1:
        nop;
        temp$4 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();
        temp$3 = temp$4;
        nop;
        temp$2[0] = temp$3;
        temp$5 = virtualinvoke superType.<java.lang.Class: java.lang.String getName()>();
        temp$2[1] = temp$5;
        temp$6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot assign a %s to a %s", temp$2);
        specialinvoke temp$1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$6);
        throw temp$1;

     label2:
        nop;
        return;
    }
}
