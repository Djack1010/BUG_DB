public class WrapClass 
{
    public void setUpToClass(java.lang.Class)
    {
        org.apache.commons.lang3.builder.ReflectionToStringBuilder this;
        java.lang.Class clazz;
        java.lang.Object object, temp$0;
        boolean temp$1, temp$2, temp$3;
        java.lang.IllegalArgumentException temp$4;

        this := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
        clazz := @parameter0: java.lang.Class;
        if clazz != null goto label0;

        goto label9;

     label0:
        nop;
        temp$0 = virtualinvoke this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
        object = temp$0;
        if object != null goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = 0;
        goto label3;

     label2:
        nop;
        temp$1 = 1;

     label3:
        nop;
        temp$2 = virtualinvoke clazz.<java.lang.Class: boolean isInstance(java.lang.Object)>(object);
        if temp$2 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$3 = 0;
        goto label6;

     label5:
        nop;
        temp$3 = 1;

     label6:
        nop;
        if temp$1 == temp$3 goto label7;

        goto label8;

     label7:
        nop;
        temp$4 = new java.lang.IllegalArgumentException;
        specialinvoke temp$4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified class is not a superclass of the object");
        throw temp$4;

     label8:
        nop;

     label9:
        nop;
        this.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Class upToClass> = clazz;
        return;
    }
}
