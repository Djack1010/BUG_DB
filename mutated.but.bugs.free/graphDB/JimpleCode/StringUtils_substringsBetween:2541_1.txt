public class WrapClass 
{
    public static java.lang.String[] substringsBetween(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String str, open, close, temp$14;
        boolean temp$0, temp$1, temp$2, temp$15, temp$18;
        java.lang.String[] temp$3, temp$5, temp$19, temp$21, temp$23;
        int strLen, temp$4, closeLen, temp$6, openLen, temp$7, pos, temp$9, start, temp$10, temp$11, temp$12, end, temp$13, temp$16, temp$17, temp$20;
        java.util.List list;
        java.util.ArrayList temp$8;
        java.lang.Object[] temp$22;

        str := @parameter0: java.lang.String;
        open := @parameter1: java.lang.String;
        close := @parameter2: java.lang.String;
        if str == null goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = 0;
        goto label2;

     label1:
        nop;
        temp$0 = 1;

     label2:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(open);
        if temp$0 != temp$1 goto label4;

        goto label3;

     label3:
        nop;
        temp$2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(close);
        if temp$2 == 0 goto label5;

        goto label4;

        goto label5;

     label4:
        nop;
        temp$3 = null;
        return temp$3;

     label5:
        nop;
        temp$4 = virtualinvoke str.<java.lang.String: int length()>();
        strLen = temp$4;
        if strLen == 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$5 = <org.apache.commons.lang3.ArrayUtils: java.lang.String[] EMPTY_STRING_ARRAY>;
        return temp$5;

     label7:
        nop;
        temp$6 = virtualinvoke close.<java.lang.String: int length()>();
        closeLen = temp$6;
        temp$7 = virtualinvoke open.<java.lang.String: int length()>();
        openLen = temp$7;
        temp$8 = new java.util.ArrayList;
        specialinvoke temp$8.<java.util.ArrayList: void <init>()>();
        list = temp$8;
        pos = 0;

     label8:
        nop;
        temp$9 = strLen - closeLen;
        if pos < temp$9 goto label9;

        goto label14;

     label9:
        nop;
        temp$10 = virtualinvoke str.<java.lang.String: int indexOf(java.lang.String,int)>(open, pos);
        start = temp$10;
        if start < 0 goto label10;

        goto label11;

     label10:
        nop;
        goto label14;

     label11:
        nop;
        temp$11 = start;
        temp$12 = temp$11 + openLen;
        start = temp$12;
        temp$13 = virtualinvoke str.<java.lang.String: int indexOf(java.lang.String,int)>(close, start);
        end = temp$13;
        if end < 0 goto label12;

        goto label13;

     label12:
        nop;
        goto label14;

     label13:
        nop;
        temp$14 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(start, end);
        temp$15 = interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>(temp$14);
        temp$16 = end;
        temp$17 = temp$16 + closeLen;
        pos = temp$17;
        goto label8;

     label14:
        nop;
        temp$18 = interfaceinvoke list.<java.util.List: boolean isEmpty()>();
        if temp$18 == 0 goto label16;

        goto label15;

     label15:
        nop;
        temp$19 = null;
        return temp$19;

     label16:
        nop;
        temp$20 = interfaceinvoke list.<java.util.List: int size()>();
        temp$21 = newarray (java.lang.String)[temp$20];
        temp$22 = interfaceinvoke list.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(temp$21);
        temp$23 = (java.lang.String[]) temp$22;
        return temp$23;
    }
}
