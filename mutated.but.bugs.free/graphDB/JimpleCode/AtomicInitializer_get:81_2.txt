public class WrapClass 
{
    public java.lang.Object get() throws org.apache.commons.lang3.concurrent.ConcurrentException
    {
        org.apache.commons.lang3.concurrent.AtomicInitializer this;
        java.lang.Object result, temp$1, temp$2;
        java.util.concurrent.atomic.AtomicReference temp$0, temp$3;
        boolean temp$4;

        this := @this: org.apache.commons.lang3.concurrent.AtomicInitializer;
        temp$0 = this.<org.apache.commons.lang3.concurrent.AtomicInitializer: java.util.concurrent.atomic.AtomicReference reference>;
        temp$1 = virtualinvoke temp$0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
        result = temp$1;
        if result == null goto label0;

        goto label3;

     label0:
        nop;
        temp$2 = virtualinvoke this.<org.apache.commons.lang3.concurrent.AtomicInitializer: java.lang.Object initialize()>();
        result = temp$2;
        temp$3 = this.<org.apache.commons.lang3.concurrent.AtomicInitializer: java.util.concurrent.atomic.AtomicReference reference>;
        temp$4 = virtualinvoke temp$3.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, result);
        if temp$4 == 0 goto label1;

        goto label2;

     label1:
        nop;

     label2:
        nop;

     label3:
        nop;
        return result;
    }
}
