public class WrapClass 
{
    public static java.util.Iterator iterator(java.util.Calendar, int)
    {
        java.util.Calendar focus, start, end, temp$0, temp$2, temp$5, temp$6;
        int rangeStyle, startCutoff, endCutoff, temp$3, temp$4, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28;
        java.lang.Object temp$1;
        java.lang.IllegalArgumentException temp$16;
        java.lang.StringBuffer temp$17;
        java.lang.String temp$18;
        org.apache.commons.lang3.time.DateUtils$DateIterator temp$29;

        focus := @parameter0: java.util.Calendar;
        rangeStyle := @parameter1: int;
        start = null;
        end = null;
        startCutoff = 1;
        endCutoff = 7;
        goto label16;

     label0:
        nop;

     label1:
        nop;
        temp$0 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(focus, 2);
        start = temp$0;
        temp$1 = virtualinvoke start.<java.util.Calendar: java.lang.Object clone()>();
        temp$2 = (java.util.Calendar) temp$1;
        end = temp$2;
        virtualinvoke end.<java.util.Calendar: void add(int,int)>(2, 1);
        virtualinvoke end.<java.util.Calendar: void add(int,int)>(5, -1);
        if rangeStyle == 6 goto label2;

        goto label3;

     label2:
        nop;
        temp$3 = 2;
        startCutoff = temp$3;
        temp$4 = 1;
        endCutoff = temp$4;

     label3:
        nop;
        goto label17;

     label4:
        nop;

     label5:
        nop;

     label6:
        nop;

     label7:
        nop;
        temp$5 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(focus, 5);
        start = temp$5;
        temp$6 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(focus, 5);
        end = temp$6;
        goto label13;

     label8:
        nop;
        goto label14;

     label9:
        nop;
        temp$7 = 2;
        startCutoff = temp$7;
        temp$8 = 1;
        endCutoff = temp$8;
        goto label14;

     label10:
        nop;
        temp$9 = virtualinvoke focus.<java.util.Calendar: int get(int)>(7);
        startCutoff = temp$9;
        temp$10 = startCutoff - 1;
        endCutoff = temp$10;
        goto label14;

     label11:
        nop;
        temp$11 = virtualinvoke focus.<java.util.Calendar: int get(int)>(7);
        temp$12 = temp$11 - 3;
        startCutoff = temp$12;
        temp$13 = virtualinvoke focus.<java.util.Calendar: int get(int)>(7);
        temp$14 = temp$13;
        temp$15 = temp$14 + 3;
        endCutoff = temp$15;
        goto label14;

     label12:
        nop;
        goto label14;

        goto label14;

     label13:
        nop;
        nop;
        tableswitch(rangeStyle)
        {
            case 1: goto label8;
            case 2: goto label9;
            case 3: goto label10;
            case 4: goto label11;
            default: goto label12;
        };

     label14:
        nop;
        goto label17;

     label15:
        nop;
        temp$16 = new java.lang.IllegalArgumentException;
        temp$17 = new java.lang.StringBuffer;
        specialinvoke temp$17.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("The range style ");
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(rangeStyle);
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is not valid.");
        temp$18 = virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(temp$18);
        throw temp$16;

        goto label17;

     label16:
        nop;
        nop;
        tableswitch(rangeStyle)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label0;
            case 6: goto label1;
            default: goto label15;
        };

     label17:
        nop;
        if startCutoff < 1 goto label18;

        goto label19;

     label18:
        nop;
        temp$19 = startCutoff;
        temp$20 = temp$19 + 7;
        startCutoff = temp$20;

     label19:
        nop;
        if startCutoff > 7 goto label20;

        goto label21;

     label20:
        nop;
        temp$21 = startCutoff;
        temp$22 = temp$21 - 7;
        startCutoff = temp$22;

     label21:
        nop;
        if endCutoff < 1 goto label22;

        goto label23;

     label22:
        nop;
        temp$23 = endCutoff;
        temp$24 = temp$23 + 7;
        endCutoff = temp$24;

     label23:
        nop;
        if endCutoff > 7 goto label24;

        goto label25;

     label24:
        nop;
        temp$25 = endCutoff;
        temp$26 = temp$25 - 7;
        endCutoff = temp$26;

     label25:
        nop;

     label26:
        nop;
        temp$27 = virtualinvoke start.<java.util.Calendar: int get(int)>(7);
        if temp$27 != startCutoff goto label27;

        goto label28;

     label27:
        nop;
        virtualinvoke start.<java.util.Calendar: void add(int,int)>(5, -1);
        goto label26;

     label28:
        nop;

     label29:
        nop;
        temp$28 = virtualinvoke end.<java.util.Calendar: int get(int)>(7);
        if temp$28 != endCutoff goto label30;

        goto label31;

     label30:
        nop;
        virtualinvoke end.<java.util.Calendar: void add(int,int)>(5, 1);
        goto label29;

     label31:
        nop;
        temp$29 = new org.apache.commons.lang3.time.DateUtils$DateIterator;
        specialinvoke temp$29.<org.apache.commons.lang3.time.DateUtils$DateIterator: void <init>(java.util.Calendar,java.util.Calendar)>(start, end);
        return temp$29;
    }
}
