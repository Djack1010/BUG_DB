public class WrapClass 
{
    public java.lang.String embed(java.net.URL, java.lang.String) throws org.apache.commons.mail.EmailException
    {
        org.apache.commons.mail.HtmlEmail this;
        java.net.URL url, temp$7, temp$13;
        java.lang.String name, temp$6, temp$8, temp$10, temp$14, temp$19;
        boolean temp$0, temp$9;
        org.apache.commons.mail.EmailException temp$1, temp$11, temp$16;
        org.apache.commons.mail.HtmlEmail$InlineImage ii, temp$4;
        java.util.Map temp$2;
        java.lang.Object temp$3;
        javax.activation.URLDataSource urlDataSource, temp$18;
        javax.activation.DataSource temp$5;
        java.lang.StringBuffer temp$12;
        java.io.InputStream is, temp$15;
        java.io.IOException ioe, e, ioe;
        java.lang.Throwable temp$17;

        this := @this: org.apache.commons.mail.HtmlEmail;
        url := @parameter0: java.net.URL;
        name := @parameter1: java.lang.String;
        temp$0 = staticinvoke <org.apache.commons.mail.EmailUtils: boolean isEmpty(java.lang.String)>(name);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = new org.apache.commons.mail.EmailException;
        specialinvoke temp$1.<org.apache.commons.mail.EmailException: void <init>(java.lang.String)>("name cannot be null or empty");
        throw temp$1;

     label1:
        nop;
        temp$2 = this.<org.apache.commons.mail.HtmlEmail: java.util.Map inlineEmbeds>;
        temp$3 = interfaceinvoke temp$2.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        temp$4 = (org.apache.commons.mail.HtmlEmail$InlineImage) temp$3;
        ii = temp$4;
        temp$5 = virtualinvoke ii.<org.apache.commons.mail.HtmlEmail$InlineImage: javax.activation.DataSource getDataSource()>();
        urlDataSource = (javax.activation.URLDataSource) temp$5;
        temp$6 = virtualinvoke url.<java.net.URL: java.lang.String toExternalForm()>();
        temp$7 = virtualinvoke urlDataSource.<javax.activation.URLDataSource: java.net.URL getURL()>();
        temp$8 = virtualinvoke temp$7.<java.net.URL: java.lang.String toExternalForm()>();
        temp$9 = virtualinvoke temp$6.<java.lang.String: boolean equals(java.lang.Object)>(temp$8);
        if temp$9 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$10 = virtualinvoke ii.<org.apache.commons.mail.HtmlEmail$InlineImage: java.lang.String getCid()>();
        return temp$10;

     label3:
        nop;
        temp$11 = new org.apache.commons.mail.EmailException;
        temp$12 = new java.lang.StringBuffer;
        specialinvoke temp$12.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("embedded name \'");
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(name);
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\' is already bound to URL ");
        temp$13 = virtualinvoke urlDataSource.<javax.activation.URLDataSource: java.net.URL getURL()>();
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$13);
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("; existing names cannot be rebound");
        temp$14 = virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$11.<org.apache.commons.mail.EmailException: void <init>(java.lang.String)>(temp$14);
        throw temp$11;

        is = null;

     label4:
        nop;
        temp$15 = virtualinvoke url.<java.net.URL: java.io.InputStream openStream()>();
        is = temp$15;

     label5:
        nop;

     label6:
        nop;
        if is != null goto label7;

        goto label8;

     label7:
        nop;
        virtualinvoke is.<java.io.InputStream: void close()>();

     label8:
        nop;
        goto label10;

     label9:
        nop;
        ioe := @caughtexception;
        nop;
        goto label10;

     label10:
        nop;
        goto label18;

     label11:
        nop;
        e := @caughtexception;
        temp$16 = new org.apache.commons.mail.EmailException;
        specialinvoke temp$16.<org.apache.commons.mail.EmailException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid URL", e);
        throw temp$16;

     label12:
        nop;
        temp$17 := @caughtexception;

     label13:
        nop;
        if is != null goto label14;

        goto label15;

     label14:
        nop;
        virtualinvoke is.<java.io.InputStream: void close()>();

     label15:
        nop;
        goto label17;

     label16:
        nop;
        ioe := @caughtexception;
        nop;
        goto label17;

     label17:
        nop;
        throw temp$17;

     label18:
        nop;
        temp$18 = new javax.activation.URLDataSource;
        specialinvoke temp$18.<javax.activation.URLDataSource: void <init>(java.net.URL)>(url);
        temp$19 = virtualinvoke this.<org.apache.commons.mail.HtmlEmail: java.lang.String embed(javax.activation.DataSource,java.lang.String)>(temp$18, name);
        return temp$19;

        catch java.io.IOException from label6 to label9 with label9;
        catch java.io.IOException from label13 to label16 with label16;
        catch java.io.IOException from label4 to label5 with label11;
        catch java.lang.Throwable from label4 to label5 with label12;
        catch java.lang.Throwable from label5 to label12 with label12;
    }
}
