public class WrapClass 
{
    public static java.lang.String[] substringsBetween(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String str, open, close, temp$13;
        boolean temp$0, temp$1, temp$14, temp$17;
        java.lang.String[] temp$2, temp$4, temp$18, temp$20, temp$22;
        int strLen, temp$3, closeLen, temp$5, openLen, temp$6, pos, temp$8, start, temp$9, temp$10, temp$11, end, temp$12, temp$15, temp$16, temp$19;
        java.util.List list;
        java.util.ArrayList temp$7;
        java.lang.Object[] temp$21;

        str := @parameter0: java.lang.String;
        open := @parameter1: java.lang.String;
        close := @parameter2: java.lang.String;
        if str == null goto label2;

        goto label0;

     label0:
        nop;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(open);
        if temp$0 == 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(close);
        if temp$1 == 0 goto label3;

        goto label2;

        goto label3;

     label2:
        nop;
        temp$2 = null;
        return temp$2;

     label3:
        nop;
        temp$3 = virtualinvoke str.<java.lang.String: int length()>();
        strLen = temp$3;
        if strLen == 0 goto label4;

        goto label5;

     label4:
        nop;
        temp$4 = <org.apache.commons.lang3.ArrayUtils: java.lang.String[] EMPTY_STRING_ARRAY>;
        return temp$4;

     label5:
        nop;
        temp$5 = virtualinvoke close.<java.lang.String: int length()>();
        closeLen = temp$5;
        temp$6 = virtualinvoke open.<java.lang.String: int length()>();
        openLen = temp$6;
        temp$7 = new java.util.ArrayList;
        specialinvoke temp$7.<java.util.ArrayList: void <init>()>();
        list = temp$7;
        pos = 0;

     label6:
        nop;
        temp$8 = strLen - closeLen;
        if pos < temp$8 goto label7;

        goto label12;

     label7:
        nop;
        temp$9 = virtualinvoke str.<java.lang.String: int indexOf(java.lang.String,int)>(open, pos);
        start = temp$9;
        if start < 0 goto label8;

        goto label9;

     label8:
        nop;
        goto label12;

     label9:
        nop;
        temp$10 = start;
        temp$11 = temp$10 + openLen;
        start = temp$11;
        temp$12 = virtualinvoke str.<java.lang.String: int indexOf(java.lang.String,int)>(close, start);
        end = temp$12;
        if end != 0 goto label10;

        goto label11;

     label10:
        nop;
        goto label12;

     label11:
        nop;
        temp$13 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(start, end);
        temp$14 = interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>(temp$13);
        temp$15 = end;
        temp$16 = temp$15 + closeLen;
        pos = temp$16;
        goto label6;

     label12:
        nop;
        temp$17 = interfaceinvoke list.<java.util.List: boolean isEmpty()>();
        if temp$17 == 0 goto label14;

        goto label13;

     label13:
        nop;
        temp$18 = null;
        return temp$18;

     label14:
        nop;
        temp$19 = interfaceinvoke list.<java.util.List: int size()>();
        temp$20 = newarray (java.lang.String)[temp$19];
        temp$21 = interfaceinvoke list.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(temp$20);
        temp$22 = (java.lang.String[]) temp$21;
        return temp$22;
    }
}
