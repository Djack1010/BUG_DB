public class WrapClass 
{
    public static double getJaroWinklerDistance(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence first, second;
        double DEFAULT_SCALING_FACTOR, jaro, temp$1, matchScore, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$11, temp$12;
        java.lang.IllegalArgumentException temp$0;
        int cl, temp$2;
        long temp$10;

        first := @parameter0: java.lang.CharSequence;
        second := @parameter1: java.lang.CharSequence;
        DEFAULT_SCALING_FACTOR = 0.1;
        if second == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = new java.lang.IllegalArgumentException;
        specialinvoke temp$0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Strings must not be null");
        throw temp$0;

     label1:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: double score(java.lang.CharSequence,java.lang.CharSequence)>(first, second);
        jaro = temp$1;
        temp$2 = staticinvoke <org.apache.commons.lang3.StringUtils: int commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)>(first, second);
        cl = temp$2;
        temp$3 = jaro;
        temp$4 = (double) cl;
        temp$5 = 0.1 * temp$4;
        temp$6 = 1.0 - jaro;
        temp$7 = temp$5 * temp$6;
        temp$8 = temp$3 + temp$7;
        temp$9 = temp$8 * 100.0;
        temp$10 = staticinvoke <java.lang.Math: long round(double)>(temp$9);
        temp$11 = (double) temp$10;
        temp$12 = temp$11 / 100.0;
        matchScore = temp$12;
        return matchScore;
    }
}
