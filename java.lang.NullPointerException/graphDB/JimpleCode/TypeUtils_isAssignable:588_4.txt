public class WrapClass 
{
    private static final boolean isAssignable(java.lang.reflect.Type, java.lang.reflect.WildcardType, java.util.Map)
    {
        java.lang.reflect.Type type, toBound, temp$11, temp$12, bound, temp$15, toBound, temp$20, temp$21, bound, temp$24, toBound, temp$30, temp$31, toBound, temp$36, temp$37;
        java.lang.reflect.WildcardType toWildcardType, wildcardType;
        java.util.Map typeVarAssigns;
        boolean temp$0, temp$1, temp$2, temp$3, temp$6, temp$16, temp$17, temp$25, temp$26, temp$27, temp$32, temp$33, temp$38, temp$39, temp$40;
        java.lang.reflect.Type[] toUpperBounds, temp$4, toLowerBounds, temp$5, upperBounds, temp$7, lowerBounds, temp$8;
        int temp$9, temp$10, temp$13, temp$14, temp$18, temp$19, temp$22, temp$23, temp$28, temp$29, temp$34, temp$35;

        type := @parameter0: java.lang.reflect.Type;
        toWildcardType := @parameter1: java.lang.reflect.WildcardType;
        typeVarAssigns := @parameter2: java.util.Map;
        if type == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = 1;
        return temp$0;

     label1:
        nop;
        if toWildcardType == null goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = 0;
        return temp$1;

     label3:
        nop;
        temp$2 = interfaceinvoke toWildcardType.<java.lang.reflect.WildcardType: boolean equals(java.lang.Object)>(type);
        if temp$2 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$3 = 1;
        return temp$3;

     label5:
        nop;
        temp$4 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType)>(toWildcardType);
        toUpperBounds = temp$4;
        temp$5 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType)>(toWildcardType);
        toLowerBounds = temp$5;
        temp$6 = type instanceof java.lang.reflect.WildcardType;
        if temp$6 == 0 goto label19;

        goto label6;

     label6:
        nop;
        wildcardType = null;
        temp$7 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType)>(wildcardType);
        upperBounds = temp$7;
        temp$8 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType)>(wildcardType);
        lowerBounds = temp$8;
        temp$9 = 0;

     label7:
        nop;
        temp$10 = lengthof toUpperBounds;
        if temp$9 >= temp$10 goto label12;

        temp$11 = toUpperBounds[temp$9];
        toBound = temp$11;
        temp$12 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map)>(toBound, typeVarAssigns);
        toBound = temp$12;
        temp$13 = 0;

     label8:
        nop;
        temp$14 = lengthof upperBounds;
        if temp$13 >= temp$14 goto label11;

        temp$15 = upperBounds[temp$13];
        bound = temp$15;
        temp$16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)>(bound, toBound, typeVarAssigns);
        if temp$16 == 0 goto label9;

        goto label10;

     label9:
        nop;
        temp$17 = 0;
        return temp$17;

     label10:
        nop;
        nop;
        temp$13 = temp$13 + 1;
        goto label8;

     label11:
        nop;
        nop;
        temp$9 = temp$9 + 1;
        goto label7;

     label12:
        nop;
        temp$18 = 0;

     label13:
        nop;
        temp$19 = lengthof toLowerBounds;
        if temp$18 >= temp$19 goto label18;

        temp$20 = toLowerBounds[temp$18];
        toBound = temp$20;
        temp$21 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map)>(toBound, typeVarAssigns);
        toBound = temp$21;
        temp$22 = 0;

     label14:
        nop;
        temp$23 = lengthof lowerBounds;
        if temp$22 >= temp$23 goto label17;

        temp$24 = lowerBounds[temp$22];
        bound = temp$24;
        temp$25 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)>(toBound, bound, typeVarAssigns);
        if temp$25 == 0 goto label15;

        goto label16;

     label15:
        nop;
        temp$26 = 0;
        return temp$26;

     label16:
        nop;
        nop;
        temp$22 = temp$22 + 1;
        goto label14;

     label17:
        nop;
        nop;
        temp$18 = temp$18 + 1;
        goto label13;

     label18:
        nop;
        temp$27 = 1;
        return temp$27;

     label19:
        nop;
        temp$28 = 0;

     label20:
        nop;
        temp$29 = lengthof toUpperBounds;
        if temp$28 >= temp$29 goto label23;

        temp$30 = toUpperBounds[temp$28];
        toBound = temp$30;
        temp$31 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map)>(toBound, typeVarAssigns);
        temp$32 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)>(type, temp$31, typeVarAssigns);
        if temp$32 == 0 goto label21;

        goto label22;

     label21:
        nop;
        temp$33 = 0;
        return temp$33;

     label22:
        nop;
        nop;
        temp$28 = temp$28 + 1;
        goto label20;

     label23:
        nop;
        temp$34 = 0;

     label24:
        nop;
        temp$35 = lengthof toLowerBounds;
        if temp$34 >= temp$35 goto label27;

        temp$36 = toLowerBounds[temp$34];
        toBound = temp$36;
        temp$37 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map)>(toBound, typeVarAssigns);
        temp$38 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)>(temp$37, type, typeVarAssigns);
        if temp$38 == 0 goto label25;

        goto label26;

     label25:
        nop;
        temp$39 = 0;
        return temp$39;

     label26:
        nop;
        nop;
        temp$34 = temp$34 + 1;
        goto label24;

     label27:
        nop;
        temp$40 = 1;
        return temp$40;
    }
}
