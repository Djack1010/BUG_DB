public class WrapClass 
{
    protected java.net.URL createUrl(java.lang.String) throws java.net.MalformedURLException
    {
        org.apache.commons.mail.resolver.DataSourceUrlResolver this;
        java.lang.String resourceLocation, temp$8;
        java.net.URL temp$0, temp$1, temp$5, temp$6, temp$7;
        java.lang.IllegalArgumentException temp$2;
        boolean temp$3, temp$4;

        this := @this: org.apache.commons.mail.resolver.DataSourceUrlResolver;
        resourceLocation := @parameter0: java.lang.String;
        temp$0 = this.<org.apache.commons.mail.resolver.DataSourceUrlResolver: java.net.URL baseUrl>;
        if temp$0 == null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = new java.net.URL;
        specialinvoke temp$1.<java.net.URL: void <init>(java.lang.String)>(resourceLocation);
        return temp$1;

     label1:
        nop;
        temp$2 = new java.lang.IllegalArgumentException;
        specialinvoke temp$2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No resource defined");
        throw temp$2;

        temp$3 = virtualinvoke this.<org.apache.commons.mail.resolver.DataSourceUrlResolver: boolean isFileUrl(java.lang.String)>(resourceLocation);
        if temp$3 == 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$4 = virtualinvoke this.<org.apache.commons.mail.resolver.DataSourceUrlResolver: boolean isHttpUrl(java.lang.String)>(resourceLocation);
        if temp$4 == 0 goto label4;

        goto label3;

        goto label4;

     label3:
        nop;
        temp$5 = new java.net.URL;
        specialinvoke temp$5.<java.net.URL: void <init>(java.lang.String)>(resourceLocation);
        return temp$5;

     label4:
        nop;
        temp$6 = new java.net.URL;
        temp$7 = virtualinvoke this.<org.apache.commons.mail.resolver.DataSourceUrlResolver: java.net.URL getBaseUrl()>();
        temp$8 = virtualinvoke resourceLocation.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&amp;", "&");
        specialinvoke temp$6.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(temp$7, temp$8);
        return temp$6;
    }
}
