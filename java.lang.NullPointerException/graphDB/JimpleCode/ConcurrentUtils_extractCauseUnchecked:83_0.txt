public class WrapClass 
{
    public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException)
    {
        java.util.concurrent.ExecutionException ex;
        java.lang.Throwable temp$0, temp$4;
        org.apache.commons.lang3.concurrent.ConcurrentRuntimeException temp$1, temp$2;
        java.lang.String temp$3;

        ex := @parameter0: java.util.concurrent.ExecutionException;
        if ex == null goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = virtualinvoke ex.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();
        if temp$0 == null goto label1;

        goto label2;

        goto label2;

     label1:
        nop;
        temp$1 = null;
        return temp$1;

     label2:
        nop;
        staticinvoke <org.apache.commons.lang3.concurrent.ConcurrentUtils: void throwCause(java.util.concurrent.ExecutionException)>(ex);
        temp$2 = new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException;
        temp$3 = virtualinvoke ex.<java.util.concurrent.ExecutionException: java.lang.String getMessage()>();
        temp$4 = virtualinvoke ex.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();
        specialinvoke temp$2.<org.apache.commons.lang3.concurrent.ConcurrentRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(temp$3, temp$4);
        return temp$2;
    }
}
