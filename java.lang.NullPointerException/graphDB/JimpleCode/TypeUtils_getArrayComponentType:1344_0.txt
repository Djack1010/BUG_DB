public class WrapClass 
{
    public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
    {
        java.lang.reflect.Type type, temp$6, temp$7;
        boolean temp$0, temp$2, temp$4;
        java.lang.Class clazz, temp$1, temp$3;
        java.lang.reflect.GenericArrayType temp$5;

        type := @parameter0: java.lang.reflect.Type;
        temp$0 = type instanceof java.lang.Class;
        if temp$0 == 0 goto label4;

        goto label0;

     label0:
        nop;
        clazz = (java.lang.Class) type;
        temp$2 = virtualinvoke clazz.<java.lang.Class: boolean isArray()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = virtualinvoke clazz.<java.lang.Class: java.lang.Class getComponentType()>();
        temp$1 = temp$3;
        goto label3;

     label2:
        nop;
        temp$1 = null;

     label3:
        nop;
        return temp$1;

     label4:
        nop;
        temp$4 = type instanceof java.lang.reflect.GenericArrayType;
        if temp$4 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$5 = (java.lang.reflect.GenericArrayType) type;
        temp$6 = interfaceinvoke temp$5.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
        return temp$6;

     label6:
        nop;
        temp$7 = null;
        return temp$7;
    }
}
