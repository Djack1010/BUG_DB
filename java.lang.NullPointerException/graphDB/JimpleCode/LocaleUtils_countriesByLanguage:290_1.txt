public class WrapClass 
{
    public static java.util.List countriesByLanguage(java.lang.String)
    {
        java.lang.String languageCode, temp$9, temp$11, temp$13;
        java.util.List temp$0, temp$1, countries, temp$4, locales, temp$18, temp$19, temp$22, temp$25;
        java.util.concurrent.ConcurrentMap temp$2, temp$20, temp$23;
        java.lang.Object temp$3, temp$7, temp$21, temp$24;
        java.util.ArrayList temp$5;
        int i, temp$6, temp$12, temp$16, temp$17;
        java.util.Locale locale, temp$8;
        boolean temp$10, temp$14, temp$15;

        languageCode := @parameter0: java.lang.String;
        if languageCode == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        temp$1 = (java.util.List) temp$0;
        return temp$1;

     label1:
        nop;
        temp$2 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
        temp$3 = interfaceinvoke temp$2.<java.util.Map: java.lang.Object get(java.lang.Object)>(languageCode);
        temp$4 = (java.util.List) temp$3;
        countries = temp$4;
        if countries == null goto label2;

        goto label10;

     label2:
        nop;
        temp$5 = new java.util.ArrayList;
        specialinvoke temp$5.<java.util.ArrayList: void <init>()>();
        countries = temp$5;
        locales = null;
        i = 0;

     label3:
        nop;
        temp$6 = interfaceinvoke locales.<java.util.List: int size()>();
        if i < temp$6 goto label4;

        goto label9;

     label4:
        nop;
        temp$7 = interfaceinvoke locales.<java.util.List: java.lang.Object get(int)>(i);
        temp$8 = (java.util.Locale) temp$7;
        locale = temp$8;
        temp$9 = virtualinvoke locale.<java.util.Locale: java.lang.String getLanguage()>();
        temp$10 = virtualinvoke languageCode.<java.lang.String: boolean equals(java.lang.Object)>(temp$9);
        if temp$10 == 0 goto label8;

        goto label5;

     label5:
        nop;
        temp$11 = virtualinvoke locale.<java.util.Locale: java.lang.String getCountry()>();
        temp$12 = virtualinvoke temp$11.<java.lang.String: int length()>();
        if temp$12 != 0 goto label6;

        goto label8;

        goto label6;

     label6:
        nop;
        temp$13 = virtualinvoke locale.<java.util.Locale: java.lang.String getVariant()>();
        temp$14 = virtualinvoke temp$13.<java.lang.String: boolean isEmpty()>();
        if temp$14 == 0 goto label8;

        goto label7;

        goto label7;

     label7:
        nop;
        temp$15 = interfaceinvoke countries.<java.util.List: boolean add(java.lang.Object)>(locale);

     label8:
        nop;
        nop;
        temp$16 = i;
        temp$17 = temp$16 + 1;
        i = temp$17;
        goto label3;

     label9:
        nop;
        temp$18 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(countries);
        temp$19 = (java.util.List) temp$18;
        countries = temp$19;
        temp$20 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
        temp$21 = interfaceinvoke temp$20.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(languageCode, countries);
        temp$22 = (java.util.List) temp$21;
        temp$23 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
        temp$24 = interfaceinvoke temp$23.<java.util.Map: java.lang.Object get(java.lang.Object)>(languageCode);
        temp$25 = (java.util.List) temp$24;
        countries = temp$25;

     label10:
        nop;
        return countries;
    }
}
