public class WrapClass 
{
    public static boolean equals(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence cs1, cs2;
        boolean temp$0, temp$1, temp$2, temp$3, temp$4, temp$8;
        int temp$5, temp$6, temp$7;

        cs1 := @parameter0: java.lang.CharSequence;
        cs2 := @parameter1: java.lang.CharSequence;
        if cs1 == cs2 goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = 1;
        return temp$0;

     label1:
        nop;
        if cs2 == null goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = 0;
        return temp$1;

     label3:
        nop;
        temp$2 = cs1 instanceof java.lang.String;
        if temp$2 == 0 goto label6;

        goto label4;

     label4:
        nop;
        temp$3 = cs2 instanceof java.lang.String;
        if temp$3 == 0 goto label6;

        goto label5;

        goto label5;

     label5:
        nop;
        temp$4 = interfaceinvoke cs1.<java.lang.CharSequence: boolean equals(java.lang.Object)>(cs2);
        return temp$4;

     label6:
        nop;
        temp$5 = interfaceinvoke cs1.<java.lang.CharSequence: int length()>();
        temp$6 = interfaceinvoke cs2.<java.lang.CharSequence: int length()>();
        temp$7 = staticinvoke <java.lang.Math: int max(int,int)>(temp$5, temp$6);
        temp$8 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(cs1, 0, 0, cs2, 0, temp$7);
        return temp$8;
    }
}
