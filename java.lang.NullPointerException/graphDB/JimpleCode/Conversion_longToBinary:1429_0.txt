public class WrapClass 
{
    public static boolean[] longToBinary(long, int, boolean[], int, int)
    {
        long src, temp$9, temp$10;
        int srcPos, dstPos, nBools, temp$0, temp$1, temp$2, shift, i, temp$4, temp$5, temp$7, temp$8, temp$11, temp$13, temp$14;
        boolean[] dst, temp$6;
        java.lang.IllegalArgumentException temp$3;
        boolean temp$12;

        src := @parameter0: long;
        srcPos := @parameter1: int;
        dst := @parameter2: boolean[];
        dstPos := @parameter3: int;
        nBools := @parameter4: int;
        if 0 == nBools goto label0;

        goto label1;

     label0:
        nop;
        return dst;

     label1:
        nop;
        temp$0 = nBools - 1;
        temp$1 = temp$0;
        temp$2 = temp$1 + srcPos;
        if temp$2 >= 64 goto label2;

        goto label3;

     label2:
        nop;
        temp$3 = new java.lang.IllegalArgumentException;
        specialinvoke temp$3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("nBools-1+srcPos is greather or equal to than 64");
        throw temp$3;

     label3:
        nop;
        shift = 0;
        i = 0;

     label4:
        nop;
        if i < nBools goto label5;

        goto label9;

     label5:
        nop;
        temp$4 = i;
        temp$5 = temp$4 + srcPos;
        shift = temp$5;
        temp$6 = dst;
        temp$7 = dstPos;
        temp$8 = temp$7 + i;
        temp$9 = src >> shift;
        temp$10 = 1L & temp$9;
        temp$11 = temp$10 cmp 0L;
        if temp$11 == 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$12 = 0;
        goto label8;

     label7:
        nop;
        temp$12 = 1;

     label8:
        nop;
        temp$6[temp$8] = temp$12;
        nop;
        temp$13 = i;
        temp$14 = temp$13 + 1;
        i = temp$14;
        goto label4;

     label9:
        nop;
        return dst;
    }
}
