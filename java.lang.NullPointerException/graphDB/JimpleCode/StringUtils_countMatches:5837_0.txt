public class WrapClass 
{
    public static int countMatches(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence str, sub;
        boolean temp$0, temp$1;
        int temp$2, count, idx, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8;

        str := @parameter0: java.lang.CharSequence;
        sub := @parameter1: java.lang.CharSequence;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(str);
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(sub);
        if temp$1 == 0 goto label2;

        goto label1;

        goto label2;

     label1:
        nop;
        temp$2 = 0;
        return temp$2;

     label2:
        nop;
        count = 0;
        idx = 0;

     label3:
        nop;
        temp$3 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>(str, sub, idx);
        idx = temp$3;
        if temp$3 != -1 goto label4;

        goto label5;

     label4:
        nop;
        temp$4 = count;
        temp$5 = temp$4 + 1;
        count = temp$5;
        temp$6 = idx;
        temp$7 = interfaceinvoke sub.<java.lang.CharSequence: int length()>();
        temp$8 = temp$6 + temp$7;
        idx = temp$8;
        goto label3;

     label5:
        nop;
        return count;
    }
}
