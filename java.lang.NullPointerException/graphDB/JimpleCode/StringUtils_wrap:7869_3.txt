public class WrapClass 
{
    public static java.lang.String wrap(java.lang.String, java.lang.String)
    {
        java.lang.String str, wrapWith, temp$2, temp$3;
        boolean temp$0, temp$1;

        str := @parameter0: java.lang.String;
        wrapWith := @parameter1: java.lang.String;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(str);
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(wrapWith);
        if temp$0 != temp$1 goto label0;

        goto label1;

     label0:
        nop;
        return str;

     label1:
        nop;
        temp$2 = virtualinvoke wrapWith.<java.lang.String: java.lang.String concat(java.lang.String)>(str);
        temp$3 = virtualinvoke temp$2.<java.lang.String: java.lang.String concat(java.lang.String)>(wrapWith);
        return temp$3;
    }
}
