public class WrapClass 
{
    public static java.lang.String toString(java.lang.annotation.Annotation)
    {
        java.lang.annotation.Annotation a;
        org.apache.commons.lang3.builder.ToStringBuilder builder, temp$10;
        java.lang.Class temp$0;
        java.lang.reflect.Method[] temp$1;
        int temp$2, temp$3, temp$6;
        java.lang.reflect.Method m, temp$4;
        java.lang.Class[] temp$5;
        java.lang.String temp$7, temp$12;
        java.lang.Object[] temp$8;
        java.lang.Object temp$9;
        java.lang.RuntimeException ex, temp$11;
        java.lang.Exception ex;

        a := @parameter0: java.lang.annotation.Annotation;
        builder = null;
        temp$0 = interfaceinvoke a.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();
        temp$1 = virtualinvoke temp$0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
        temp$2 = 0;

     label0:
        nop;
        temp$3 = lengthof temp$1;
        if temp$2 >= temp$3 goto label8;

        temp$4 = temp$1[temp$2];
        m = temp$4;
        temp$5 = virtualinvoke m.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        temp$6 = lengthof temp$5;
        if temp$6 > 0 goto label1;

        goto label2;

     label1:
        nop;
        goto label7;

     label2:
        nop;

     label3:
        nop;
        temp$7 = virtualinvoke m.<java.lang.reflect.Method: java.lang.String getName()>();
        temp$8 = newarray (java.lang.Object)[0];
        temp$9 = virtualinvoke m.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(a, temp$8);
        temp$10 = virtualinvoke builder.<org.apache.commons.lang3.builder.ToStringBuilder: org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object)>(temp$7, temp$9);
        goto label6;

     label4:
        nop;
        ex := @caughtexception;
        throw ex;

     label5:
        nop;
        ex := @caughtexception;
        temp$11 = new java.lang.RuntimeException;
        specialinvoke temp$11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(ex);
        throw temp$11;

     label6:
        nop;

     label7:
        nop;
        temp$2 = temp$2 + 1;
        goto label0;

     label8:
        nop;
        temp$12 = virtualinvoke builder.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.String build()>();
        return temp$12;

        catch java.lang.RuntimeException from label3 to label4 with label4;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
