public class WrapClass 
{
    private final void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.lang3.event.EventListenerSupport this;
        java.io.ObjectOutputStream objectOutputStream, testObjectOutputStream, temp$1, temp$7;
        java.util.ArrayList serializableListeners, temp$0;
        java.io.ByteArrayOutputStream temp$2;
        java.util.List temp$3;
        java.util.Iterator temp$4;
        java.lang.Object listener;
        boolean temp$5, temp$6;
        java.io.IOException exception;
        java.lang.Object[] temp$8, temp$9;

        this := @this: org.apache.commons.lang3.event.EventListenerSupport;
        objectOutputStream := @parameter0: java.io.ObjectOutputStream;
        temp$0 = new java.util.ArrayList;
        specialinvoke temp$0.<java.util.ArrayList: void <init>()>();
        serializableListeners = temp$0;
        temp$1 = new java.io.ObjectOutputStream;
        temp$2 = new java.io.ByteArrayOutputStream;
        specialinvoke temp$2.<java.io.ByteArrayOutputStream: void <init>()>();
        specialinvoke temp$1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(temp$2);
        testObjectOutputStream = temp$1;
        temp$3 = this.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
        temp$4 = interfaceinvoke temp$3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$5 = interfaceinvoke temp$4.<java.util.Iterator: boolean hasNext()>();
        if temp$5 == 0 goto label4;

        listener = interfaceinvoke temp$4.<java.util.Iterator: java.lang.Object next()>();

     label1:
        nop;
        virtualinvoke testObjectOutputStream.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(listener);
        temp$6 = virtualinvoke serializableListeners.<java.util.ArrayList: boolean add(java.lang.Object)>(listener);
        goto label3;

     label2:
        nop;
        exception := @caughtexception;
        temp$7 = null;
        testObjectOutputStream = temp$7;
        nop;
        goto label3;

     label3:
        nop;
        nop;
        goto label0;

     label4:
        nop;
        temp$8 = this.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object[] prototypeArray>;
        temp$9 = virtualinvoke serializableListeners.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(temp$8);
        virtualinvoke objectOutputStream.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(temp$9);
        return;

        catch java.io.IOException from label1 to label2 with label2;
    }
}
