public class WrapClass 
{
    public static java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.TypeVariable typeVariable, temp$2;
        java.lang.Object[] temp$0;
        java.lang.Object temp$1;
        java.lang.reflect.Type[] bounds, temp$3, temp$4;

        typeVariable := @parameter0: java.lang.reflect.TypeVariable;
        temp$0 = newarray (java.lang.Object)[0];
        temp$1 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(typeVariable, "typeVariable is null", temp$0);
        temp$2 = (java.lang.reflect.TypeVariable) temp$1;
        temp$3 = interfaceinvoke typeVariable.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
        bounds = temp$3;
        temp$4 = null;
        return temp$4;
    }
}
