public class WrapClass 
{
    public static java.lang.String getAbbreviatedName(java.lang.String, int)
    {
        java.lang.String className, temp$1, part, temp$10, temp$22, temp$26;
        int len, availableSpace, packageLevels, temp$2, endIndex, temp$3, temp$4, level, startIndex, temp$5, temp$6, temp$7, temp$8, temp$9, temp$11, temp$12, temp$13, temp$14, temp$15, temp$17, temp$19, temp$21, temp$23, temp$24, temp$25;
        java.lang.IllegalArgumentException temp$0;
        java.lang.String[] output, temp$16, temp$18, temp$20;

        className := @parameter0: java.lang.String;
        len := @parameter1: int;
        if len <= 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = new java.lang.IllegalArgumentException;
        specialinvoke temp$0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("len must be > 0");
        throw temp$0;

     label1:
        nop;
        if className == null goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = <org.apache.commons.lang3.StringUtils: java.lang.String EMPTY>;
        return temp$1;

     label3:
        nop;
        availableSpace = len;
        temp$2 = staticinvoke <org.apache.commons.lang3.StringUtils: int countMatches(java.lang.CharSequence,char)>(className, 46);
        packageLevels = temp$2;
        output = null;
        temp$3 = virtualinvoke className.<java.lang.String: int length()>();
        temp$4 = temp$3 - 1;
        endIndex = temp$4;
        level = packageLevels;

     label4:
        nop;
        if level >= 0 goto label5;

        goto label14;

     label5:
        nop;
        temp$5 = virtualinvoke className.<java.lang.String: int lastIndexOf(int,int)>(46, endIndex);
        startIndex = temp$5;
        temp$6 = startIndex;
        temp$7 = temp$6 + 1;
        temp$8 = endIndex;
        temp$9 = temp$8 + 1;
        temp$10 = virtualinvoke className.<java.lang.String: java.lang.String substring(int,int)>(temp$7, temp$9);
        part = temp$10;
        temp$11 = availableSpace;
        temp$12 = virtualinvoke part.<java.lang.String: int length()>();
        temp$13 = temp$11 - temp$12;
        availableSpace = temp$13;
        if level > 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$14 = availableSpace;
        temp$15 = temp$14 + -1;
        availableSpace = temp$15;

     label7:
        nop;
        if level == packageLevels goto label8;

        goto label9;

     label8:
        nop;
        temp$16 = output;
        temp$17 = level;
        temp$16[temp$17] = part;
        goto label13;

     label9:
        nop;
        if availableSpace > 0 goto label10;

        goto label11;

     label10:
        nop;
        temp$18 = output;
        temp$19 = level;
        temp$18[temp$19] = part;
        goto label12;

     label11:
        nop;
        temp$20 = output;
        temp$21 = level;
        temp$22 = virtualinvoke part.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
        temp$20[temp$21] = temp$22;

     label12:
        nop;

     label13:
        nop;
        temp$23 = startIndex - 1;
        endIndex = temp$23;
        nop;
        temp$24 = level;
        temp$25 = temp$24 + -1;
        level = temp$25;
        goto label4;

     label14:
        nop;
        temp$26 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String join(java.lang.Object[],char)>(output, 46);
        return temp$26;
    }
}
