public class WrapClass 
{
    private static final boolean equals(java.lang.reflect.WildcardType, java.lang.reflect.Type)
    {
        java.lang.reflect.WildcardType w, other;
        java.lang.reflect.Type t;
        boolean temp$0, temp$3, temp$6, temp$7, temp$8;
        java.lang.reflect.Type[] temp$1, temp$2, temp$4, temp$5;

        w := @parameter0: java.lang.reflect.WildcardType;
        t := @parameter1: java.lang.reflect.Type;
        temp$0 = t instanceof java.lang.reflect.WildcardType;
        if temp$0 == 0 goto label5;

        goto label0;

     label0:
        nop;
        other = (java.lang.reflect.WildcardType) t;
        temp$1 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType)>(w);
        temp$2 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType)>(other);
        temp$3 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[])>(temp$1, temp$2);
        if temp$3 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$4 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType)>(w);
        temp$5 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType)>(other);
        temp$6 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[])>(temp$4, temp$5);
        if temp$6 == 0 goto label2;

        goto label3;

        goto label3;

     label2:
        nop;
        temp$7 = 0;
        goto label4;

     label3:
        nop;
        temp$7 = 1;

     label4:
        nop;
        return temp$7;

     label5:
        nop;
        temp$8 = 1;
        return temp$8;
    }
}
