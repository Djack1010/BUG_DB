public class WrapClass 
{
    private static final java.util.concurrent.ConcurrentMap getCache(int)
    {
        int field, temp$2;
        java.util.concurrent.ConcurrentMap[] temp$0, temp$1;
        java.util.concurrent.ConcurrentMap temp$3;
        java.lang.Throwable temp$4;

        field := @parameter0: int;
        temp$0 = <org.apache.commons.lang3.time.FastDateParser: java.util.concurrent.ConcurrentMap[] caches>;
        entermonitor temp$0;

     label0:
        nop;
        temp$1 = <org.apache.commons.lang3.time.FastDateParser: java.util.concurrent.ConcurrentMap[] caches>;
        temp$2 = field;
        temp$3 = temp$1[temp$2];
        exitmonitor temp$0;

     label1:
        nop;
        return temp$3;

     label2:
        nop;
        temp$4 := @caughtexception;
        exitmonitor temp$0;
        throw temp$4;

     label3:
        nop;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label2 to label3 with label2;
    }
}
