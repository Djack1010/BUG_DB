public class WrapClass 
{
    public static java.util.List languagesByCountry(java.lang.String)
    {
        java.lang.String countryCode, temp$8, temp$10;
        java.util.List temp$0, temp$1, langs, temp$4, locales, temp$6, temp$15, temp$16, temp$19, temp$22;
        java.util.concurrent.ConcurrentMap temp$2, temp$17, temp$20;
        java.lang.Object temp$3, temp$18, temp$21;
        java.util.ArrayList temp$5;
        int i, temp$7, temp$13, temp$14;
        java.util.Locale locale;
        boolean temp$9, temp$11, temp$12;

        countryCode := @parameter0: java.lang.String;
        if countryCode == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        temp$1 = (java.util.List) temp$0;
        return temp$1;

     label1:
        nop;
        temp$2 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
        temp$3 = interfaceinvoke temp$2.<java.util.Map: java.lang.Object get(java.lang.Object)>(countryCode);
        temp$4 = (java.util.List) temp$3;
        langs = temp$4;
        if langs == null goto label2;

        goto label9;

     label2:
        nop;
        temp$5 = new java.util.ArrayList;
        specialinvoke temp$5.<java.util.ArrayList: void <init>()>();
        langs = temp$5;
        temp$6 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.List availableLocaleList()>();
        locales = temp$6;
        i = 0;

     label3:
        nop;
        temp$7 = interfaceinvoke locales.<java.util.List: int size()>();
        if i < temp$7 goto label4;

        goto label8;

     label4:
        nop;
        locale = null;
        temp$8 = virtualinvoke locale.<java.util.Locale: java.lang.String getCountry()>();
        temp$9 = virtualinvoke countryCode.<java.lang.String: boolean equals(java.lang.Object)>(temp$8);
        if temp$9 == 0 goto label7;

        goto label5;

     label5:
        nop;
        temp$10 = virtualinvoke locale.<java.util.Locale: java.lang.String getVariant()>();
        temp$11 = virtualinvoke temp$10.<java.lang.String: boolean isEmpty()>();
        if temp$11 == 0 goto label7;

        goto label6;

        goto label6;

     label6:
        nop;
        temp$12 = interfaceinvoke langs.<java.util.List: boolean add(java.lang.Object)>(locale);

     label7:
        nop;
        nop;
        temp$13 = i;
        temp$14 = temp$13 + 1;
        i = temp$14;
        goto label3;

     label8:
        nop;
        temp$15 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(langs);
        temp$16 = (java.util.List) temp$15;
        langs = temp$16;
        temp$17 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
        temp$18 = interfaceinvoke temp$17.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(countryCode, langs);
        temp$19 = (java.util.List) temp$18;
        temp$20 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
        temp$21 = interfaceinvoke temp$20.<java.util.Map: java.lang.Object get(java.lang.Object)>(countryCode);
        temp$22 = (java.util.List) temp$21;
        langs = temp$22;

     label9:
        nop;
        return langs;
    }
}
