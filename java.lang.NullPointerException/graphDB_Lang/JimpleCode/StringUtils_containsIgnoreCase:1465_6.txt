public class WrapClass 
{
    public static boolean containsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence str, searchStr;
        boolean temp$0, temp$1, temp$2, temp$6, temp$7, temp$10;
        int len, temp$3, max, temp$4, temp$5, i, temp$8, temp$9;

        str := @parameter0: java.lang.CharSequence;
        searchStr := @parameter1: java.lang.CharSequence;
        if str == null goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = 0;
        goto label2;

     label1:
        nop;
        temp$0 = 1;

     label2:
        nop;
        if searchStr == null goto label4;

        goto label3;

     label3:
        nop;
        temp$1 = 0;
        goto label5;

     label4:
        nop;
        temp$1 = 1;

     label5:
        nop;
        if temp$0 != temp$1 goto label6;

        goto label7;

     label6:
        nop;
        temp$2 = 0;
        return temp$2;

     label7:
        nop;
        temp$3 = interfaceinvoke searchStr.<java.lang.CharSequence: int length()>();
        len = temp$3;
        temp$4 = interfaceinvoke str.<java.lang.CharSequence: int length()>();
        temp$5 = temp$4 - len;
        max = temp$5;
        i = 0;

     label8:
        nop;
        if i <= max goto label9;

        goto label12;

     label9:
        nop;
        temp$6 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(str, 1, i, searchStr, 0, len);
        if temp$6 == 0 goto label11;

        goto label10;

     label10:
        nop;
        temp$7 = 1;
        return temp$7;

     label11:
        nop;
        nop;
        temp$8 = i;
        temp$9 = temp$8 + 1;
        i = temp$9;
        goto label8;

     label12:
        nop;
        temp$10 = 0;
        return temp$10;
    }
}
