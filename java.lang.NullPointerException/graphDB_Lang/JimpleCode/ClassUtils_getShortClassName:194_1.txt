public class WrapClass 
{
    public static java.lang.String getShortClassName(java.lang.String)
    {
        java.lang.String className, temp$1, temp$6, temp$16, temp$19, out, temp$26, temp$27, temp$29;
        boolean temp$0, temp$3;
        java.lang.StringBuilder arrayPrefix, temp$2, temp$7;
        char temp$4, temp$8, temp$12;
        int temp$5, temp$9, temp$10, temp$11, temp$13, temp$14, temp$15, lastDotIdx, temp$20, innerIdx, temp$21, temp$22, temp$23, temp$24, temp$25;
        java.util.Map temp$17;
        java.lang.Object temp$18;
        java.lang.StringBuffer temp$28;

        className := @parameter0: java.lang.String;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(className);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = <org.apache.commons.lang3.StringUtils: java.lang.String EMPTY>;
        return temp$1;

     label1:
        nop;
        temp$2 = new java.lang.StringBuilder;
        specialinvoke temp$2.<java.lang.StringBuilder: void <init>()>();
        arrayPrefix = temp$2;
        temp$3 = virtualinvoke className.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if temp$3 == 0 goto label9;

        goto label2;

     label2:
        nop;

     label3:
        nop;
        temp$4 = virtualinvoke className.<java.lang.String: char charAt(int)>(0);
        temp$5 = (int) temp$4;
        if temp$5 == 91 goto label4;

        goto label5;

     label4:
        nop;
        temp$6 = virtualinvoke className.<java.lang.String: java.lang.String substring(int)>(1);
        className = temp$6;
        temp$7 = virtualinvoke arrayPrefix.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");
        goto label3;

     label5:
        nop;
        temp$8 = virtualinvoke className.<java.lang.String: char charAt(int)>(0);
        temp$9 = (int) temp$8;
        if temp$9 == 76 goto label6;

        goto label8;

     label6:
        nop;
        temp$10 = virtualinvoke className.<java.lang.String: int length()>();
        temp$11 = temp$10 - 1;
        temp$12 = virtualinvoke className.<java.lang.String: char charAt(int)>(temp$11);
        temp$13 = (int) temp$12;
        if temp$13 == 59 goto label7;

        goto label8;

        goto label7;

     label7:
        nop;
        temp$14 = virtualinvoke className.<java.lang.String: int length()>();
        temp$15 = temp$14 - 1;
        temp$16 = virtualinvoke className.<java.lang.String: java.lang.String substring(int,int)>(1, temp$15);
        className = temp$16;

     label8:
        nop;
        temp$17 = <org.apache.commons.lang3.ClassUtils: java.util.Map reverseAbbreviationMap>;
        temp$18 = interfaceinvoke temp$17.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);
        temp$19 = (java.lang.String) temp$18;
        className = temp$19;

     label9:
        nop;
        temp$20 = virtualinvoke className.<java.lang.String: int lastIndexOf(int)>(46);
        lastDotIdx = temp$20;
        if lastDotIdx == -1 goto label10;

        goto label11;

     label10:
        nop;
        temp$21 = 0;
        goto label12;

     label11:
        nop;
        temp$22 = lastDotIdx;
        temp$21 = temp$22 + 1;

     label12:
        nop;
        temp$23 = virtualinvoke className.<java.lang.String: int indexOf(int,int)>(36, temp$21);
        innerIdx = temp$23;
        temp$24 = lastDotIdx;
        temp$25 = temp$24 + 1;
        temp$26 = virtualinvoke className.<java.lang.String: java.lang.String substring(int)>(temp$25);
        out = temp$26;
        if innerIdx != -1 goto label13;

        goto label14;

     label13:
        nop;
        temp$27 = virtualinvoke out.<java.lang.String: java.lang.String replace(char,char)>(36, 46);
        out = temp$27;

     label14:
        nop;
        temp$28 = new java.lang.StringBuffer;
        specialinvoke temp$28.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(out);
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(arrayPrefix);
        temp$29 = virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.String toString()>();
        return temp$29;
    }
}
