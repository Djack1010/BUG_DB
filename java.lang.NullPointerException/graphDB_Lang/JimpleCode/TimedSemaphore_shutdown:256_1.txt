public class WrapClass 
{
    public synchronized void shutdown()
    {
        org.apache.commons.lang3.concurrent.TimedSemaphore this;
        boolean temp$0, temp$1, temp$5, temp$6;
        java.util.concurrent.ScheduledExecutorService temp$2;
        java.util.List temp$3;
        java.util.concurrent.ScheduledFuture temp$4;

        this := @this: org.apache.commons.lang3.concurrent.TimedSemaphore;
        temp$0 = this.<org.apache.commons.lang3.concurrent.TimedSemaphore: boolean shutdown>;
        if temp$0 == 0 goto label0;

        goto label3;

     label0:
        nop;
        temp$1 = this.<org.apache.commons.lang3.concurrent.TimedSemaphore: boolean ownExecutor>;
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = virtualinvoke this.<org.apache.commons.lang3.concurrent.TimedSemaphore: java.util.concurrent.ScheduledExecutorService getExecutorService()>();
        temp$3 = interfaceinvoke temp$2.<java.util.concurrent.ScheduledExecutorService: java.util.List shutdownNow()>();

     label2:
        nop;
        temp$4 = this.<org.apache.commons.lang3.concurrent.TimedSemaphore: java.util.concurrent.ScheduledFuture task>;
        temp$5 = interfaceinvoke temp$4.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);
        temp$6 = 1;
        this.<org.apache.commons.lang3.concurrent.TimedSemaphore: boolean shutdown> = temp$6;

     label3:
        nop;
        return;
    }
}
