public class WrapClass 
{
    private static final float toFloatVersion(java.lang.String)
    {
        java.lang.String value, temp$4, temp$7, temp$8;
        java.lang.String[] toParse, temp$2, temp$5;
        int temp$0, temp$3, temp$6;
        java.lang.StringBuffer temp$1;
        float temp$9, temp$10;
        java.lang.NumberFormatException nfe;

        value := @parameter0: java.lang.String;
        toParse = null;
        temp$0 = lengthof toParse;
        if temp$0 >= 2 goto label0;

        goto label5;

     label0:
        nop;

     label1:
        nop;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        temp$2 = toParse;
        temp$3 = 0;
        temp$4 = temp$2[temp$3];
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$4);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);
        temp$5 = toParse;
        temp$6 = 1;
        temp$7 = temp$5[temp$6];
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$7);
        temp$8 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$9 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(temp$8);

     label2:
        nop;
        return temp$9;

     label3:
        nop;
        nfe := @caughtexception;
        nop;
        goto label4;

     label4:
        nop;

     label5:
        nop;
        temp$10 = (float) -1;
        return temp$10;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
