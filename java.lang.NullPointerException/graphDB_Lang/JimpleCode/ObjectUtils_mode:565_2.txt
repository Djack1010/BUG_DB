public class WrapClass 
{
    public static transient java.lang.Object mode(java.lang.Object[])
    {
        java.lang.Object[] items;
        boolean temp$0, temp$12;
        java.util.HashMap occurrences;
        int temp$1, temp$2, max, 'cmp', temp$16;
        java.lang.Object t, temp$3, temp$4, temp$7, result, temp$13, temp$14, temp$17, temp$18, temp$19;
        org.apache.commons.lang3.mutable.MutableInt count, temp$5, temp$6, temp$8, temp$15;
        java.util.Set temp$9, temp$10;
        java.util.Iterator temp$11;
        java.util.Map$Entry e;

        items := @parameter0: java.lang.Object[];
        temp$0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isNotEmpty(java.lang.Object[])>(items);
        if temp$0 == 0 goto label13;

        goto label0;

     label0:
        nop;
        occurrences = null;
        temp$1 = 0;

     label1:
        nop;
        temp$2 = lengthof items;
        if temp$1 >= temp$2 goto label5;

        temp$3 = items[temp$1];
        t = temp$3;
        temp$4 = virtualinvoke occurrences.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(t);
        temp$5 = (org.apache.commons.lang3.mutable.MutableInt) temp$4;
        count = temp$5;
        if count == null goto label2;

        goto label3;

     label2:
        nop;
        temp$6 = new org.apache.commons.lang3.mutable.MutableInt;
        specialinvoke temp$6.<org.apache.commons.lang3.mutable.MutableInt: void <init>(int)>(1);
        temp$7 = virtualinvoke occurrences.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(t, temp$6);
        temp$8 = (org.apache.commons.lang3.mutable.MutableInt) temp$7;
        goto label4;

     label3:
        nop;
        virtualinvoke count.<org.apache.commons.lang3.mutable.MutableInt: void increment()>();

     label4:
        nop;
        nop;
        temp$1 = temp$1 + 1;
        goto label1;

     label5:
        nop;
        result = null;
        max = 0;
        temp$9 = virtualinvoke occurrences.<java.util.HashMap: java.util.Set entrySet()>();
        temp$10 = (java.util.Set) temp$9;
        temp$11 = interfaceinvoke temp$10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        nop;
        temp$12 = interfaceinvoke temp$11.<java.util.Iterator: boolean hasNext()>();
        if temp$12 == 0 goto label12;

        temp$13 = interfaceinvoke temp$11.<java.util.Iterator: java.lang.Object next()>();
        e = (java.util.Map$Entry) temp$13;
        temp$14 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();
        temp$15 = (org.apache.commons.lang3.mutable.MutableInt) temp$14;
        temp$16 = virtualinvoke temp$15.<org.apache.commons.lang3.mutable.MutableInt: int intValue()>();
        'cmp' = temp$16;
        if 'cmp' == max goto label7;

        goto label8;

     label7:
        nop;
        temp$17 = null;
        result = temp$17;
        goto label11;

     label8:
        nop;
        if 'cmp' > max goto label9;

        goto label10;

     label9:
        nop;
        max = 'cmp';
        temp$18 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();
        result = temp$18;

     label10:
        nop;

     label11:
        nop;
        nop;
        goto label6;

     label12:
        nop;
        return result;

     label13:
        nop;
        temp$19 = null;
        return temp$19;
    }
}
