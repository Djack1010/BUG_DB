public class WrapClass 
{
    private static final java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType)
    {
        java.lang.reflect.WildcardType w;
        java.lang.StringBuilder buf, temp$7, temp$8, temp$18, temp$19;
        java.lang.reflect.Type[] lowerBounds, temp$0, upperBounds, temp$1, temp$4, temp$14;
        int temp$2, temp$3, temp$5, temp$9, temp$10, temp$15;
        java.lang.reflect.Type temp$6, temp$16;
        java.lang.Class temp$11, temp$12, temp$13;
        boolean temp$17;
        java.lang.String temp$20;

        w := @parameter0: java.lang.reflect.WildcardType;
        buf = null;
        temp$0 = interfaceinvoke w.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();
        lowerBounds = temp$0;
        temp$1 = interfaceinvoke w.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
        upperBounds = temp$1;
        temp$2 = lengthof lowerBounds;
        if temp$2 > 1 goto label2;

        goto label0;

     label0:
        nop;
        temp$3 = lengthof lowerBounds;
        if temp$3 == 1 goto label1;

        goto label3;

     label1:
        nop;
        temp$4 = lowerBounds;
        temp$5 = 0;
        temp$6 = temp$4[temp$5];
        if temp$6 != null goto label2;

        goto label3;

        goto label2;

        goto label3;

     label2:
        nop;
        temp$7 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" super ");
        temp$8 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])>(temp$7, " & ", lowerBounds);
        goto label10;

     label3:
        nop;
        temp$9 = lengthof upperBounds;
        if temp$9 > 1 goto label8;

        goto label4;

     label4:
        nop;
        temp$10 = lengthof upperBounds;
        if temp$10 == 1 goto label5;

        goto label9;

     label5:
        nop;
        temp$12 = <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object>;
        if temp$12 != null goto label6;

        temp$13 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$(java.lang.String)>("java.lang.Object");
        <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object> = temp$13;
        temp$11 = temp$13;
        goto label7;

     label6:
        nop;
        temp$11 = <org.apache.commons.lang3.reflect.TypeUtils: java.lang.Class class$java$lang$Object>;

     label7:
        nop;
        temp$14 = upperBounds;
        temp$15 = 0;
        temp$16 = temp$14[temp$15];
        temp$17 = virtualinvoke temp$11.<java.lang.Class: boolean equals(java.lang.Object)>(temp$16);
        if temp$17 == 0 goto label8;

        goto label9;

        goto label8;

        goto label9;

     label8:
        nop;
        temp$18 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends ");
        temp$19 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])>(temp$18, " & ", upperBounds);

     label9:
        nop;

     label10:
        nop;
        temp$20 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$20;
    }
}
