public class WrapClass 
{
    private static final java.lang.Object add(java.lang.Object, int, java.lang.Object, java.lang.Class)
    {
        java.lang.Object array, element, result, temp$6;
        int index, length, temp$0, temp$4, temp$5, temp$7, temp$8, temp$9;
        java.lang.Class clss;
        java.lang.IndexOutOfBoundsException temp$1;
        java.lang.StringBuffer temp$2;
        java.lang.String temp$3;

        array := @parameter0: java.lang.Object;
        index := @parameter1: int;
        element := @parameter2: java.lang.Object;
        clss := @parameter3: java.lang.Class;
        temp$0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(array);
        length = temp$0;
        if index > length goto label1;

        goto label0;

     label0:
        nop;
        if index < 0 goto label1;

        goto label2;

        goto label2;

     label1:
        nop;
        temp$1 = new java.lang.IndexOutOfBoundsException;
        temp$2 = new java.lang.StringBuffer;
        specialinvoke temp$2.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Index: ");
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(index);
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(", Length: ");
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(length);
        temp$3 = virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(temp$3);
        throw temp$1;

     label2:
        nop;
        temp$4 = length;
        temp$5 = temp$4 + 1;
        temp$6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(clss, temp$5);
        result = temp$6;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array, 0, result, 0, index);
        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(result, index, element);
        if index < length goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = index;
        temp$8 = temp$7 + 1;
        temp$9 = length - index;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array, index, result, temp$8, temp$9);

     label4:
        nop;
        return result;
    }
}
