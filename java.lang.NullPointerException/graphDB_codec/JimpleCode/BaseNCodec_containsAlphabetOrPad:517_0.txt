public class WrapClass 
{
    protected boolean containsAlphabetOrPad(byte[])
    {
        org.apache.commons.codec.binary.BaseNCodec this;
        byte[] arrayOctet;
        boolean temp$0, temp$7, temp$8, temp$9;
        int temp$1, temp$2, temp$5, temp$6;
        byte element, temp$3, temp$4;

        this := @this: org.apache.commons.codec.binary.BaseNCodec;
        arrayOctet := @parameter0: byte[];
        if arrayOctet == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = 0;
        return temp$0;

     label1:
        nop;
        temp$1 = 0;

     label2:
        nop;
        temp$2 = lengthof arrayOctet;
        if temp$1 >= temp$2 goto label6;

        temp$3 = arrayOctet[temp$1];
        element = temp$3;
        temp$4 = this.<org.apache.commons.codec.binary.BaseNCodec: byte pad>;
        temp$5 = (int) temp$4;
        temp$6 = (int) element;
        if temp$5 == temp$6 goto label4;

        goto label3;

     label3:
        nop;
        temp$7 = virtualinvoke this.<org.apache.commons.codec.binary.BaseNCodec: boolean isInAlphabet(byte)>(element);
        if temp$7 == 0 goto label5;

        goto label4;

        goto label5;

     label4:
        nop;
        temp$8 = 1;
        return temp$8;

     label5:
        nop;
        nop;
        temp$1 = temp$1 + 1;
        goto label2;

     label6:
        nop;
        temp$9 = 0;
        return temp$9;
    }
}
