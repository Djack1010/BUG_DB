public class WrapClass 
{
    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.BinaryCodec this;
        java.lang.Object ascii;
        boolean temp$0, temp$3, temp$6;
        byte[] temp$1, temp$2, temp$5, temp$9;
        char[] temp$4, temp$8;
        java.lang.String temp$7;
        org.apache.commons.codec.DecoderException temp$10;

        this := @this: org.apache.commons.codec.binary.BinaryCodec;
        ascii := @parameter0: java.lang.Object;
        temp$0 = ascii instanceof byte[];
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = (byte[]) ascii;
        temp$2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>(temp$1);
        return temp$2;

     label1:
        nop;
        temp$3 = ascii instanceof char[];
        if temp$3 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$4 = (char[]) ascii;
        temp$5 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>(temp$4);
        return temp$5;

     label3:
        nop;
        temp$6 = ascii instanceof java.lang.String;
        if temp$6 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$7 = (java.lang.String) ascii;
        temp$8 = virtualinvoke temp$7.<java.lang.String: char[] toCharArray()>();
        temp$9 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>(temp$8);
        return temp$9;

     label5:
        nop;
        temp$10 = new org.apache.commons.codec.DecoderException;
        specialinvoke temp$10.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("argument not a byte array");
        throw temp$10;
    }
}
