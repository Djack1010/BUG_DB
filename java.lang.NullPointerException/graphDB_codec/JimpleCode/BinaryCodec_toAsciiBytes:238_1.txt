public class WrapClass 
{
    public static byte[] toAsciiBytes(byte[])
    {
        byte[] raw, l_ascii, temp$7, temp$15, temp$19;
        int temp$0, temp$1, ii, jj, temp$2, temp$3, temp$4, bits, temp$6, temp$8, temp$11, temp$12, temp$13, temp$14, temp$16, temp$17, temp$20, temp$21, temp$23, temp$24, temp$25, temp$26, temp$27;
        int[] temp$5, temp$10;
        byte temp$9, temp$18, temp$22;

        raw := @parameter0: byte[];
        temp$0 = lengthof raw;
        temp$1 = temp$0 << 3;
        l_ascii = newarray (byte)[temp$1];
        ii = 0;
        temp$2 = lengthof l_ascii;
        temp$3 = temp$2 - 1;
        jj = temp$3;

     label0:
        nop;
        temp$4 = lengthof raw;
        if ii < temp$4 goto label1;

        goto label8;

     label1:
        nop;
        bits = 0;

     label2:
        nop;
        temp$5 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;
        temp$6 = lengthof temp$5;
        if bits < temp$6 goto label3;

        goto label7;

     label3:
        nop;
        temp$7 = raw;
        temp$8 = ii;
        temp$9 = temp$7[temp$8];
        temp$10 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;
        temp$11 = bits;
        temp$12 = (int) temp$9;
        temp$13 = temp$10[temp$11];
        temp$14 = temp$12 & temp$13;
        if temp$14 == 0 goto label4;

        goto label5;

     label4:
        nop;
        temp$15 = l_ascii;
        temp$16 = jj - bits;
        temp$17 = temp$16;
        temp$18 = 48;
        temp$15[temp$17] = temp$18;
        goto label6;

     label5:
        nop;
        temp$19 = l_ascii;
        temp$20 = jj - bits;
        temp$21 = temp$20;
        temp$22 = 49;
        temp$19[temp$21] = temp$22;

     label6:
        nop;
        nop;
        temp$23 = bits + 1;
        bits = temp$23;
        goto label2;

     label7:
        nop;
        nop;
        temp$24 = ii;
        temp$25 = temp$24 + 1;
        ii = temp$25;
        temp$26 = jj;
        temp$27 = temp$26 - 8;
        jj = temp$27;
        goto label0;

     label8:
        nop;
        return l_ascii;
    }
}
