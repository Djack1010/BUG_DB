public class WrapClass 
{
    private final java.text.Format getFormat(java.lang.String)
    {
        org.apache.commons.lang3.text.ExtendedMessageFormat this;
        java.lang.String desc, name, args, temp$2, temp$3;
        java.util.Map temp$0, temp$4;
        int i, temp$1;
        org.apache.commons.lang3.text.FormatFactory factory, temp$6;
        java.lang.Object temp$5;
        java.util.Locale temp$7;
        java.text.Format temp$8, temp$9;

        this := @this: org.apache.commons.lang3.text.ExtendedMessageFormat;
        desc := @parameter0: java.lang.String;
        temp$0 = this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.util.Map registry>;
        if temp$0 != null goto label0;

        goto label5;

     label0:
        nop;
        name = desc;
        args = null;
        temp$1 = virtualinvoke desc.<java.lang.String: int indexOf(int)>(44);
        i = temp$1;
        if i > 0 goto label1;

        goto label2;

     label1:
        nop;
        temp$2 = virtualinvoke desc.<java.lang.String: java.lang.String substring(int,int)>(0, i);
        temp$3 = virtualinvoke temp$2.<java.lang.String: java.lang.String trim()>();
        name = temp$3;

     label2:
        nop;
        temp$4 = this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.util.Map registry>;
        temp$5 = interfaceinvoke temp$4.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        temp$6 = (org.apache.commons.lang3.text.FormatFactory) temp$5;
        factory = temp$6;
        if factory != null goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = virtualinvoke this.<org.apache.commons.lang3.text.ExtendedMessageFormat: java.util.Locale getLocale()>();
        temp$8 = interfaceinvoke factory.<org.apache.commons.lang3.text.FormatFactory: java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale)>(name, args, temp$7);
        return temp$8;

     label4:
        nop;

     label5:
        nop;
        temp$9 = null;
        return temp$9;
    }
}
