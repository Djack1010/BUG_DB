public class WrapClass 
{
    private static final java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType)
    {
        java.lang.reflect.ParameterizedType p;
        java.lang.StringBuilder buf, temp$0, temp$4, temp$8, temp$10, temp$11, temp$13, temp$14, temp$15, temp$16;
        java.lang.reflect.Type useOwner, temp$1, temp$2;
        java.lang.Class raw, temp$6;
        java.lang.reflect.Type[] typeArguments;
        java.lang.String temp$3, temp$7, temp$9, temp$12, temp$17;
        boolean temp$5;

        p := @parameter0: java.lang.reflect.ParameterizedType;
        temp$0 = new java.lang.StringBuilder;
        specialinvoke temp$0.<java.lang.StringBuilder: void <init>()>();
        buf = temp$0;
        temp$1 = interfaceinvoke p.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
        useOwner = temp$1;
        temp$2 = interfaceinvoke p.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
        raw = (java.lang.Class) temp$2;
        typeArguments = null;
        if useOwner == null goto label0;

        goto label1;

     label0:
        nop;
        temp$3 = virtualinvoke raw.<java.lang.Class: java.lang.String getName()>();
        temp$4 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$3);
        goto label5;

     label1:
        nop;
        temp$5 = useOwner instanceof java.lang.Class;
        if temp$5 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$6 = (java.lang.Class) useOwner;
        temp$7 = virtualinvoke temp$6.<java.lang.Class: java.lang.String getName()>();
        temp$8 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$7);
        goto label4;

     label3:
        nop;
        temp$9 = interfaceinvoke useOwner.<java.lang.reflect.Type: java.lang.String toString()>();
        temp$10 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$9);

     label4:
        nop;
        temp$11 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        temp$12 = virtualinvoke raw.<java.lang.Class: java.lang.String getSimpleName()>();
        temp$13 = virtualinvoke temp$11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$12);

     label5:
        nop;
        temp$14 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        temp$15 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])>(temp$14, ", ", typeArguments);
        temp$16 = virtualinvoke temp$15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        temp$17 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$17;
    }
}
