public class WrapClass 
{
    public static int indexOf(java.lang.Object[], java.lang.Object, int)
    {
        java.lang.Object[] array, temp$2, temp$11;
        java.lang.Object objectToFind, temp$4, temp$13;
        int startIndex, temp$0, i, temp$1, temp$3, temp$5, temp$6, i, temp$10, temp$12, temp$15, temp$16, temp$17;
        java.lang.Class temp$7, temp$8;
        boolean temp$9, temp$14;

        array := @parameter0: java.lang.Object[];
        objectToFind := @parameter1: java.lang.Object;
        startIndex := @parameter2: int;
        if array == null goto label0;

        goto label1;

     label0:
        nop;

     label1:
        nop;
        if startIndex < 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$0 = 0;
        startIndex = temp$0;

     label3:
        nop;
        if objectToFind == null goto label4;

        goto label10;

     label4:
        nop;
        i = startIndex;

     label5:
        nop;
        temp$1 = lengthof array;
        if i < temp$1 goto label6;

        goto label9;

     label6:
        nop;
        temp$2 = array;
        temp$3 = i;
        temp$4 = temp$2[temp$3];
        if temp$4 == null goto label7;

        goto label8;

     label7:
        nop;
        return i;

     label8:
        nop;
        nop;
        temp$5 = i;
        temp$6 = temp$5 + 1;
        i = temp$6;
        goto label5;

     label9:
        nop;
        goto label18;

     label10:
        nop;
        temp$7 = virtualinvoke array.<java.lang.Object: java.lang.Class getClass()>();
        temp$8 = virtualinvoke temp$7.<java.lang.Class: java.lang.Class getComponentType()>();
        temp$9 = virtualinvoke temp$8.<java.lang.Class: boolean isInstance(java.lang.Object)>(objectToFind);
        if temp$9 == 0 goto label17;

        goto label11;

     label11:
        nop;
        i = startIndex;

     label12:
        nop;
        temp$10 = lengthof array;
        if i < temp$10 goto label13;

        goto label16;

     label13:
        nop;
        temp$11 = array;
        temp$12 = i;
        temp$13 = temp$11[temp$12];
        temp$14 = virtualinvoke objectToFind.<java.lang.Object: boolean equals(java.lang.Object)>(temp$13);
        if temp$14 == 0 goto label15;

        goto label14;

     label14:
        nop;
        return i;

     label15:
        nop;
        nop;
        temp$15 = i;
        temp$16 = temp$15 + 1;
        i = temp$16;
        goto label12;

     label16:
        nop;

     label17:
        nop;

     label18:
        nop;
        temp$17 = <org.apache.commons.lang3.ArrayUtils: int INDEX_NOT_FOUND>;
        return temp$17;
    }
}
