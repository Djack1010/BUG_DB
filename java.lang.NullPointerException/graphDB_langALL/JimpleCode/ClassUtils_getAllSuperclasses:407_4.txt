public class WrapClass 
{
    public static java.util.List getAllSuperclasses(java.lang.Class)
    {
        java.lang.Class 'cls', superclass, temp$2, temp$4;
        java.util.List temp$0, classes, temp$5;
        java.util.ArrayList temp$1;
        boolean temp$3;

        'cls' := @parameter0: java.lang.Class;
        if 'cls' == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = null;
        return temp$0;

     label1:
        nop;
        temp$1 = new java.util.ArrayList;
        specialinvoke temp$1.<java.util.ArrayList: void <init>()>();
        classes = temp$1;
        temp$2 = virtualinvoke 'cls'.<java.lang.Class: java.lang.Class getSuperclass()>();
        superclass = temp$2;

     label2:
        nop;
        if superclass != null goto label3;

        goto label4;

     label3:
        nop;
        temp$3 = interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>(superclass);
        temp$4 = virtualinvoke superclass.<java.lang.Class: java.lang.Class getSuperclass()>();
        superclass = temp$4;
        goto label2;

     label4:
        nop;
        temp$5 = null;
        return temp$5;
    }
}
