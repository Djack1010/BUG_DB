public class WrapClass 
{
    public static transient long[] generateBitVectors(java.lang.Class, java.lang.Enum[])
    {
        java.lang.Class enumClass;
        java.lang.Enum[] values, temp$1, temp$5;
        java.lang.Object[] temp$0, temp$4;
        java.util.EnumSet condensed, temp$2;
        boolean temp$3, temp$12;
        long[] result, temp$14;
        int temp$6, temp$7, temp$8, temp$9, temp$10, temp$15, temp$16, temp$17, temp$19, temp$20, temp$21;
        java.util.Iterator temp$11;
        java.lang.Enum value;
        java.lang.Object temp$13;
        long temp$18, temp$22, temp$23;

        enumClass := @parameter0: java.lang.Class;
        values := @parameter1: java.lang.Enum[];
        temp$0 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object[] noNullElements(java.lang.Object[])>(values);
        temp$1 = (java.lang.Enum[]) temp$0;
        temp$2 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(enumClass);
        condensed = temp$2;
        temp$3 = staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(condensed, values);
        temp$4 = virtualinvoke enumClass.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
        temp$5 = (java.lang.Enum[]) temp$4;
        temp$6 = lengthof temp$5;
        temp$7 = temp$6 - 1;
        temp$8 = temp$7 / 64;
        temp$9 = temp$8;
        temp$10 = temp$9 + 1;
        result = newarray (long)[temp$10];
        temp$11 = interfaceinvoke condensed.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$12 = interfaceinvoke temp$11.<java.util.Iterator: boolean hasNext()>();
        if temp$12 == 0 goto label1;

        temp$13 = interfaceinvoke temp$11.<java.util.Iterator: java.lang.Object next()>();
        value = (java.lang.Enum) temp$13;
        temp$14 = result;
        temp$15 = virtualinvoke value.<java.lang.Enum: int ordinal()>();
        temp$16 = temp$15 / 64;
        temp$17 = temp$16;
        temp$18 = temp$14[temp$17];
        temp$19 = virtualinvoke value.<java.lang.Enum: int ordinal()>();
        temp$20 = temp$19 % 64;
        temp$21 = 1 << temp$20;
        temp$22 = (long) temp$21;
        temp$23 = temp$18 | temp$22;
        temp$14[temp$17] = temp$23;
        nop;
        goto label0;

     label1:
        nop;
        staticinvoke <org.apache.commons.lang3.ArrayUtils: void reverse(long[])>(result);
        return result;
    }
}
