public class WrapClass 
{
    public static java.lang.reflect.Method[] getMethodsWithAnnotation(java.lang.Class, java.lang.Class)
    {
        java.lang.Class 'cls', annotationCls;
        java.util.List annotatedMethodsList;
        int temp$0;
        java.lang.reflect.Method[] temp$1, temp$3;
        java.lang.Object[] temp$2;

        'cls' := @parameter0: java.lang.Class;
        annotationCls := @parameter1: java.lang.Class;
        annotatedMethodsList = null;
        temp$0 = interfaceinvoke annotatedMethodsList.<java.util.List: int size()>();
        temp$1 = newarray (java.lang.reflect.Method)[temp$0];
        temp$2 = interfaceinvoke annotatedMethodsList.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(temp$1);
        temp$3 = (java.lang.reflect.Method[]) temp$2;
        return temp$3;
    }
}
