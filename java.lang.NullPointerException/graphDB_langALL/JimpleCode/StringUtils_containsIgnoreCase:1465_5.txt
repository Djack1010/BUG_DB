public class WrapClass 
{
    public static boolean containsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence str, searchStr;
        int len, temp$0, max, temp$1, temp$2, i, temp$5, temp$6;
        boolean temp$3, temp$4, temp$7;

        str := @parameter0: java.lang.CharSequence;
        searchStr := @parameter1: java.lang.CharSequence;
        if str == null goto label1;

        goto label0;

     label0:
        nop;
        if searchStr == null goto label1;

        goto label2;

        goto label2;

     label1:
        nop;

     label2:
        nop;
        temp$0 = interfaceinvoke searchStr.<java.lang.CharSequence: int length()>();
        len = temp$0;
        temp$1 = interfaceinvoke str.<java.lang.CharSequence: int length()>();
        temp$2 = temp$1 - len;
        max = temp$2;
        i = 0;

     label3:
        nop;
        if i <= max goto label4;

        goto label7;

     label4:
        nop;
        temp$3 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(str, 1, i, searchStr, 0, len);
        if temp$3 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$4 = 1;
        return temp$4;

     label6:
        nop;
        nop;
        temp$5 = i;
        temp$6 = temp$5 + 1;
        i = temp$6;
        goto label3;

     label7:
        nop;
        temp$7 = 0;
        return temp$7;
    }
}
