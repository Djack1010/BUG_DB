public class WrapClass 
{
    public static java.lang.Object[] subarray(java.lang.Object[], int, int)
    {
        java.lang.Object[] array, temp$0, emptyArray, subarray;
        int startIndexInclusive, endIndexExclusive, temp$1, temp$2, temp$3, newSize, temp$4;
        java.lang.Class type;
        java.lang.Object temp$5, temp$6;

        array := @parameter0: java.lang.Object[];
        startIndexInclusive := @parameter1: int;
        endIndexExclusive := @parameter2: int;
        if array == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = null;
        return temp$0;

     label1:
        nop;
        if startIndexInclusive < 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = 0;
        startIndexInclusive = temp$1;

     label3:
        nop;
        temp$2 = lengthof array;
        if endIndexExclusive > temp$2 goto label4;

        goto label5;

     label4:
        nop;
        temp$3 = lengthof array;
        endIndexExclusive = temp$3;

     label5:
        nop;
        temp$4 = endIndexExclusive - startIndexInclusive;
        newSize = temp$4;
        type = null;
        if newSize <= 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(type, 0);
        emptyArray = (java.lang.Object[]) temp$5;
        return emptyArray;

     label7:
        nop;
        temp$6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(type, newSize);
        subarray = (java.lang.Object[]) temp$6;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array, startIndexInclusive, subarray, 0, newSize);
        return subarray;
    }
}
