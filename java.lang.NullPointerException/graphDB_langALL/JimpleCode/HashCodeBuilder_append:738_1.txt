public class WrapClass 
{
    public org.apache.commons.lang3.builder.HashCodeBuilder append(float[])
    {
        org.apache.commons.lang3.builder.HashCodeBuilder this, temp$6, temp$7;
        float[] array;
        int temp$0, temp$1, temp$2, temp$3, temp$4;
        float element, temp$5;

        this := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
        array := @parameter0: float[];
        if array == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = this.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
        temp$1 = this.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
        temp$2 = temp$0 * temp$1;
        this.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = temp$2;
        goto label4;

     label1:
        nop;
        temp$3 = 0;

     label2:
        nop;
        temp$4 = lengthof array;
        if temp$3 >= temp$4 goto label3;

        temp$5 = array[temp$3];
        element = temp$5;
        temp$6 = virtualinvoke this.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(float)>(element);
        nop;
        temp$3 = temp$3 + 1;
        goto label2;

     label3:
        nop;

     label4:
        nop;
        temp$7 = null;
        return temp$7;
    }
}
