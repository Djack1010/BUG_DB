public class WrapClass 
{
    public static transient java.lang.Object[] addAll(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] array1, array2, temp$0, temp$1, joinedArray;
        java.lang.Class type1, temp$2, temp$3, type2, temp$11, temp$12;
        int temp$4, temp$5, temp$6, temp$8, temp$9, temp$10;
        java.lang.Object temp$7;
        java.lang.ArrayStoreException ase;

        array1 := @parameter0: java.lang.Object[];
        array2 := @parameter1: java.lang.Object[];
        if array1 == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>(array2);
        return temp$0;

     label1:
        nop;
        if array2 == null goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>(array1);
        return temp$1;

     label3:
        nop;
        temp$2 = virtualinvoke array1.<java.lang.Object: java.lang.Class getClass()>();
        temp$3 = virtualinvoke temp$2.<java.lang.Class: java.lang.Class getComponentType()>();
        type1 = temp$3;
        temp$4 = lengthof array1;
        temp$5 = lengthof array2;
        temp$6 = temp$4 + temp$5;
        temp$7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(type1, temp$6);
        joinedArray = (java.lang.Object[]) temp$7;
        temp$8 = lengthof array1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array1, 0, joinedArray, 0, temp$8);

     label4:
        nop;
        temp$9 = lengthof array1;
        temp$10 = lengthof array2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(array2, 0, joinedArray, temp$9, temp$10);
        goto label6;

     label5:
        nop;
        ase := @caughtexception;
        temp$11 = virtualinvoke array2.<java.lang.Object: java.lang.Class getClass()>();
        temp$12 = virtualinvoke temp$11.<java.lang.Class: java.lang.Class getComponentType()>();
        type2 = temp$12;
        throw ase;

     label6:
        nop;
        return joinedArray;

        catch java.lang.ArrayStoreException from label4 to label5 with label5;
    }
}
