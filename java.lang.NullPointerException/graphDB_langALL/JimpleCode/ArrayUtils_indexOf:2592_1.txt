public class WrapClass 
{
    public static int indexOf(double[], double, int, double)
    {
        double[] array, temp$5, temp$9;
        double valueToFind, tolerance, min, temp$2, max, temp$3, temp$7, temp$11;
        int startIndex, temp$1, i, temp$4, temp$6, temp$8, temp$10, temp$12, temp$13, temp$14, temp$15;
        boolean temp$0;

        array := @parameter0: double[];
        valueToFind := @parameter1: double;
        startIndex := @parameter2: int;
        tolerance := @parameter3: double;
        temp$0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isEmpty(double[])>(array);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;

     label1:
        nop;
        if startIndex < 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = 0;
        startIndex = temp$1;

     label3:
        nop;
        temp$2 = valueToFind - tolerance;
        min = temp$2;
        temp$3 = valueToFind;
        max = temp$3 + tolerance;
        i = startIndex;

     label4:
        nop;
        temp$4 = lengthof array;
        if i < temp$4 goto label5;

        goto label9;

     label5:
        nop;
        temp$5 = array;
        temp$6 = i;
        temp$7 = temp$5[temp$6];
        temp$8 = temp$7 cmpl min;
        if temp$8 < 0 goto label8;

        goto label6;

     label6:
        nop;
        temp$9 = array;
        temp$10 = i;
        temp$11 = temp$9[temp$10];
        temp$12 = temp$11 cmpg max;
        if temp$12 > 0 goto label8;

        goto label7;

        goto label7;

     label7:
        nop;
        return i;

     label8:
        nop;
        nop;
        temp$13 = i;
        temp$14 = temp$13 + 1;
        i = temp$14;
        goto label4;

     label9:
        nop;
        temp$15 = <org.apache.commons.lang3.ArrayUtils: int INDEX_NOT_FOUND>;
        return temp$15;
    }
}
