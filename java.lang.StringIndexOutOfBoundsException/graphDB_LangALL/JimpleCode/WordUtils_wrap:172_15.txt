public class WrapClass 
{
    public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean)
    {
        java.lang.String str, newLineStr, temp$0, temp$1, temp$15, temp$22, temp$30, temp$35, temp$37, temp$39;
        int wrapLength, temp$2, inputLineLength, temp$3, offset, temp$5, temp$6, temp$8, temp$9, temp$10, temp$11, spaceToWrapAt, temp$12, temp$13, temp$14, temp$18, temp$19, temp$20, temp$21, temp$25, temp$26, temp$27, temp$28, temp$29, temp$33, temp$34;
        boolean wrapLongWords;
        java.lang.StringBuilder wrappedLine, temp$4, temp$16, temp$17, temp$23, temp$24, temp$31, temp$32, temp$36, temp$38;
        char temp$7;

        str := @parameter0: java.lang.String;
        wrapLength := @parameter1: int;
        newLineStr := @parameter2: java.lang.String;
        wrapLongWords := @parameter3: boolean;
        if str == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = null;
        return temp$0;

     label1:
        nop;
        if newLineStr == null goto label2;

        goto label3;

     label2:
        nop;
        temp$1 = <org.apache.commons.lang3.SystemUtils: java.lang.String LINE_SEPARATOR>;
        newLineStr = temp$1;

     label3:
        nop;
        if wrapLength < -1 goto label4;

        goto label5;

     label4:
        nop;
        temp$2 = 1;
        wrapLength = temp$2;

     label5:
        nop;
        temp$3 = virtualinvoke str.<java.lang.String: int length()>();
        inputLineLength = temp$3;
        offset = 0;
        temp$4 = new java.lang.StringBuilder;
        temp$5 = inputLineLength;
        temp$6 = temp$5 + 32;
        specialinvoke temp$4.<java.lang.StringBuilder: void <init>(int)>(temp$6);
        wrappedLine = temp$4;

     label6:
        nop;
        if offset < inputLineLength goto label7;

        goto label21;

     label7:
        nop;
        temp$7 = virtualinvoke str.<java.lang.String: char charAt(int)>(offset);
        temp$8 = (int) temp$7;
        if temp$8 == 32 goto label8;

        goto label9;

     label8:
        nop;
        temp$9 = offset;
        temp$10 = temp$9 + 1;
        offset = temp$10;
        goto label6;

     label9:
        nop;
        temp$11 = inputLineLength - offset;
        if temp$11 <= wrapLength goto label10;

        goto label11;

     label10:
        nop;
        goto label21;

     label11:
        nop;
        temp$12 = wrapLength;
        temp$13 = temp$12 + offset;
        temp$14 = virtualinvoke str.<java.lang.String: int lastIndexOf(int,int)>(32, temp$13);
        spaceToWrapAt = temp$14;
        if spaceToWrapAt >= offset goto label12;

        goto label13;

     label12:
        nop;
        temp$15 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(offset, spaceToWrapAt);
        temp$16 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$15);
        temp$17 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newLineStr);
        temp$18 = spaceToWrapAt;
        temp$19 = temp$18 + 1;
        offset = temp$19;
        goto label20;

     label13:
        nop;
        if wrapLongWords == 0 goto label15;

        goto label14;

     label14:
        nop;
        temp$20 = wrapLength;
        temp$21 = temp$20 + offset;
        temp$22 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(offset, temp$21);
        temp$23 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$22);
        temp$24 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newLineStr);
        temp$25 = offset;
        temp$26 = temp$25 + wrapLength;
        offset = temp$26;
        goto label19;

     label15:
        nop;
        temp$27 = wrapLength;
        temp$28 = temp$27 + offset;
        temp$29 = virtualinvoke str.<java.lang.String: int indexOf(int,int)>(32, temp$28);
        spaceToWrapAt = temp$29;
        if spaceToWrapAt >= 0 goto label16;

        goto label17;

     label16:
        nop;
        temp$30 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(offset, spaceToWrapAt);
        temp$31 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$30);
        temp$32 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newLineStr);
        temp$33 = spaceToWrapAt;
        temp$34 = temp$33 + 1;
        offset = temp$34;
        goto label18;

     label17:
        nop;
        temp$35 = virtualinvoke str.<java.lang.String: java.lang.String substring(int)>(offset);
        temp$36 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$35);
        offset = inputLineLength;

     label18:
        nop;

     label19:
        nop;

     label20:
        nop;
        goto label6;

     label21:
        nop;
        temp$37 = virtualinvoke str.<java.lang.String: java.lang.String substring(int)>(offset);
        temp$38 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$37);
        temp$39 = virtualinvoke wrappedLine.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$39;
    }
}
