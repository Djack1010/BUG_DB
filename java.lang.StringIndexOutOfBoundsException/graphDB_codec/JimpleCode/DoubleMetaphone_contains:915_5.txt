public class WrapClass 
{
    protected static transient boolean contains(java.lang.String, int, int, java.lang.String[])
    {
        java.lang.String value, target, temp$7, element, temp$10;
        int start, length, temp$1, temp$2, temp$3, temp$5, temp$6, temp$8, temp$9;
        java.lang.String[] criteria;
        boolean result, temp$0, temp$4, temp$11, temp$12;

        value := @parameter0: java.lang.String;
        start := @parameter1: int;
        length := @parameter2: int;
        criteria := @parameter3: java.lang.String[];
        result = 0;
        if start >= 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = 0;
        goto label2;

     label1:
        nop;
        temp$0 = 1;

     label2:
        nop;
        temp$1 = start;
        temp$2 = virtualinvoke value.<java.lang.String: int length()>();
        temp$3 = temp$1 + length;
        if temp$3 <= temp$2 goto label4;

        goto label3;

     label3:
        nop;
        temp$4 = 0;
        goto label5;

     label4:
        nop;
        temp$4 = 1;

     label5:
        nop;
        if temp$0 == temp$4 goto label6;

        goto label11;

     label6:
        nop;
        temp$5 = start;
        temp$6 = temp$5 + length;
        temp$7 = virtualinvoke value.<java.lang.String: java.lang.String substring(int,int)>(start, temp$6);
        target = temp$7;
        temp$8 = 0;

     label7:
        nop;
        temp$9 = lengthof criteria;
        if temp$8 >= temp$9 goto label10;

        temp$10 = criteria[temp$8];
        element = temp$10;
        temp$11 = virtualinvoke target.<java.lang.String: boolean equals(java.lang.Object)>(element);
        if temp$11 == 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$12 = 1;
        result = temp$12;
        goto label10;

     label9:
        nop;
        nop;
        temp$8 = temp$8 + 1;
        goto label7;

     label10:
        nop;

     label11:
        nop;
        return result;
    }
}
