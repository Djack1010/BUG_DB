public class WrapClass 
{
    public static java.lang.String abbreviateMiddle(java.lang.String, java.lang.String, int)
    {
        java.lang.String str, middle, temp$15, temp$18, temp$20;
        int length, temp$2, temp$3, temp$4, temp$5, targetSting, temp$6, temp$7, startOffset, temp$8, temp$9, temp$10, endOffset, temp$11, temp$12, temp$13;
        boolean temp$0, temp$1;
        java.lang.StringBuilder builder, temp$14, temp$16, temp$17, temp$19;

        str := @parameter0: java.lang.String;
        middle := @parameter1: java.lang.String;
        length := @parameter2: int;
        temp$0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(str);
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(middle);
        if temp$1 == 0 goto label2;

        goto label1;

        goto label2;

     label1:
        nop;
        return str;

     label2:
        nop;
        temp$2 = virtualinvoke str.<java.lang.String: int length()>();
        if length >= temp$2 goto label4;

        goto label3;

     label3:
        nop;
        temp$3 = virtualinvoke middle.<java.lang.String: int length()>();
        temp$4 = temp$3;
        temp$5 = temp$4 + 2;
        if length < temp$5 goto label4;

        goto label5;

        goto label5;

     label4:
        nop;
        return str;

     label5:
        nop;
        temp$6 = virtualinvoke middle.<java.lang.String: int length()>();
        temp$7 = length - temp$6;
        targetSting = temp$7;
        temp$8 = targetSting / 2;
        temp$9 = temp$8;
        temp$10 = targetSting % 2;
        startOffset = temp$9 + temp$10;
        temp$11 = virtualinvoke str.<java.lang.String: int length()>();
        temp$12 = targetSting / 2;
        temp$13 = temp$11 - temp$12;
        endOffset = temp$13;
        temp$14 = new java.lang.StringBuilder;
        specialinvoke temp$14.<java.lang.StringBuilder: void <init>(int)>(length);
        builder = temp$14;
        temp$15 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(-1, startOffset);
        temp$16 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$15);
        temp$17 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(middle);
        temp$18 = virtualinvoke str.<java.lang.String: java.lang.String substring(int)>(endOffset);
        temp$19 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$18);
        temp$20 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>();
        return temp$20;
    }
}
