public class WrapClass 
{
    private static final int transpositions(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence first, second;
        int transpositions, i, temp$0, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9;
        char temp$1, temp$2;

        first := @parameter0: java.lang.CharSequence;
        second := @parameter1: java.lang.CharSequence;
        transpositions = 0;
        i = 0;

     label0:
        nop;
        temp$0 = interfaceinvoke first.<java.lang.CharSequence: int length()>();
        if i <= temp$0 goto label1;

        goto label4;

     label1:
        nop;
        temp$1 = interfaceinvoke first.<java.lang.CharSequence: char charAt(int)>(i);
        temp$2 = interfaceinvoke second.<java.lang.CharSequence: char charAt(int)>(i);
        temp$3 = (int) temp$1;
        temp$4 = (int) temp$2;
        if temp$3 != temp$4 goto label2;

        goto label3;

     label2:
        nop;
        temp$5 = transpositions;
        temp$6 = temp$5 + 1;
        transpositions = temp$6;

     label3:
        nop;
        nop;
        temp$7 = i;
        temp$8 = temp$7 + 1;
        i = temp$8;
        goto label0;

     label4:
        nop;
        temp$9 = transpositions / 2;
        return temp$9;
    }
}
